!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@ethersproject/abi"),require("@ethersproject/constants"),require("@ethersproject/bignumber"),require("@ethersproject/address"),require("@ethersproject/bytes"),require("@ethersproject/abstract-signer"),require("lodash"),require("ethers"),require("@balancer-labs/sor"),require("@ethersproject/providers"),require("graphql-request"),require("graphql-tag"),require("axios"),require("@ethersproject/contracts"),require("@ethersproject/strings"),require("json-to-graphql-query")):"function"==typeof define&&define.amd?define(["exports","@ethersproject/abi","@ethersproject/constants","@ethersproject/bignumber","@ethersproject/address","@ethersproject/bytes","@ethersproject/abstract-signer","lodash","ethers","@balancer-labs/sor","@ethersproject/providers","graphql-request","graphql-tag","axios","@ethersproject/contracts","@ethersproject/strings","json-to-graphql-query"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["balancer-js"]={},e.abi,e.constants,e.bignumber,e.address,e.bytes,e.abstractSigner,e.lodash,e.ethers,e.sor,e.providers,e.graphqlRequest,e.gql,e.axios,e.contracts,e.strings,e.jsonToGraphqlQuery)}(this,(function(e,t,n,a,o,i,s,r,p,l,d,u,c,y,m,b,f){"use strict";function T(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function h(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var I,_,g,P,w,x,E=h(l),A=T(c),S=T(y);!function(e){e[e.RECOVERY_MODE=255]="RECOVERY_MODE"}(I||(I={}));class v{}v.recoveryModeExit=e=>t.defaultAbiCoder.encode(["uint256","uint256"],[I.RECOVERY_MODE,e]),e.StablePoolJoinKind=void 0,(_=e.StablePoolJoinKind||(e.StablePoolJoinKind={}))[_.INIT=0]="INIT",_[_.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",_[_.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",e.StablePhantomPoolJoinKind=void 0,(g=e.StablePhantomPoolJoinKind||(e.StablePhantomPoolJoinKind={}))[g.INIT=0]="INIT",g[g.COLLECT_PROTOCOL_FEES=1]="COLLECT_PROTOCOL_FEES",e.StablePoolExitKind=void 0,(P=e.StablePoolExitKind||(e.StablePoolExitKind={}))[P.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",P[P.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",P[P.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT";class k{constructor(){}}k.joinInit=n=>t.defaultAbiCoder.encode(["uint256","uint256[]"],[e.StablePoolJoinKind.INIT,n]),k.joinCollectProtocolFees=()=>t.defaultAbiCoder.encode(["uint256"],[e.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),k.joinExactTokensInForBPTOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.StablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,n,a]),k.joinTokenInForExactBPTOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.StablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,n,a]),k.exitExactBPTInForOneTokenOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.StablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,n,a]),k.exitExactBPTInForTokensOut=n=>t.defaultAbiCoder.encode(["uint256","uint256"],[e.StablePoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,n]),k.exitBPTInForExactTokensOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.StablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,n,a]),e.WeightedPoolJoinKind=void 0,(w=e.WeightedPoolJoinKind||(e.WeightedPoolJoinKind={}))[w.INIT=0]="INIT",w[w.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",w[w.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",w[w.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT=3]="ALL_TOKENS_IN_FOR_EXACT_BPT_OUT",e.WeightedPoolExitKind=void 0,(x=e.WeightedPoolExitKind||(e.WeightedPoolExitKind={}))[x.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",x[x.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",x[x.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT",x[x.MANAGEMENT_FEE_TOKENS_OUT=3]="MANAGEMENT_FEE_TOKENS_OUT";class B{constructor(){}}B.joinInit=n=>t.defaultAbiCoder.encode(["uint256","uint256[]"],[e.WeightedPoolJoinKind.INIT,n]),B.joinExactTokensInForBPTOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,n,a]),B.joinTokenInForExactBPTOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,n,a]),B.joinAllTokensInForExactBPTOut=n=>t.defaultAbiCoder.encode(["uint256","uint256"],[e.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT,n]),B.exitExactBPTInForOneTokenOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,n,a]),B.exitExactBPTInForTokensOut=n=>t.defaultAbiCoder.encode(["uint256","uint256"],[e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT,n]),B.exitBPTInForExactTokensOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,n,a]);class O{constructor(){}}O.exitForManagementFees=()=>t.defaultAbiCoder.encode(["uint256"],[e.WeightedPoolExitKind.MANAGEMENT_FEE_TOKENS_OUT]);var C,M;e.ComposableStablePoolJoinKind=void 0,(C=e.ComposableStablePoolJoinKind||(e.ComposableStablePoolJoinKind={}))[C.INIT=0]="INIT",C[C.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",C[C.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",e.ComposableStablePoolExitKind=void 0,(M=e.ComposableStablePoolExitKind||(e.ComposableStablePoolExitKind={}))[M.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",M[M.BPT_IN_FOR_EXACT_TOKENS_OUT=1]="BPT_IN_FOR_EXACT_TOKENS_OUT",M[M.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT=2]="EXACT_BPT_IN_FOR_ALL_TOKENS_OUT";class F{constructor(){}}F.joinInit=n=>t.defaultAbiCoder.encode(["uint256","uint256[]"],[e.ComposableStablePoolJoinKind.INIT,n]),F.joinCollectProtocolFees=()=>t.defaultAbiCoder.encode(["uint256"],[e.StablePhantomPoolJoinKind.COLLECT_PROTOCOL_FEES]),F.joinExactTokensInForBPTOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.ComposableStablePoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT,n,a]),F.joinTokenInForExactBPTOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.ComposableStablePoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT,n,a]),F.exitExactBPTInForOneTokenOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256","uint256"],[e.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,n,a]),F.exitExactBPTInForAllTokensOut=n=>t.defaultAbiCoder.encode(["uint256","uint256"],[e.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT,n]),F.exitBPTInForExactTokensOut=(n,a)=>t.defaultAbiCoder.encode(["uint256","uint256[]","uint256"],[e.ComposableStablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT,n,a]);var R="production"===process.env.NODE_ENV,N="Invariant failed";function D(e,t){if(!e){if(R)throw new Error(N);var n="function"==typeof t?t():t,a=n?"".concat(N,": ").concat(n):N;throw new Error(a)}}const L=e=>(D(66===e.length,"Invalid poolId length"),e.slice(0,42)),U=e=>{D(66===e.length,"Invalid poolId length");const t=parseInt(e[45]);return D(t<3,"Invalid pool specialization"),t},q=e=>(D(66===e.length,"Invalid poolId length"),a.BigNumber.from(`0x${e.slice(46)}`));var V;e.Network=void 0,(V=e.Network||(e.Network={}))[V.MAINNET=1]="MAINNET",V[V.GOERLI=5]="GOERLI",V[V["GÖRLI"]=5]="GÖRLI",V[V.OPTIMISM=10]="OPTIMISM",V[V.GNOSIS=100]="GNOSIS",V[V.POLYGON=137]="POLYGON",V[V.FANTOM=250]="FANTOM",V[V.BASE=8453]="BASE",V[V.ZKEVM=1101]="ZKEVM",V[V.ARBITRUM=42161]="ARBITRUM",V[V.AVALANCHE=43114]="AVALANCHE",V[V.SEPOLIA=11155111]="SEPOLIA",V[V.FRAXTAL=252]="FRAXTAL",V[V.MODE=34443]="MODE",V[V.BARTIO=80084]="BARTIO";const G={IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x9f19a375709baf0e8e35c2c5c65aca676c4c7191000200000000000000000022","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366"]},Investment:{AllowList:["0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool"},Stakable:{AllowList:[]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e":{name:"Balancer Stable USD",hasIcon:!0}}},W={[e.Network.GOERLI]:{IdsMap:{staBAL:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",bbAaveUSD:{v1:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",v2:"0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7"},veBAL:"0xf8a0623ab66f985effc1c69d05f1af4badb01b00000200000000000000000060"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:["0x22d398c68030ef6b1c55321cca6e0cecc5c93b2f000200000000000000000678"],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xb60e46d90f2de35f7062a27d3a98749414036d5d000200000000000000000061","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0xc957b1acceb21707b782eb8eee2ed8e20088463d000200000000000000000076","0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7","0x14f93df8a4e37bfdb49d2cec4789df7a010603d700000000000000000000011d","0x00a62d31b6c776b6813543bc99ff265f7222dbe100000000000000000000011e","0x0c925fce89a22e36ebd9b3c6e0262234e853d2f600000000000000000000019c"]},Investment:{AllowList:[]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0x44afeb87c871d8fea9398a026dea2bd3a13f5769":"stablePool","0xa55f73e2281c60206ba43a3590db07b8955832be":"stablePool","0xb48cc42c45d262534e46d5965a9ac496f1b7a830":"liquidityBootstrappingPool","0xb0c726778c3ae4b3454d85557a48e8fa502bdd6a":"liquidityBootstrappingPool","0x41e9036ae350baedcc7107760a020dca3c0731ec":"boostedPool","0xb848f50141f3d4255b37ac288c25c109104f2158":"composableStablePool","0x94f68b54191f62f781fe8298a8a5fa3ed772d227":"weightedPool"},Stakable:{AllowList:["0x16faf9f73748013155b7bc116a3008b57332d1e600020000000000000000005b","0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0x67f8fcb9d3c463da05de1392efdbb2a87f8599ea000200000000000000000059"]},Metadata:{"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f":{name:"Balancer Boosted Aave USD",hasIcon:!1}}},[e.Network.MAINNET]:{IdsMap:{staBAL:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",bbAaveUSD:{v1:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",v2:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"},veBAL:"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3","GyroE","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xf93579002dbe8046c43fefe86ec78b1112247bb80000000000000000000002bc","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d","0x5b3240b6be3e7487d61cd1afdfc7fe4fa1d81e6400000000000000000000037b"]},Investment:{AllowList:["0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"stablePool","0xf9ac7b9df2b3454e841110cce5550bd5ac6f875f":"composableStablePool","0xcc508a455f5b0073973107db6a878ddbdab957bc":"weightedPool"},Stakable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0x072f14b85add63488ddad88f855fda4a99d6ac9b000200000000000000000027","0x0b09dea16768f0799065c475be02919503cb2a3500020000000000000000001a","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000013","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x27c9f71cc31464b906e0006d4fcbc8900f48f15f00020000000000000000010f","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x350196326aeaa9b98f1903fb5e8fc2686f85318c000200000000000000000084","0x3e5fa9518ea95c3e533eb377c001702a9aacaa32000200000000000000000052","0x51735bdfbfe3fc13dea8dc6502e2e958989429610002000000000000000000a0","0x5d66fff62c17d841935b60df5f07f6cf79bd0f4700020000000000000000014c","0x5f7fa48d765053f8dd85e052843e12d23e3d7bc50002000000000000000000c0","0x702605f43471183158938c1a3e5f5a359d7b31ba00020000000000000000009f","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x7edde0cb05ed19e03a9a47cd5e53fc57fde1c80c0002000000000000000000c8","0x8f4205e1604133d1875a3e771ae7e4f2b086563900020000000000000000010e","0x90291319f1d4ea3ad4db0dd8fe9e12baf749e84500020000000000000000013c","0x96646936b91d6b9d7d0c47c496afbf3d6ec7b6f8000200000000000000000019","0x96ba9025311e2f47b840a1f68ed57a3df1ea8747000200000000000000000160","0xa02e4b3d18d4e6b8d18ac421fbc3dfff8933c40a00020000000000000000004b","0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e","0xbaeec99c90e3420ec6c1e7a769d2a856d2898e4d00020000000000000000008a","0xbf96189eee9357a95c7719f4f5047f76bde804e5000200000000000000000087","0xe2469f47ab58cf9cf59f9822e3c5de4950a41c49000200000000000000000089","0xe99481dc77691d8e2456e5f3f61c1810adfc1503000200000000000000000018","0xec60a5fef79a92c741cb74fdd6bfc340c0279b01000200000000000000000015","0xedf085f65b4f6c155e13155502ef925c9a756003000200000000000000000123","0xefaa1604e82e1b3af8430b90192c1b9e8197e377000200000000000000000021","0xf4c0dd9b82da36c07605df83c8a416f11724d88b000200000000000000000026","0xf5aaf7ee8c39b651cebf5f1f50c10631e78e0ef9000200000000000000000069","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x92762b42a06dcdddc5b7362cfb01e631c4d44b40000200000000000000000182","0xde8c195aa41c11a0c4787372defbbddaa31306d2000200000000000000000181","0x17ddd9646a69c9445cd8a9f921d4cd93bf50d108000200000000000000000159","0xc45d42f801105e861e86658648e3678ad7aa70f900010000000000000000011e","0x2d344a84bac123660b021eebe4eb6f12ba25fe8600020000000000000000018a","0xb460daa847c45f1c4a41cb05bfb3b51c92e41b36000200000000000000000194","0x5122e01d819e58bb2e22528c0d68d310f0aa6fd7000200000000000000000163","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0xe8cc7e765647625b95f59c15848379d10b9ab4af0002000000000000000001de","0x85370d9e3bb111391cc89f6de344e801760461830002000000000000000001ef","0xa7ff759dbef9f3efdd1d59beee44b966acafe214000200000000000000000180","0x3f7c10701b14197e2695dec6428a2ca4cf7fc3b800020000000000000000023c","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xcfca23ca9ca720b6e98e3eb9b6aa0ffc4a5c08b9000200000000000000000274","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x0578292cb20a443ba1cde459c985ce14ca2bdee5000100000000000000000269","0x8eb6c82c3081bbbd45dcac5afa631aac53478b7c000100000000000000000270","0x1b65fe4881800b91d4277ba738b567cbb200a60d0002000000000000000002cc","0x99a14324cfd525a34bbc93ac7e348929909d57fd00020000000000000000030e","0x9b532ab955417afd0d012eb9f7389457cd0ea712000000000000000000000338","0x48607651416a943bf5ac71c41be1420538e78f87000200000000000000000327","0x6a5ead5433a50472642cd268e584dafa5a394490000200000000000000000366","0x0fd5663d4893ae0d579d580584806aadd2dd0b8b000200000000000000000367","0x441b8a1980f2f2e43a9397099d15cc2fe6d3625000020000000000000000035f","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063":{name:"Balancer Stable USD",hasIcon:!0},"0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249":{name:"AuraBAL Stable Pool",hasIcon:!1}}},[e.Network.POLYGON]:{IdsMap:{xMatic:{v1:"0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4",v2:"0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"},stMatic:{v1:"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366",v2:"0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d"},mai4:{mai4:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",maiBbaUsd:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e"}},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3","GyroE","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb4670d1389c758e4380c4211bcbc85342688b9c50002000000000000000003d8","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0xb4b22bd6cdad0ab828be6f8a4086dfa54e9b373600020000000000000000058f","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x0b8319061732b34cab22445fa83b81f950e4b7ed000000000000000000000709","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xa48d164f6eb0edc68bd03b56fa59e12f24499ad10000000000000000000007c4"]},Investment:{AllowList:[""]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x41b953164995c11c81da73d212ed8af25741b7ac":"liquidityBootstrappingPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool","0xca96c4f198d343e251b1a01f3eba061ef3da73c1":"stablePool","0x136fd06fa01ecf624c7f2b3cb15742c1339dc2c4":"composableStablePool","0x0e39c3d9b2ec765efd9c5c70bb290b1fcd8536e3":"weightedPool"},Stakable:{AllowList:["0x0297e37f1873d2dab4487aa67cd56b58e2f27875000100000000000000000002","0x03cd191f589d12b0582a99808cf19851e468e6b500010000000000000000000a","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x10f21c9bd8128a29aa785ab2de0d044dcdd79436000200000000000000000059","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000032","0x36128d5436d2d70cab39c9af9cce146c38554ff0000100000000000000000008","0x5a6ae1fd70d04ba4a279fc219dfabc53825cb01d00020000000000000000020e","0x614b5038611729ed49e0ded154d8a5d3af9d1d9e00010000000000000000001d","0x7c9cf12d783821d5c63d8e9427af5c44bad92445000100000000000000000051","0x805ca3ccc61cc231851dee2da6aabff0a7714aa7000200000000000000000361","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb204bf10bc3a5435017d3db247f56da601dfe08a0002000000000000000000fe","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xce66904b68f1f070332cbc631de7ee98b650b499000100000000000000000009","0xcf354603a9aebd2ff9f33e1b04246d8ea204ae9500020000000000000000005a","0xdb1db6e248d7bb4175f6e5a382d0a03fe3dcc813000100000000000000000035","0xea4e073c8ac859f2994c07e627178719c8002dc00002000000000000000003dc","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0x2dbc9ab0160087ae59474fb7bed95b9e808fa6bc0001000000000000000003db","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x8f9dd2064eb38e8e40f2ab67bde27c0e16ea9b080002000000000000000004ca","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"]},Metadata:{}},[e.Network.ARBITRUM]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0xd89746affa5483627a87e55713ec1905114394950002000000000000000000bf","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159"]},Investment:{AllowList:[""]},Factories:{"0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xef44d6786b2b4d544b7850fe67ce6381626bf2d6":"stablePool","0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33":"composableStablePool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"weightedPool"},Stakable:{AllowList:["0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x0adeb25cb5920d4f7447af4a0428072edc2cee2200020000000000000000004a","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x1779900c7707885720d39aa741f4086886307e9e00020000000000000000004b","0x4a3a22a3e7fee0ffbb66f1c28bfac50f75546fc7000200000000000000000008","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0x64541216bafffeec8ea535bb71fbc927831d0595000100000000000000000002","0x651e00ffd5ecfa7f3d4f33d62ede0a97cf62ede2000200000000000000000006","0xb28670b3e7ad27bd41fb5938136bf9e9cba90d6500020000000000000000001e","0xb340b6b1a34019853cb05b2de6ee8ffd0b89a008000100000000000000000036","0xb5b77f1ad2b520df01612399258e7787af63025d000200000000000000000010","0xc2f082d33b5b8ef3a7e3de30da54efd3114512ac000200000000000000000017","0xc61ff48f94d801c1ceface0289085197b5ec44f000020000000000000000004d","0xcc65a812ce382ab909a11e434dbf75b34f1cc59d000200000000000000000001","0xe1b40094f1446722c424c598ac412d590e0b3ffb000200000000000000000076","0xb3028ca124b80cfe6e9ca57b70ef2f0ccc41ebd40002000000000000000000ba","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159","0x178e029173417b1f9c8bc16dcec6f697bc323746000200000000000000000158"]},Metadata:{}},[e.Network.GNOSIS]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX","Gyro2","Gyro3","GyroE","HighAmpComposableStable","FX"],Stable:{AllowList:["0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000004","0x707b7d4a1bae449d546dcab869256591bbb3d70b000000000000000000000000"]},Investment:{AllowList:[]},Factories:{},Stakable:{AllowList:[]},Metadata:{}}};var $,K,H,J,j,X,Y;e.PoolGaugesAttributes=void 0,($=e.PoolGaugesAttributes||(e.PoolGaugesAttributes={})).Id="id",$.Address="address",$.PoolId="poolId",e.PoolShareAttributes=void 0,(K=e.PoolShareAttributes||(e.PoolShareAttributes={})).Balance="balance",K.Id="id",K.PoolId="poolId",K.UserAddress="userAddress",e.GaugeShareAttributes=void 0,(H=e.GaugeShareAttributes||(e.GaugeShareAttributes={})).Id="id",H.UserAddress="user",H.GaugeId="gauge",H.Balance="balance",e.PoolSpecialization=void 0,(J=e.PoolSpecialization||(e.PoolSpecialization={}))[J.GeneralPool=0]="GeneralPool",J[J.MinimalSwapInfoPool=1]="MinimalSwapInfoPool",J[J.TwoTokenPool=2]="TwoTokenPool",e.UserBalanceOpKind=void 0,(j=e.UserBalanceOpKind||(e.UserBalanceOpKind={}))[j.DepositInternal=0]="DepositInternal",j[j.WithdrawInternal=1]="WithdrawInternal",j[j.TransferInternal=2]="TransferInternal",j[j.TransferExternal=3]="TransferExternal",e.PoolBalanceOpKind=void 0,(X=e.PoolBalanceOpKind||(e.PoolBalanceOpKind={}))[X.Withdraw=0]="Withdraw",X[X.Deposit=1]="Deposit",X[X.Update=2]="Update",e.PoolType=void 0,(Y=e.PoolType||(e.PoolType={})).Weighted="Weighted",Y.Investment="Investment",Y.Stable="Stable",Y.ComposableStable="ComposableStable",Y.MetaStable="MetaStable",Y.StablePhantom="StablePhantom",Y.LiquidityBootstrapping="LiquidityBootstrapping",Y.Element="Element",Y.Gyro2="Gyro2",Y.Gyro3="Gyro3",Y.GyroE="GyroE",Y.Managed="Managed",Y.AaveLinear="AaveLinear",Y.Linear="Linear",Y.EulerLinear="EulerLinear",Y.ERC4626Linear="ERC4626Linear",Y.BeefyLinear="BeefyLinear",Y.GearboxLinear="GearboxLinear",Y.MidasLinear="MidasLinear",Y.ReaperLinear="ReaperLinear",Y.SiloLinear="SiloLinear",Y.TetuLinear="TetuLinear",Y.YearnLinear="YearnLinear",Y.FX="FX";class z{constructor(){this.enableLogging=!0}static getInstance(){return z.instance||(z.instance=new z),z.instance}setLoggingEnabled(e){this.enableLogging=e}info(e){this.enableLogging}warn(e){this.enableLogging&&console.warn(`[WARN] ${e}`)}error(e){this.enableLogging&&console.error(`[ERROR] ${e}`)}time(e){this.enableLogging}timeEnd(e){this.enableLogging}}const Z=e=>e[0].map(((t,n)=>e.map((e=>e[n]))));class Q{constructor(e){this.ETH=n.AddressZero,this.isETH=e=>Q.isEqual(e,this.ETH),this.isWETH=e=>Q.isEqual(e,this.WETH),this.translateToERC20=e=>this.isETH(e)?this.WETH:e,this.WETH=o.getAddress(e)}sortTokens(e,...t){t.forEach((t=>D(e.length===t.length,"array length mismatch")));const n=e.map(this.translateToERC20),a=Z([n,...t]).sort((([e],[t])=>((e,t)=>e.toLowerCase()>t.toLowerCase()?1:-1)(e,t))),[o,...i]=Z(a);return[e.includes(this.ETH)?o.map((e=>this.isWETH(e)?this.ETH:e)):o,...i]}}Q.isEqual=(e,t)=>o.getAddress(e)===o.getAddress(t);const ee={"000":"ADD_OVERFLOW","001":"SUB_OVERFLOW","002":"SUB_UNDERFLOW","003":"MUL_OVERFLOW","004":"ZERO_DIVISION","005":"DIV_INTERNAL","006":"X_OUT_OF_BOUNDS","007":"Y_OUT_OF_BOUNDS","008":"PRODUCT_OUT_OF_BOUNDS","009":"INVALID_EXPONENT",100:"OUT_OF_BOUNDS",101:"UNSORTED_ARRAY",102:"UNSORTED_TOKENS",103:"INPUT_LENGTH_MISMATCH",104:"ZERO_TOKEN",200:"MIN_TOKENS",201:"MAX_TOKENS",202:"MAX_SWAP_FEE_PERCENTAGE",203:"MIN_SWAP_FEE_PERCENTAGE",204:"MINIMUM_BPT",205:"CALLER_NOT_VAULT",206:"UNINITIALIZED",207:"BPT_IN_MAX_AMOUNT",208:"BPT_OUT_MIN_AMOUNT",209:"EXPIRED_PERMIT",210:"NOT_TWO_TOKENS",211:"DISABLED",300:"MIN_AMP",301:"MAX_AMP",302:"MIN_WEIGHT",303:"MAX_STABLE_TOKENS",304:"MAX_IN_RATIO",305:"MAX_OUT_RATIO",306:"MIN_BPT_IN_FOR_TOKEN_OUT",307:"MAX_OUT_BPT_FOR_TOKEN_IN",308:"NORMALIZED_WEIGHT_INVARIANT",309:"INVALID_TOKEN",310:"UNHANDLED_JOIN_KIND",311:"ZERO_INVARIANT",312:"ORACLE_INVALID_SECONDS_QUERY",313:"ORACLE_NOT_INITIALIZED",314:"ORACLE_QUERY_TOO_OLD",315:"ORACLE_INVALID_INDEX",316:"ORACLE_BAD_SECS",317:"AMP_END_TIME_TOO_CLOSE",318:"AMP_ONGOING_UPDATE",319:"AMP_RATE_TOO_HIGH",320:"AMP_NO_ONGOING_UPDATE",321:"STABLE_INVARIANT_DIDNT_CONVERGE",322:"STABLE_GET_BALANCE_DIDNT_CONVERGE",323:"RELAYER_NOT_CONTRACT",324:"BASE_POOL_RELAYER_NOT_CALLED",325:"REBALANCING_RELAYER_REENTERED",326:"GRADUAL_UPDATE_TIME_TRAVEL",327:"SWAPS_DISABLED",328:"CALLER_IS_NOT_LBP_OWNER",329:"PRICE_RATE_OVERFLOW",330:"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED",331:"WEIGHT_CHANGE_TOO_FAST",332:"LOWER_GREATER_THAN_UPPER_TARGET",333:"UPPER_TARGET_TOO_HIGH",334:"UNHANDLED_BY_LINEAR_POOL",335:"OUT_OF_TARGET_RANGE",336:"UNHANDLED_EXIT_KIND ",337:"UNAUTHORIZED_EXIT",338:"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE",339:"UNHANDLED_BY_MANAGED_POOL",340:"UNHANDLED_BY_PHANTOM_POOL",341:"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER",342:"INVALID_INITIALIZATION",343:"OUT_OF_NEW_TARGET_RANGE",344:"UNAUTHORIZED_OPERATION",345:"UNINITIALIZED_POOL_CONTROLLER",400:"REENTRANCY",401:"SENDER_NOT_ALLOWED",402:"PAUSED",403:"PAUSE_WINDOW_EXPIRED",404:"MAX_PAUSE_WINDOW_DURATION",405:"MAX_BUFFER_PERIOD_DURATION",406:"INSUFFICIENT_BALANCE",407:"INSUFFICIENT_ALLOWANCE",408:"ERC20_TRANSFER_FROM_ZERO_ADDRESS",409:"ERC20_TRANSFER_TO_ZERO_ADDRESS",410:"ERC20_MINT_TO_ZERO_ADDRESS",411:"ERC20_BURN_FROM_ZERO_ADDRESS",412:"ERC20_APPROVE_FROM_ZERO_ADDRESS",413:"ERC20_APPROVE_TO_ZERO_ADDRESS",414:"ERC20_TRANSFER_EXCEEDS_ALLOWANCE",415:"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",416:"ERC20_TRANSFER_EXCEEDS_BALANCE",417:"ERC20_BURN_EXCEEDS_ALLOWANCE",418:"SAFE_ERC20_CALL_FAILED",419:"ADDRESS_INSUFFICIENT_BALANCE",420:"ADDRESS_CANNOT_SEND_VALUE",421:"SAFE_CAST_VALUE_CANT_FIT_INT256",422:"GRANT_SENDER_NOT_ADMIN",423:"REVOKE_SENDER_NOT_ADMIN",424:"RENOUNCE_SENDER_NOT_ALLOWED",425:"BUFFER_PERIOD_EXPIRED",426:"CALLER_IS_NOT_OWNER",427:"NEW_OWNER_IS_ZERO",428:"CODE_DEPLOYMENT_FAILED",429:"CALL_TO_NON_CONTRACT",430:"LOW_LEVEL_CALL_FAILED",431:"NOT_PAUSED",432:"ADDRESS_ALREADY_ALLOWLISTED",433:"ADDRESS_NOT_ALLOWLISTED",434:"ERC20_BURN_EXCEEDS_BALANCE",500:"INVALID_POOL_ID",501:"CALLER_NOT_POOL",502:"SENDER_NOT_ASSET_MANAGER",503:"USER_DOESNT_ALLOW_RELAYER",504:"INVALID_SIGNATURE",505:"EXIT_BELOW_MIN",506:"JOIN_ABOVE_MAX",507:"SWAP_LIMIT",508:"SWAP_DEADLINE",509:"CANNOT_SWAP_SAME_TOKEN",510:"UNKNOWN_AMOUNT_IN_FIRST_SWAP",511:"MALCONSTRUCTED_MULTIHOP_SWAP",512:"INTERNAL_BALANCE_OVERFLOW",513:"INSUFFICIENT_INTERNAL_BALANCE",514:"INVALID_ETH_INTERNAL_BALANCE",515:"INVALID_POST_LOAN_BALANCE",516:"INSUFFICIENT_ETH",517:"UNALLOCATED_ETH",518:"ETH_TRANSFER",519:"CANNOT_USE_ETH_SENTINEL",520:"TOKENS_MISMATCH",521:"TOKEN_NOT_REGISTERED",522:"TOKEN_ALREADY_REGISTERED",523:"TOKENS_ALREADY_SET",524:"TOKENS_LENGTH_MUST_BE_2",525:"NONZERO_TOKEN_BALANCE",526:"BALANCE_TOTAL_OVERFLOW",527:"POOL_NO_TOKENS",528:"INSUFFICIENT_FLASH_LOAN_BALANCE",600:"SWAP_FEE_PERCENTAGE_TOO_HIGH",601:"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",602:"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT"};class te{constructor(){}}async function ne(e){if("string"==typeof e)return e;if(s.Signer.isSigner(e))return e.getAddress();if(e.address)return e.address;throw new Error("Could not read account address")}var ae;te.isErrorCode=e=>{if(!e.includes("BAL#"))return!1;const t=e.replace("BAL#","");return Object.keys(ee).includes(t)},te.parseErrorCode=e=>{if(!e.includes("BAL#"))throw new Error("Error code not found");const t=e.replace("BAL#",""),n=ee[t];if(!n)throw new Error("Error code not found");return n},te.tryParseErrorCode=e=>{try{return te.parseErrorCode(e)}catch{return e}},te.isBalancerError=e=>Object.values(ee).includes(e),te.encodeError=e=>{const t=Object.entries(ee).find((([,t])=>t===e));if(!t)throw Error("Error message not found");return`BAL#${t[0]}`},e.RelayerAction=void 0,(ae=e.RelayerAction||(e.RelayerAction={})).JoinPool="JoinPool",ae.ExitPool="ExitPool",ae.Swap="Swap",ae.BatchSwap="BatchSwap",ae.SetRelayerApproval="SetRelayerApproval";class oe{constructor(){}}oe.encodeCalldataAuthorization=(e,t,n)=>{const a=i.hexZeroPad(i.hexValue(t),32).slice(2),{v:o,r:s,s:r}=i.splitSignature(n);return`${e}${a}${i.hexZeroPad(i.hexValue(o),32).slice(2)}${s.slice(2)}${r.slice(2)}`},oe.signJoinAuthorization=(t,n,a,o,i,s)=>oe.signAuthorizationFor(e.RelayerAction.JoinPool,t,n,a,o,i,s),oe.signExitAuthorization=(t,n,a,o,i,s)=>oe.signAuthorizationFor(e.RelayerAction.ExitPool,t,n,a,o,i,s),oe.signSwapAuthorization=(t,n,a,o,i,s)=>oe.signAuthorizationFor(e.RelayerAction.Swap,t,n,a,o,i,s),oe.signBatchSwapAuthorization=(t,n,a,o,i,s)=>oe.signAuthorizationFor(e.RelayerAction.BatchSwap,t,n,a,o,i,s),oe.signSetRelayerApprovalAuthorization=(t,n,a,o,i,s)=>oe.signAuthorizationFor(e.RelayerAction.SetRelayerApproval,t,n,a,o,i,s),oe.signAuthorizationFor=async(e,t,a,o,i,s=n.MaxUint256,r)=>{const{chainId:p}=await t.provider.getNetwork();if(!r){const e=await a.getAddress();r=await t.getNextNonce(e)}const l={name:"Balancer V2 Vault",version:"1",chainId:p,verifyingContract:t.address},d={[e]:[{name:"calldata",type:"bytes"},{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u={calldata:i,sender:await ne(o),nonce:r.toString(),deadline:s.toString()};return a._signTypedData(l,d,u)};class ie{constructor(){}}ie.signSetMinterApproval=async(e,t,o,s,r=n.MaxUint256,p)=>{const{chainId:l}=await e.provider.getNetwork();if(!p){const t=await s.getAddress();p=await e.getNextNonce(t)}const d={name:"Balancer Minter",version:"1",chainId:l,verifyingContract:e.address},u={minter:await ne(t),approval:o,nonce:p.toString(),deadline:r.toString()},c=await s._signTypedData(d,{SetMinterApproval:[{name:"minter",type:"address"},{name:"approval",type:"bool"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u);return{...i.splitSignature(c),deadline:a.BigNumber.from(r)}};const se=BigInt(0),re=BigInt(1),pe=BigInt("1000000000000000000"),le=(e,t)=>{if(!e)throw new Error(t)};function de(e){const t=BigInt(18)-e;return pe*BigInt(10)**t}function ue(e,t){return be.mulDownFixed(e,t)}function ce(e,t){const n=new Array(e.length);for(let a=0;a<e.length;++a)n[a]=be.mulDownFixed(e[a],t[a]);return n}function ye(e,t){return be.divDownFixed(e,t)}function me(e,t){const n=new Array(e.length);for(let a=0;a<e.length;++a)n[a]=be.divDownFixed(e[a],t[a]);return n}class be{static add(e,t){const n=e+t;return le(t>=0&&n>=e||t<0&&n<e,"Errors.ADD_OVERFLOW"),n}static sub(e,t){le(t<=e,"Errors.SUB_OVERFLOW");return e-t}static max(e){if(0===e.length)throw new Error("Errors.EMPTY_ARRAY");return 1===e.length?e[0]:e.reduce(((e,t)=>t>e?t:e))}static min(e,t){return e<t?e:t}static mul(e,t){const n=e*t;return le(e==se||n/e==t,"Errors.MUL_OVERFLOW"),n}static div(e,t,n){return n?this.divUp(e,t):this.divDown(e,t)}static divDown(e,t){return le(t!=se,"Errors.ZERO_DIVISION"),e/t}static divUp(e,t){return le(t!=se,"Errors.ZERO_DIVISION"),e==se?se:re+(e-re)/t}static mulUpFixed(e,t){const n=e*t;return le(e==se||n/e==t,"Errors.MUL_OVERFLOW"),n==se?se:(n-re)/pe+re}static divDownFixed(e,t){if(le(t!=se,"Errors.ZERO_DIVISION"),e==se)return se;return e*pe/t}static divUpFixed(e,t){if(le(t!=se,"Errors.ZERO_DIVISION"),e==se)return se;{const n=e*pe;return le(n/e==pe,"Errors.DIV_INTERNAL"),(n-re)/t+re}}static powUpFixed(e,t){const n=fe.pow(e,t),a=this.add(this.mulUpFixed(n,this.MAX_POW_RELATIVE_ERROR),re);return this.add(n,a)}static complementFixed(e){return e<pe?pe-e:se}static mulDownFixed(e,t){const n=e*t;return le(e==se||n/e==t,"Errors.MUL_OVERFLOW"),n/pe}}be.MAX_POW_RELATIVE_ERROR=BigInt(1e4);class fe{static pow(e,t){if(t===se)return this.ONE_18;if(e==se)return se;le(e<BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819968"),"Errors.X_OUT_OF_BOUNDS");const n=e;le(t<this.MILD_EXPONENT_BOUND,"Errors.Y_OUT_OF_BOUNDS");const a=t;let o;if(this.LN_36_LOWER_BOUND<n&&n<this.LN_36_UPPER_BOUND){const e=this._ln_36(n);o=e/this.ONE_18*a+e%this.ONE_18*a/this.ONE_18}else o=this._ln(n)*a;return o/=this.ONE_18,le(this.MIN_NATURAL_EXPONENT<=o&&o<=this.MAX_NATURAL_EXPONENT,"Errors.PRODUCT_OUT_OF_BOUNDS"),this.exp(o)}static exp(e){if(le(e>=this.MIN_NATURAL_EXPONENT&&e<=this.MAX_NATURAL_EXPONENT,"Errors.INVALID_EXPONENT"),e<0)return this.ONE_18*this.ONE_18/this.exp(BigInt(-1)*e);let t;e>=this.x0?(e-=this.x0,t=this.a0):e>=this.x1?(e-=this.x1,t=this.a1):t=BigInt(1),e*=BigInt(100);let n=this.ONE_20;e>=this.x2&&(e-=this.x2,n=n*this.a2/this.ONE_20),e>=this.x3&&(e-=this.x3,n=n*this.a3/this.ONE_20),e>=this.x4&&(e-=this.x4,n=n*this.a4/this.ONE_20),e>=this.x5&&(e-=this.x5,n=n*this.a5/this.ONE_20),e>=this.x6&&(e-=this.x6,n=n*this.a6/this.ONE_20),e>=this.x7&&(e-=this.x7,n=n*this.a7/this.ONE_20),e>=this.x8&&(e-=this.x8,n=n*this.a8/this.ONE_20),e>=this.x9&&(e-=this.x9,n=n*this.a9/this.ONE_20);let a,o=this.ONE_20;return a=e,o+=a,a=a*e/this.ONE_20/BigInt(2),o+=a,a=a*e/this.ONE_20/BigInt(3),o+=a,a=a*e/this.ONE_20/BigInt(4),o+=a,a=a*e/this.ONE_20/BigInt(5),o+=a,a=a*e/this.ONE_20/BigInt(6),o+=a,a=a*e/this.ONE_20/BigInt(7),o+=a,a=a*e/this.ONE_20/BigInt(8),o+=a,a=a*e/this.ONE_20/BigInt(9),o+=a,a=a*e/this.ONE_20/BigInt(10),o+=a,a=a*e/this.ONE_20/BigInt(11),o+=a,a=a*e/this.ONE_20/BigInt(12),o+=a,n*o/this.ONE_20*t/BigInt(100)}static _ln_36(e){const t=((e*=this.ONE_18)-this.ONE_36)*this.ONE_36/(e+this.ONE_36),n=t*t/this.ONE_36;let a=t,o=a;return a=a*n/this.ONE_36,o+=a/BigInt(3),a=a*n/this.ONE_36,o+=a/BigInt(5),a=a*n/this.ONE_36,o+=a/BigInt(7),a=a*n/this.ONE_36,o+=a/BigInt(9),a=a*n/this.ONE_36,o+=a/BigInt(11),a=a*n/this.ONE_36,o+=a/BigInt(13),a=a*n/this.ONE_36,o+=a/BigInt(15),o*BigInt(2)}static _ln(e){if(e<this.ONE_18)return BigInt(-1)*this._ln(this.ONE_18*this.ONE_18/e);let t=se;e>=this.a0*this.ONE_18&&(e/=this.a0,t+=this.x0),e>=this.a1*this.ONE_18&&(e/=this.a1,t+=this.x1),t*=BigInt(100),(e*=BigInt(100))>=this.a2&&(e=e*this.ONE_20/this.a2,t+=this.x2),e>=this.a3&&(e=e*this.ONE_20/this.a3,t+=this.x3),e>=this.a4&&(e=e*this.ONE_20/this.a4,t+=this.x4),e>=this.a5&&(e=e*this.ONE_20/this.a5,t+=this.x5),e>=this.a6&&(e=e*this.ONE_20/this.a6,t+=this.x6),e>=this.a7&&(e=e*this.ONE_20/this.a7,t+=this.x7),e>=this.a8&&(e=e*this.ONE_20/this.a8,t+=this.x8),e>=this.a9&&(e=e*this.ONE_20/this.a9,t+=this.x9),e>=this.a10&&(e=e*this.ONE_20/this.a10,t+=this.x10),e>=this.a11&&(e=e*this.ONE_20/this.a11,t+=this.x11);const n=(e-this.ONE_20)*this.ONE_20/(e+this.ONE_20),a=n*n/this.ONE_20;let o=n,i=o;return o=o*a/this.ONE_20,i+=o/BigInt(3),o=o*a/this.ONE_20,i+=o/BigInt(5),o=o*a/this.ONE_20,i+=o/BigInt(7),o=o*a/this.ONE_20,i+=o/BigInt(9),o=o*a/this.ONE_20,i+=o/BigInt(11),i*=BigInt(2),(t+i)/BigInt(100)}}fe.ONE_18=BigInt("1000000000000000000"),fe.ONE_20=BigInt("100000000000000000000"),fe.ONE_36=BigInt("1000000000000000000000000000000000000"),fe.MAX_NATURAL_EXPONENT=BigInt("130000000000000000000"),fe.MIN_NATURAL_EXPONENT=BigInt("-41000000000000000000"),fe.LN_36_LOWER_BOUND=BigInt(fe.ONE_18)-BigInt("100000000000000000"),fe.LN_36_UPPER_BOUND=BigInt(fe.ONE_18)+BigInt("100000000000000000"),fe.MILD_EXPONENT_BOUND=BigInt(2)**BigInt(254)/fe.ONE_20,fe.x0=BigInt("128000000000000000000"),fe.a0=BigInt("38877084059945950922200000000000000000000000000000000000"),fe.x1=BigInt("64000000000000000000"),fe.a1=BigInt("6235149080811616882910000000"),fe.x2=BigInt("3200000000000000000000"),fe.a2=BigInt("7896296018268069516100000000000000"),fe.x3=BigInt("1600000000000000000000"),fe.a3=BigInt("888611052050787263676000000"),fe.x4=BigInt("800000000000000000000"),fe.a4=BigInt("298095798704172827474000"),fe.x5=BigInt("400000000000000000000"),fe.a5=BigInt("5459815003314423907810"),fe.x6=BigInt("200000000000000000000"),fe.a6=BigInt("738905609893065022723"),fe.x7=BigInt("100000000000000000000"),fe.a7=BigInt("271828182845904523536"),fe.x8=BigInt("50000000000000000000"),fe.a8=BigInt("164872127070012814685"),fe.x9=BigInt("25000000000000000000"),fe.a9=BigInt("128402541668774148407"),fe.x10=BigInt("12500000000000000000"),fe.a10=BigInt("113314845306682631683"),fe.x11=BigInt("6250000000000000000"),fe.a11=BigInt("106449445891785942956");const Te=(e,t,o)=>{var i;let s=o?e.tokens.map((e=>e.address===t?n.AddressZero:e.address)):e.tokens.map((e=>e.address)),r=e.tokens.map((e=>{var t;return null!==(t=e.decimals)&&void 0!==t?t:18})),p=e.tokens.map((e=>a.parseFixed(e.balance,e.decimals).toBigInt())),l=e.tokens.map((e=>{var t;return a.parseFixed(null!==(t=e.weight)&&void 0!==t?t:"1",18).toBigInt()})),d=e.tokens.map((e=>{var t;return a.parseFixed(null!==(t=e.priceRate)&&void 0!==t?t:"1",18).toBigInt()})),u=r.map((e=>de(BigInt(e)))),c=u.map(((e,t)=>be.mulDownFixed(e,d[t]))),y=ce(p,c);if(t){const e=new Q(t);[s,r,c,u,p,y,l,d]=e.sortTokens(s,r,c,u,p,y,l,d)}const m=a.parseFixed(null!==(i=e.amp)&&void 0!==i?i:"1",3).toBigInt(),b=y.indexOf(be.max(y)),f=[...c],T=[...u],h=[...s],I=[...p],_=[...d],g=[...y],P=s.indexOf(e.address);return-1!==P&&(f.splice(P,1),T.splice(P,1),h.splice(P,1),I.splice(P,1),_.splice(P,1),g.splice(P,1)),{bptIndex:P,higherBalanceTokenIndex:b,ampWithPrecision:m,balancesEvm:p,balancesEvmWithoutBpt:I,priceRates:d,priceRatesWithoutBpt:_,swapFeeEvm:a.parseFixed(e.swapFee,18).toBigInt(),poolTokens:s,poolTokensWithoutBpt:h,weights:l,scalingFactors:c,scalingFactorsWithoutBpt:f,scalingFactorsRaw:u,scalingFactorsRawWithoutBpt:T,upScaledBalances:y,upScaledBalancesWithoutBpt:g,totalSharesEvm:a.parseFixed(e.totalShares||"0",18).toBigInt()}},he={Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",WETH:"0x0000000000000000000000000000000000000000",BAL:"0x0000000000000000000000000000000000000000"}},Ie={[e.Network.GOERLI]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","USDT","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",WETH:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",BAL:"0xfA8449189744799aD2AcE7e0EBAC8BB7575eff47",bbaUSD:"0x13ACD41C585d7EbB4a9460f7C8f50BE60DC080Cd"},PriceChainMap:{"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","0x37f03a12241e9fd3658ad6777d289c3fb8512bc9":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","0xfa8449189744799ad2ace7e0ebac8bb7575eff47":"0xba100000625a3754423978a60c9317c58a424e3d","0xe0c9275e44ea80ef17579d33c55136b7da269aeb":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x8c9e6c40d3402480ace624730524facc5482798c":"0x6b175474e89094c44da98b954eedeac495271d0f","0x1f1f156e0317167c11aa412e3d1435ea29dc3cce":"0xdac17f958d2ee523a2206206994597c13d831ec7","0x4cb1892fddf14f772b2e39e299f44b2e5da90d04":"0x3ed3b47dd13ec9a98b44e6204a523e766b225811","0x811151066392fd641fe74a9b55a712670572d161":"0xbcca60bb61934080951369a648fb03df4f96263c","0x89534a24450081aa267c79b07411e9617d984052":"0x028171bca77440897b824ca71d1c56cac55b68a3","0x829f35cebbcd47d3c120793c12f7a232c903138b":"0x956f47f50a910163d8bf957cf5846d573e7f87ca","0xff386a3d08f80ac38c77930d173fa56c6286dc8b":"0x6810e776880c02933d47db1b9fc05908e5386b96"}},[e.Network.MAINNET]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",WETH:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",BAL:"0xba100000625a3754423978a60c9317c58a424e3d",bbaUSD:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2",bbaUSDv2:"0xA13a9247ea42D743238089903570127DdA72fE44"}},[e.Network.POLYGON]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",WETH:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",BAL:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3"}},[e.Network.ARBITRUM]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",WETH:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",BAL:"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8"}},[e.Network.GNOSIS]:{Popular:{Symbols:["xDAI","WXDAI","WETH","BAL"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",WETH:"0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1",BAL:"0x7eF541E2a22058048904fE5744f9c7E4C57AF717"}}};function _e(e){return Ie[e]?Ie[e]:he}let ge=!1,Pe=!1;const we={debug:1,default:2,info:2,warning:3,error:4,off:5};let xe=we.default,Ee=null;const Ae=function(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach((t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(n){e.push(t)}})),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}();var Se,ve;!function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"}(Se||(Se={})),function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"}(ve||(ve={}));const ke="0123456789abcdef";class Be{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){const n=e.toLowerCase();null==we[n]&&this.throwArgumentError("invalid log level name","logLevel",e),xe>we[n]||console.log.apply(console,t)}debug(...e){this._log(Be.levels.DEBUG,e)}info(...e){this._log(Be.levels.INFO,e)}warn(...e){this._log(Be.levels.WARNING,e)}makeError(e,t,n){if(Pe)return this.makeError("censored error",t,{});t||(t=Be.errors.UNKNOWN_ERROR),n||(n={});const a=[];Object.keys(n).forEach((e=>{const t=n[e];try{if(t instanceof Uint8Array){let n="";for(let e=0;e<t.length;e++)n+=ke[t[e]>>4],n+=ke[15&t[e]];a.push(e+"=Uint8Array(0x"+n+")")}else a.push(e+"="+JSON.stringify(t))}catch(t){a.push(e+"="+JSON.stringify(n[e].toString()))}})),a.push(`code=${t}`),a.push(`version=${this.version}`);const o=e;let i="";switch(t){case ve.NUMERIC_FAULT:{i="NUMERIC_FAULT";const t=e;switch(t){case"overflow":case"underflow":case"division-by-zero":i+="-"+t;break;case"negative-power":case"negative-width":i+="-unsupported";break;case"unbound-bitwise-result":i+="-unbound-result"}break}case ve.CALL_EXCEPTION:case ve.INSUFFICIENT_FUNDS:case ve.MISSING_NEW:case ve.NONCE_EXPIRED:case ve.REPLACEMENT_UNDERPRICED:case ve.TRANSACTION_REPLACED:case ve.UNPREDICTABLE_GAS_LIMIT:i=t}i&&(e+=" [ See: https://links.ethers.org/v5-errors-"+i+" ]"),a.length&&(e+=" ("+a.join(", ")+")");const s=new Error(e);return s.reason=o,s.code=t,Object.keys(n).forEach((function(e){s[e]=n[e]})),s}throwError(e,t,n){throw this.makeError(e,t,n)}throwArgumentError(e,t,n){return this.throwError(e,Be.errors.INVALID_ARGUMENT,{argument:t,value:n})}assert(e,t,n,a){e||this.throwError(t,n,a)}assertArgument(e,t,n,a){e||this.throwArgumentError(t,n,a)}checkNormalize(e){Ae&&this.throwError("platform missing String.prototype.normalize",Be.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:Ae})}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,Be.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,Be.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,n){n=n?": "+n:"",e<t&&this.throwError("missing argument"+n,Be.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+n,Be.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){e!==Object&&null!=e||this.throwError("missing new",Be.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",Be.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):e!==Object&&null!=e||this.throwError("missing new",Be.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return Ee||(Ee=new Be("logger/5.7.0")),Ee}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",Be.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),ge){if(!e)return;this.globalLogger().throwError("error censorship permanent",Be.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}Pe=!!e,ge=!!t}static setLogLevel(e){const t=we[e.toLowerCase()];null!=t?xe=t:Be.globalLogger().warn("invalid log level - "+e)}static from(e){return new Be(e)}}Be.errors=ve,Be.levels=Se;const Oe=new Be("units/5.7.0"),Ce=["wei","kwei","mwei","gwei","szabo","finney","ether"];function Me(e,t){if("string"==typeof t){const e=Ce.indexOf(t);-1!==e&&(t=3*e)}return a.formatFixed(e,null!=t?t:18)}function Fe(e,t){if("string"!=typeof e&&Oe.throwArgumentError("value must be a string","value",e),"string"==typeof t){const e=Ce.indexOf(t);-1!==e&&(t=3*e)}return a.parseFixed(e,null!=t?t:18)}const Re={[e.Network.MAINNET]:{waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6"},[e.Network.POLYGON]:{wamDAI:"0xee029120c72b0607344f35b17cdd90025e647b00",wamUSDC:"0x221836a597948dce8f3568e044ff123108acc42a",wamUSDT:"0x19c60a251e525fa88cd6f3768416a8024e98fc19"}},Ne={[e.Network.MAINNET]:{[Re[e.Network.MAINNET].waUSDT]:{aToken:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",underlying:"0xdac17f958d2ee523a2206206994597c13d831ec7"},[Re[e.Network.MAINNET].waUSDC]:{aToken:"0xbcca60bb61934080951369a648fb03df4f96263c",underlying:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},[Re[e.Network.MAINNET].waDAI]:{aToken:"0x028171bca77440897b824ca71d1c56cac55b68a3",underlying:"0x6b175474e89094c44da98b954eedeac495271d0f"}},[e.Network.POLYGON]:{[Re[e.Network.POLYGON].wamUSDT]:{aToken:"0x60d55f02a771d515e077c9c2403a1ef324885cec",underlying:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f"},[Re[e.Network.POLYGON].wamUSDC]:{aToken:"0x1a13f4ca1d028320a707d99520abfefca3998b7f",underlying:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174"},[Re[e.Network.POLYGON].wamDAI]:{aToken:"0x27f8d03b3a2196956ed754badc28d73be8830a6e",underlying:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063"}}},De=new t.Interface(["function rate() view returns (uint256)"]);class Le{constructor(e,t){this.multicall=e,this.network=t}async fetch(e){const t=Object.values(Re[e]),n=t.map((e=>({target:e,callData:De.encodeFunctionData("rate",[])}))),[,a]=await this.multicall.callStatic.aggregate(n);return t.reduce(((e,t,n)=>(e[t]||(e[t]="0x"==a[n]?0:parseFloat(Me(a[n],27))),e)),{})}async getRate(e){return 1}}function Ue(e,t){let n=e.toLowerCase();return n=qe(n,t),n=Ve(n,t),n}const qe=(e,t)=>{const n=_e(t).PriceChainMap;return n&&n[e.toLowerCase()]||e},Ve=(e,t)=>{const n=e.toLocaleLowerCase(),a=t;return null!=Ne[a]&&null!=Ne[a]&&Object.keys(Ne[a]).includes(n)?Ne[a][n].aToken:n},Ge=(e,t)=>{const o=t.filter(((t,a)=>e[a]===n.AddressZero));return o[0]?a.BigNumber.from(o[0]):a.BigNumber.from(0)};class We{constructor(e,t=200,n=100){this.fn=e,this.wait=t,this.limit=n,this.requestSets=[],this.promisedCalls=[],this.promisedCount=0,this.debounceCancel=()=>{}}fetch(e){var t,n;return(t=this.requestSets)[n=this.promisedCount]||(t[n]=new Set),e&&this.requestSets[this.promisedCount].add(e),this.requestSets[this.promisedCount].size>=this.limit?this.execute(0):this.promisedCalls[this.promisedCount]?this.promisedCalls[this.promisedCount].promise:this.execute(this.wait)}execute(e=0){this.promisedCalls[this.promisedCount]||(this.promisedCalls[this.promisedCount]=(()=>{let e=()=>{},t=()=>{};return{promise:new Promise(((n,a)=>{[e,t]=[n,a]})),reject:t,resolve:e}})());const{promise:t,resolve:n,reject:a}=this.promisedCalls[this.promisedCount];this.timeout&&clearTimeout(this.timeout);const o=()=>{const e=[...this.requestSets[this.promisedCount]];this.promisedCount++,this.fn(e).then((e=>{n(e),this.debounceCancel=()=>{}})).catch((e=>{e.response&&e.response.data&&e.response.data.error&&(e=e.response.data.error),a(e)}))};return e>0?this.timeout=setTimeout(o.bind(this),e):o(),this.debounceCancel=()=>{this.timeout&&clearTimeout(this.timeout),a("Cancelled"),delete this.promisedCalls[this.promisedCount]},t}}function $e(e,t){const n=new RegExp(`[0-9]+\\.?[0-9]{0,${t}}`),o=e.match(n);let i=e;return o&&(i=o[0]),a.parseFixed(i,t)}function Ke(e,t){return a.formatFixed(e,t).replace(/(.0$)/,"")}const He=a.BigNumber.from("10000"),Je=(e,t)=>e.mul(t).div(He),je=(e,t)=>{const n=Je(e,t);return e.sub(n)},Xe=(e,t)=>{const n=Je(e,t);return e.add(n)},Ye=(e,t)=>o.getAddress(e)===o.getAddress(t);function ze(e,t,n){return t<0||t>e.length?e:[...e.slice(0,t),n,...e.slice(t)]}function Ze(e,t,n){return t<0||t>=e.length?e:[...e.slice(0,t),n,...e.slice(t+1)]}function Qe(e,t){const n=[...e];return t<0||t>=e.length||n.splice(t,1),n}function et(e,t,...n){if(e.length!==t.length||n.some((e=>e.length!==t.length)))throw new Error("Array length mismatch");const a=e.map((e=>t.indexOf(e)));if(a.indexOf(-1)>=0)throw new Error("Invalid reference or original array");const o=[];return a.forEach(((e,t)=>{n.forEach(((n,a)=>{o[a]||(o[a]=[]),o[a][t]=n[e]}))})),o}function tt(t){const n=Object.values(e.PoolType);return!(!t.includes("Linear")||!n.includes(t))}const nt=({receipt:e,to:t,contractInterface:n,logName:a})=>{const o=e.logs.filter((e=>Ye(e.address,t))).map((e=>{try{return n.parseLog(e)}catch(e){return z.getInstance().warn(e),null}})).find((e=>(null==e?void 0:e.name)===a));if(!o)throw new Error("Event not found in logs");return o},at=()=>`0x${Array(8).fill(null).map((()=>Math.random().toString(16).slice(2,10))).join("")}`;class ot{format(e){return e}}class it{constructor(){this.operatorMap={gt:"_gt",lt:"_lt",eq:"",in:"_in",not_in:"_not_in",contains:"_contains"}}format(e){const t={};return e.where&&Object.entries(e.where).forEach((([e,n])=>{Object.entries(n).forEach((([n,a])=>{t[`${e}${this.operatorMap[n]}`]=a}))})),{...e,where:t}}}class st{constructor(e){this.args=e}merge(e){const t=r.mergeWith(this.args,e.args,((e,t)=>{if(Array.isArray(e))return e.concat(t)}));return new st(t)}format(e){return e.format(this.args)}}const rt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct AaveLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class pt{static createInterface(){return new p.utils.Interface(rt)}static connect(e,t){return new p.Contract(e,rt,t)}}pt.abi=rt;const lt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"AaveLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract AaveLinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class dt{static createInterface(){return new p.utils.Interface(lt)}static connect(e,t){return new p.Contract(e,lt,t)}}dt.abi=lt;const ut=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"}];class ct{static createInterface(){return new p.utils.Interface(ut)}static connect(e,t){return new p.Contract(e,ut,t)}}ct.abi=ut;const yt=[{inputs:[{internalType:"address",name:"admin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"actionId",type:"bytes32"},{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"",type:"address"}],name:"canPerform",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"roles",type:"bytes32[]"},{internalType:"address",name:"account",type:"address"}],name:"grantRoles",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"roles",type:"bytes32[]"},{internalType:"address[]",name:"accounts",type:"address[]"}],name:"grantRolesToMany",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"roles",type:"bytes32[]"},{internalType:"address",name:"account",type:"address"}],name:"revokeRoles",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"roles",type:"bytes32[]"},{internalType:"address[]",name:"accounts",type:"address[]"}],name:"revokeRolesFromMany",outputs:[],stateMutability:"nonpayable",type:"function"}];class mt{static createInterface(){return new p.utils.Interface(yt)}static connect(e,t){return new p.Contract(e,yt,t)}}mt.abi=yt;const bt=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}];class ft{static createInterface(){return new p.utils.Interface(bt)}static connect(e,t){return new p.Contract(e,bt,t)}}ft.abi=bt;const Tt=[{inputs:[{internalType:"contract IBalancerTokenAdmin",name:"tokenAdmin",type:"address"},{internalType:"contract IGaugeController",name:"gaugeController",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"address",name:"gauge",type:"address"},{indexed:!1,internalType:"uint256",name:"minted",type:"uint256"}],name:"Minted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"bool",name:"approval",type:"bool"}],name:"MinterApprovalSet",type:"event"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"allowed_to_mint_for",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBalancerToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBalancerTokenAdmin",outputs:[{internalType:"contract IBalancerTokenAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGaugeController",outputs:[{internalType:"contract IGaugeController",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"getMinterApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"mintFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"}],name:"mintMany",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"mintManyFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"mint_for",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[8]",name:"gauges",type:"address[8]"}],name:"mint_many",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"gauge",type:"address"}],name:"minted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"bool",name:"approval",type:"bool"}],name:"setMinterApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"setMinterApprovalWithSignature",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"}],name:"toggle_approve_mint",outputs:[],stateMutability:"nonpayable",type:"function"}];class ht{static createInterface(){return new p.utils.Interface(Tt)}static connect(e,t){return new p.Contract(e,Tt,t)}}ht.abi=Tt;const It=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getAmpForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getInRecoveryModeForPools",outputs:[{internalType:"bool[]",name:"",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getIsPausedForPools",outputs:[{internalType:"bool[]",name:"",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getLinearTargetsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getNormalizedWeightsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{components:[{internalType:"bool",name:"loadTokenBalanceUpdatesAfterBlock",type:"bool"},{internalType:"bool",name:"loadTotalSupply",type:"bool"},{internalType:"bool",name:"loadSwapFees",type:"bool"},{internalType:"bool",name:"loadLinearWrappedTokenRates",type:"bool"},{internalType:"bool",name:"loadLinearTargets",type:"bool"},{internalType:"bool",name:"loadNormalizedWeights",type:"bool"},{internalType:"bool",name:"loadScalingFactors",type:"bool"},{internalType:"bool",name:"loadAmps",type:"bool"},{internalType:"bool",name:"loadRates",type:"bool"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"enum TotalSupplyType[]",name:"totalSupplyTypes",type:"uint8[]"},{internalType:"enum SwapFeeType[]",name:"swapFeeTypes",type:"uint8[]"},{internalType:"uint256[]",name:"linearPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"weightedPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"scalingFactorPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"ampPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"ratePoolIdxs",type:"uint256[]"}],internalType:"struct PoolDataQueryConfig",name:"config",type:"tuple"}],name:"getPoolData",outputs:[{internalType:"uint256[][]",name:"balances",type:"uint256[][]"},{internalType:"uint256[]",name:"totalSupplies",type:"uint256[]"},{internalType:"uint256[]",name:"swapFees",type:"uint256[]"},{internalType:"uint256[]",name:"linearWrappedTokenRates",type:"uint256[]"},{internalType:"uint256[][]",name:"linearTargets",type:"uint256[][]"},{internalType:"uint256[][]",name:"weights",type:"uint256[][]"},{internalType:"uint256[][]",name:"scalingFactors",type:"uint256[][]"},{internalType:"uint256[]",name:"amps",type:"uint256[]"},{internalType:"uint256[]",name:"rates",type:"uint256[]"},{internalType:"uint256[]",name:"ignoreIdxs",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{components:[{internalType:"bool",name:"loadInRecoveryMode",type:"bool"},{internalType:"bool",name:"loadIsPaused",type:"bool"}],internalType:"struct PoolStatusQueryConfig",name:"config",type:"tuple"}],name:"getPoolStatus",outputs:[{internalType:"bool[]",name:"isPaused",type:"bool[]"},{internalType:"bool[]",name:"inRecoveryMode",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPoolTokenBalancesWithUpdatesAfterBlock",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getRateForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getScalingFactorsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"},{internalType:"enum SwapFeeType[]",name:"swapFeeTypes",type:"uint8[]"}],name:"getSwapFeePercentageForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"},{internalType:"enum TotalSupplyType[]",name:"totalSupplyTypes",type:"uint8[]"}],name:"getTotalSupplyForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getWrappedTokenRateForLinearPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}];class _t{static createInterface(){return new p.utils.Interface(It)}static connect(e,t){return new p.Contract(e,It,t)}}_t.abi=It;const gt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class Pt{static createInterface(){return new p.utils.Interface(gt)}static connect(e,t){return new p.Contract(e,gt,t)}}Pt.abi=gt;const wt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"wstETH",type:"address"},{internalType:"contract IBalancerMinter",name:"minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getEntrypoint",outputs:[{internalType:"contract IBalancerRelayer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"ref",type:"uint256"}],name:"peekChainedReferenceValue",outputs:[{internalType:"uint256",name:"value",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"bytes",name:"authorisation",type:"bytes"}],name:"setRelayerApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETHAndWrap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ICToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapCompoundV2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IEulerToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapEuler",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IGearboxDieselToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"dieselAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapGearbox",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IShareToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapShareToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ITetuSmartVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapTetu",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapWstETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapYearn",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20Permit",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20PermitDAI",name:"token",type:"address"},{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"bool",name:"allowed",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermitDAI",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ICToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapCompoundV2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IEulerToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"eulerProtocol",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapEuler",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IGearboxDieselToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"mainAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapGearbox",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IShareToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapShareToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapStETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ITetuSmartVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapTetu",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"uAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapYearn",outputs:[],stateMutability:"payable",type:"function"}];class xt{static createInterface(){return new p.utils.Interface(wt)}static connect(e,t){return new p.Contract(e,wt,t)}}xt.abi=wt;const Et=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ComposableStablePool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastJoinExitData",outputs:[{internalType:"uint256",name:"lastJoinExitAmplification",type:"uint256"},{internalType:"uint256",name:"lastPostJoinExitInvariant",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"oldRate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"isTokenExemptFromYieldProtocolFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}];class At{static createInterface(){return new p.utils.Interface(Et)}static connect(e,t){return new p.Contract(e,Et,t)}}At.abi=Et;const St=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract ComposableStablePool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class vt{static createInterface(){return new p.utils.Interface(St)}static connect(e,t){return new p.Contract(e,St,t)}}vt.abi=St;const kt=[{inputs:[{internalType:"contract IERC20",name:"_underlying",type:"address"},{internalType:"contract IERC20",name:"_bond",type:"address"},{internalType:"uint256",name:"_expiration",type:"uint256"},{internalType:"uint256",name:"_unitSeconds",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_percentFee",type:"uint256"},{internalType:"uint256",name:"_percentFeeGov",type:"uint256"},{internalType:"address",name:"_governance",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"collectedBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collectedBond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBond",type:"uint256"}],name:"FeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FEE_BOUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bond",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bondDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"expiration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesBond",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesUnderlying",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"currentBalanceTokenIn",type:"uint256"},{internalType:"uint256",name:"currentBalanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"percentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"percentFeeGov",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountX",type:"uint256"},{internalType:"uint256",name:"reserveX",type:"uint256"},{internalType:"uint256",name:"reserveY",type:"uint256"},{internalType:"bool",name:"out",type:"bool"}],name:"solveTradeInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"underlying",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"underlyingDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"unitSeconds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];class Bt{static createInterface(){return new p.utils.Interface(kt)}static connect(e,t){return new p.Contract(e,kt,t)}}Bt.abi=kt;const Ot=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];class Ct{static createInterface(){return new p.utils.Interface(Ot)}static connect(e,t){return new p.Contract(e,Ot,t)}}Ct.abi=Ot;const Mt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct ERC4626LinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ft{static createInterface(){return new p.utils.Interface(Mt)}static connect(e,t){return new p.Contract(e,Mt,t)}}Ft.abi=Mt;const Rt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"Erc4626LinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Nt{static createInterface(){return new p.utils.Interface(Rt)}static connect(e,t){return new p.Contract(e,Rt,t)}}Nt.abi=Rt;const Dt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct EulerLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Lt{static createInterface(){return new p.utils.Interface(Dt)}static connect(e,t){return new p.Contract(e,Dt,t)}}Lt.abi=Dt;const Ut=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"_eulerProtocol",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"EulerLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"eulerProtocol",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class qt{static createInterface(){return new p.utils.Interface(Ut)}static connect(e,t){return new p.Contract(e,Ut,t)}}qt.abi=Ut;const Vt=[{inputs:[{internalType:"address[]",name:"_assetsToRegister",type:"address[]"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_protocolPercentFee",type:"uint256"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"numeraire",type:"address"},{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"uint256",name:"weight",type:"uint256"}],name:"AssetIncluded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"derivative",type:"address"},{indexed:!0,internalType:"address",name:"numeraire",type:"address"},{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"address",name:"assimilator",type:"address"}],name:"AssimilatorIncluded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newCollector",type:"address"}],name:"ChangeCollectorAddress",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isEmergency",type:"bool"}],name:"EmergencyAlarm",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountBurned",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsWithdrawn",type:"uint256[]"}],name:"EmergencyWithdraw",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"feesCollected",type:"uint256"}],name:"FeesAccrued",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"feesCollected",type:"uint256"}],name:"FeesCollected",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountBurned",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsWithdrawn",type:"uint256[]"}],name:"OnExitPool",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountMinted",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsDeposited",type:"uint256[]"}],name:"OnJoinPool",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"alpha",type:"uint256"},{indexed:!1,internalType:"uint256",name:"beta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"delta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"epsilon",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lambda",type:"uint256"}],name:"ParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"updater",type:"address"},{indexed:!1,internalType:"uint256",name:"newProtocolPercentage",type:"uint256"}],name:"ProtocolFeeShareUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"address",name:"origin",type:"address"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"originAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"targetAmount",type:"uint256"}],name:"Trade",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_derivative",type:"address"}],name:"assimilator",outputs:[{internalType:"address",name:"assimilator_",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"collectorAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"curve",outputs:[{internalType:"int128",name:"alpha",type:"int128"},{internalType:"int128",name:"beta",type:"int128"},{internalType:"int128",name:"delta",type:"int128"},{internalType:"int128",name:"epsilon",type:"int128"},{internalType:"int128",name:"lambda",type:"int128"},{internalType:"uint256",name:"cap",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"fxPoolAddress",type:"address"},{internalType:"bytes32",name:"poolId",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"derivatives",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"emergency",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"_assets",type:"address[]"},{internalType:"uint256[]",name:"_assetWeights",type:"uint256[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidity",outputs:[{internalType:"uint256",name:"total_",type:"uint256"},{internalType:"uint256[]",name:"individual_",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numeraires",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"protocolPercentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"reserves",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_cap",type:"uint256"}],name:"setCap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_collectorAddress",type:"address"}],name:"setCollectorAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_emergency",type:"bool"}],name:"setEmergency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_alpha",type:"uint256"},{internalType:"uint256",name:"_beta",type:"uint256"},{internalType:"uint256",name:"_feeAtHalt",type:"uint256"},{internalType:"uint256",name:"_epsilon",type:"uint256"},{internalType:"uint256",name:"_lambda",type:"uint256"}],name:"setParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_protocolPercentFee",type:"uint256"}],name:"setProtocolPercentFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalUnclaimedFeesInNumeraire",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"totalDepositNumeraire",type:"uint256"}],name:"viewDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"viewParameters",outputs:[{internalType:"uint256",name:"alpha_",type:"uint256"},{internalType:"uint256",name:"beta_",type:"uint256"},{internalType:"uint256",name:"delta_",type:"uint256"},{internalType:"uint256",name:"epsilon_",type:"uint256"},{internalType:"uint256",name:"lambda_",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_curvesToBurn",type:"uint256"}],name:"viewWithdraw",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"}];class Gt{static createInterface(){return new p.utils.Interface(Vt)}static connect(e,t){return new p.Contract(e,Vt,t)}}Gt.abi=Vt;const Wt=[{inputs:[],name:"CLAIM_FREQUENCY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge[]",name:"gauges",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauges",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"getPendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];class $t{static createInterface(){return new p.utils.Interface(Wt)}static connect(e,t){return new p.Contract(e,Wt,t)}}$t.abi=Wt;const Kt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct GearboxLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ht{static createInterface(){return new p.utils.Interface(Kt)}static connect(e,t){return new p.Contract(e,Kt,t)}}Ht.abi=Kt;const Jt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"GearboxLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract GearboxLinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class jt{static createInterface(){return new p.utils.Interface(Jt)}static connect(e,t){return new p.Contract(e,Jt,t)}}jt.abi=Jt;const Xt=[{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"previousValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newValue",type:"uint256"}],name:"ConfigChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"}],name:"ConfigFrozen",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"key",type:"bytes32"}],name:"ConfigUnset",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newGovernor",type:"address"}],name:"GovernorChangeRequested",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldGovernor",type:"address"},{indexed:!1,internalType:"address",name:"newGovernor",type:"address"}],name:"GovernorChanged",type:"event"},{inputs:[],name:"acceptGovernance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newGovernor",type:"address"}],name:"changeGovernor",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"freeze",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"address",name:"defaultValue",type:"address"}],name:"getAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getConfigMeta",outputs:[{internalType:"uint8",name:"",type:"uint8"},{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"getUint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"governor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"hasKey",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_governor",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"listKeys",outputs:[{internalType:"bytes32[]",name:"",type:"bytes32[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"pendingGovernor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"address",name:"newValue",type:"address"}],name:"setAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"uint256",name:"newValue",type:"uint256"}],name:"setUint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"key",type:"bytes32"}],name:"unset",outputs:[],stateMutability:"nonpayable",type:"function"}];class Yt{static createInterface(){return new p.utils.Interface(Xt)}static connect(e,t){return new p.Contract(e,Xt,t)}}Yt.abi=Xt;const zt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IwstETH",name:"wstETH",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"swapAmounts",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getStETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWstETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"swapAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class Zt{static createInterface(){return new p.utils.Interface(zt)}static connect(e,t){return new p.Contract(e,zt,t)}}Zt.abi=zt;const Qt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class en{static createInterface(){return new p.utils.Interface(Qt)}static connect(e,t){return new p.Contract(e,Qt,t)}}en.abi=Qt;const tn=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateLiquidityLimit",inputs:[{name:"user",type:"address",indexed:!0},{name:"original_balance",type:"uint256",indexed:!1},{name:"original_supply",type:"uint256",indexed:!1},{name:"working_balance",type:"uint256",indexed:!1},{name:"working_supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Transfer",inputs:[{name:"_from",type:"address",indexed:!0},{name:"_to",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Approval",inputs:[{name:"_owner",type:"address",indexed:!0},{name:"_spender",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"minter",type:"address"},{name:"veBoostProxy",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"},{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"transferFrom",inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"transfer",inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"approve",inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"permit",inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"},{name:"_value",type:"uint256"},{name:"_deadline",type:"uint256"},{name:"_v",type:"uint8"},{name:"_r",type:"bytes32"},{name:"_s",type:"bytes32"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"increaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_added_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"decreaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_subtracted_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"user_checkpoint",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"set_rewards_receiver",inputs:[{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"kick",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_reward_token",inputs:[{name:"_reward_token",type:"address"},{name:"_amount",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"add_reward",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_reward_distributor",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_killed",inputs:[{name:"_is_killed",type:"bool"}],outputs:[]},{stateMutability:"view",type:"function",name:"claimed_reward",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward",inputs:[{name:"_user",type:"address"},{name:"_reward_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward_write",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_tokens",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"future_epoch_time",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"inflation_rate",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"version",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"allowance",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"_lp_token",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"DOMAIN_SEPARATOR",inputs:[],outputs:[{name:"",type:"bytes32"}]},{stateMutability:"view",type:"function",name:"nonces",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"factory",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"lp_token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"is_killed",inputs:[],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"reward_count",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"reward_data",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"token",type:"address"},{name:"distributor",type:"address"},{name:"period_finish",type:"uint256"},{name:"rate",type:"uint256"},{name:"last_update",type:"uint256"},{name:"integral",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"rewards_receiver",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"reward_integral_for",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_balances",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_fraction",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"period",inputs:[],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"reward_tokens",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"period_timestamp",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}];class nn{static createInterface(){return new p.utils.Interface(tn)}static connect(e,t){return new p.Contract(e,tn,t)}}nn.abi=tn;const an=[{constant:!1,inputs:[{components:[{name:"target",type:"address"},{name:"callData",type:"bytes"}],name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{name:"blockNumber",type:"uint256"},{name:"returnData",type:"bytes[]"}],payable:!1,stateMutability:"nonpayable",type:"function"}];class on{static createInterface(){return new p.utils.Interface(an)}static connect(e,t){return new p.Contract(e,an,t)}}on.abi=an;const sn=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3[]",name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3Value[]",name:"calls",type:"tuple[]"}],name:"aggregate3Value",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"blockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getBasefee",outputs:[{internalType:"uint256",name:"basefee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBlockNumber",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getChainId",outputs:[{internalType:"uint256",name:"chainid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryAggregate",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryBlockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"}];class rn{static createInterface(){return new p.utils.Interface(sn)}static connect(e,t){return new p.Contract(e,sn,t)}}rn.abi=sn;const pn=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class ln{static createInterface(){return new p.utils.Interface(pn)}static connect(e,t){return new p.Contract(e,pn,t)}}ln.abi=pn;const dn=[{inputs:[{internalType:"contract IStaticAToken",name:"_waToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"waToken",outputs:[{internalType:"contract IStaticAToken",name:"",type:"address"}],stateMutability:"view",type:"function"}];class un{static createInterface(){return new p.utils.Interface(dn)}static connect(e,t){return new p.Contract(e,dn,t)}}un.abi=dn;const cn=[{inputs:[{internalType:"contract IAuthorizer",name:"authorizer",type:"address"},{internalType:"contract IWETH",name:"weth",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"AuthorizerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ExternalBalanceTransfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeAmount",type:"uint256"}],name:"FlashLoan",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"delta",type:"int256"}],name:"InternalBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"int256[]",name:"deltas",type:"int256[]"},{indexed:!1,internalType:"uint256[]",name:"protocolFeeAmounts",type:"uint256[]"}],name:"PoolBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"assetManager",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"cashDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"managedDelta",type:"int256"}],name:"PoolBalanceManaged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"PoolRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"relayer",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"RelayerApprovalChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"contract IERC20",name:"tokenIn",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"TokensDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"TokensRegistered",type:"event"},{inputs:[],name:"WETH",outputs:[{internalType:"contract IWETH",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"assetDeltas",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"deregisterTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getInternalBalance",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPool",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"enum IVault.PoolSpecialization",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"}],name:"getPoolTokenInfo",outputs:[{internalType:"uint256",name:"cash",type:"uint256"},{internalType:"uint256",name:"managed",type:"uint256"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"assetManager",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPoolTokens",outputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract ProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"relayer",type:"address"}],name:"hasApprovedRelayer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.PoolBalanceOpKind",name:"kind",type:"uint8"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct IVault.PoolBalanceOp[]",name:"ops",type:"tuple[]"}],name:"managePoolBalance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"}],name:"queryBatchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"registerPool",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"registerTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"setAuthorizer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setRelayerApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"amountCalculated",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class yn{static createInterface(){return new p.utils.Interface(cn)}static connect(e,t){return new p.Contract(e,cn,t)}}yn.abi=cn;const mn=[{inputs:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],internalType:"struct WeightedPool.NewPoolParams",name:"params",type:"tuple"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getATHRateProduct",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastPostJoinExitInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class bn{static createInterface(){return new p.utils.Interface(mn)}static connect(e,t){return new p.Contract(e,mn,t)}}bn.abi=mn;const fn=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Tn{static createInterface(){return new p.utils.Interface(fn)}static connect(e,t){return new p.Contract(e,fn,t)}}Tn.abi=fn;const hn=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct YearnLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class In{static createInterface(){return new p.utils.Interface(hn)}static connect(e,t){return new p.Contract(e,hn,t)}}In.abi=hn;const _n=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"YearnLinearPoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class gn{static createInterface(){return new p.utils.Interface(_n)}static connect(e,t){return new p.Contract(e,_n,t)}}gn.abi=_n;const Pn=[{inputs:[{components:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"token0",type:"address"},{internalType:"contract IERC20",name:"token1",type:"address"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"bool",name:"oracleEnabled",type:"bool"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ExtensibleWeightedPool2Tokens.NewPoolParams",name:"baseParams",type:"tuple"},{components:[{internalType:"int256",name:"alpha",type:"int256"},{internalType:"int256",name:"beta",type:"int256"},{internalType:"int256",name:"c",type:"int256"},{internalType:"int256",name:"s",type:"int256"},{internalType:"int256",name:"lambda",type:"int256"}],internalType:"struct GyroECLPMath.Params",name:"eclpParams",type:"tuple"},{components:[{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauAlpha",type:"tuple"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauBeta",type:"tuple"},{internalType:"int256",name:"u",type:"int256"},{internalType:"int256",name:"v",type:"int256"},{internalType:"int256",name:"w",type:"int256"},{internalType:"int256",name:"z",type:"int256"},{internalType:"int256",name:"dSq",type:"int256"}],internalType:"struct GyroECLPMath.DerivedParams",name:"derivedEclpParams",type:"tuple"},{internalType:"address",name:"rateProvider0",type:"address"},{internalType:"address",name:"rateProvider1",type:"address"},{internalType:"address",name:"capManager",type:"address"},{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"capParams",type:"tuple"},{internalType:"address",name:"pauseManager",type:"address"}],internalType:"struct GyroECLPPool.GyroParams",name:"params",type:"tuple"},{internalType:"address",name:"configAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"capManager",type:"address"}],name:"CapManagerUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],indexed:!1,internalType:"struct ICappedLiquidity.CapParams",name:"params",type:"tuple"}],name:"CapParamsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"derivedParamsValidated",type:"bool"}],name:"ECLPDerivedParamsValidated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paramsValidated",type:"bool"}],name:"ECLPParamsValidated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"invariantAfterJoin",type:"uint256"}],name:"InvariantAterInitializeJoin",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldInvariant",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newInvariant",type:"uint256"}],name:"InvariantOldAndNew",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"OracleEnabledChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oracleUpdatedIndex",type:"uint256"}],name:"OracleIndexUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPauseManager",type:"address"},{indexed:!1,internalType:"address",name:"newPauseManager",type:"address"}],name:"PauseManagerChanged",type:"event"},{anonymous:!1,inputs:[],name:"PausedLocally",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[]",name:"balances",type:"uint256[]"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],indexed:!1,internalType:"struct GyroECLPMath.Vector2",name:"invariant",type:"tuple"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SwapParams",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[],name:"UnpausedLocally",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"_dSq",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsAlpha",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsBeta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsC",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsLambda",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsS",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauAlphaX",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauAlphaY",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauBetaX",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauBetaY",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_u",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_v",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_w",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_z",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"capManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"capParams",outputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_pauseManager",type:"address"}],name:"changePauseManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],name:"dirtyUninitializedOracleSamples",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getECLPParams",outputs:[{components:[{internalType:"int256",name:"alpha",type:"int256"},{internalType:"int256",name:"beta",type:"int256"},{internalType:"int256",name:"c",type:"int256"},{internalType:"int256",name:"s",type:"int256"},{internalType:"int256",name:"lambda",type:"int256"}],internalType:"struct GyroECLPMath.Params",name:"params",type:"tuple"},{components:[{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauAlpha",type:"tuple"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauBeta",type:"tuple"},{internalType:"int256",name:"u",type:"int256"},{internalType:"int256",name:"v",type:"int256"},{internalType:"int256",name:"w",type:"int256"},{internalType:"int256",name:"z",type:"int256"},{internalType:"int256",name:"dSq",type:"int256"}],internalType:"struct GyroECLPMath.DerivedParams",name:"d",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLargestSafeQueryWindow",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getLastInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"}],name:"getLatest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMiscData",outputs:[{internalType:"int256",name:"logInvariant",type:"int256"},{internalType:"int256",name:"logTotalSupply",type:"int256"},{internalType:"uint256",name:"oracleSampleCreationTimestamp",type:"uint256"},{internalType:"uint256",name:"oracleIndex",type:"uint256"},{internalType:"bool",name:"oracleEnabled",type:"bool"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"},{internalType:"uint256",name:"ago",type:"uint256"}],internalType:"struct IPriceOracle.OracleAccumulatorQuery[]",name:"queries",type:"tuple[]"}],name:"getPastAccumulators",outputs:[{internalType:"int256[]",name:"results",type:"int256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPrice",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getSample",outputs:[{internalType:"int256",name:"logPairPrice",type:"int256"},{internalType:"int256",name:"accLogPairPrice",type:"int256"},{internalType:"int256",name:"logBptPrice",type:"int256"},{internalType:"int256",name:"accLogBptPrice",type:"int256"},{internalType:"int256",name:"logInvariant",type:"int256"},{internalType:"int256",name:"accLogInvariant",type:"int256"},{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"},{internalType:"uint256",name:"secs",type:"uint256"},{internalType:"uint256",name:"ago",type:"uint256"}],internalType:"struct IPriceOracle.OracleAverageQuery[]",name:"queries",type:"tuple[]"}],name:"getTimeWeightedAverage",outputs:[{internalType:"uint256[]",name:"results",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenRates",outputs:[{internalType:"uint256",name:"rate0",type:"uint256"},{internalType:"uint256",name:"rate1",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalSamples",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"gyroConfig",outputs:[{internalType:"contract IGyroConfig",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pauseManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"rateProvider0",outputs:[{internalType:"contract IRateProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rateProvider1",outputs:[{internalType:"contract IRateProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_capManager",type:"address"}],name:"setCapManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"params",type:"tuple"}],name:"setCapParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"}];class wn{static createInterface(){return new p.utils.Interface(Pn)}static connect(e,t){return new p.Contract(e,Pn,t)}}wn.abi=Pn;const xn=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"locktime",type:"uint256",indexed:!0},{name:"type",type:"int128",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Supply",inputs:[{name:"prevSupply",type:"uint256",indexed:!1},{name:"supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"token_addr",type:"address"},{name:"_name",type:"string"},{name:"_symbol",type:"string"},{name:"_authorizer_adaptor",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"admin",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"nonpayable",type:"function",name:"commit_smart_wallet_checker",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"apply_smart_wallet_checker",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"get_last_user_slope",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"user_point_history__ts",inputs:[{name:"_addr",type:"address"},{name:"_idx",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked__end",inputs:[{name:"_addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"checkpoint",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_for",inputs:[{name:"_addr",type:"address"},{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"create_lock",inputs:[{name:"_value",type:"uint256"},{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_amount",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_unlock_time",inputs:[{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"},{name:"_t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOfAt",inputs:[{name:"addr",type:"address"},{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[{name:"t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupplyAt",inputs:[{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"amount",type:"int128"},{name:"end",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"epoch",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"point_history",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_history",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_epoch",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"slope_changes",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"future_smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]}];class En{static createInterface(){return new p.utils.Interface(xn)}static connect(e,t){return new p.Contract(e,xn,t)}}En.abi=xn;const An=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"}];class Sn{static createInterface(){return new p.utils.Interface(An)}static connect(e,t){return new p.Contract(e,An,t)}}Sn.abi=An;var vn,kn=Object.freeze({__proto__:null,AaveLinearPool__factory:pt,AaveLinearPoolFactory__factory:dt,AaveWrapping__factory:ct,Authoriser__factory:mt,BalancerHelpers__factory:ft,BalancerMinter__factory:ht,BalancerPoolDataQueries__factory:_t,BalancerRelayer__factory:Pt,BatchRelayerLibrary__factory:xt,ComposableStablePool__factory:At,ComposableStablePoolFactory__factory:vt,ConvergentCurvePool__factory:Bt,ERC20__factory:Ct,ERC4626LinearPool__factory:Ft,ERC4626LinearPoolFactory__factory:Nt,EulerLinearPool__factory:Lt,EulerLinearPoolFactory__factory:qt,FXPool__factory:Gt,GaugeClaimHelper__factory:$t,GearboxLinearPool__factory:Ht,GearboxLinearPoolFactory__factory:jt,GyroConfig__factory:Yt,LidoRelayer__factory:Zt,LinearPool__factory:en,LiquidityGaugeV5__factory:nn,Multicall__factory:on,Multicall3__factory:rn,StablePool__factory:ln,StaticATokenRateProvider__factory:un,Vault__factory:yn,WeightedPool__factory:bn,WeightedPoolFactory__factory:Tn,YearnLinearPool__factory:In,YearnLinearPoolFactory__factory:gn,GyroEV2__factory:wn,VeBal__factory:En,VeDelegationProxy__factory:Sn});function Bn(t,o,i,s,r,p){const l=new Array(r.length).fill(n.Zero);return r.forEach(((r,d)=>{if(t.some((e=>Ye(r,e)))){const t=a.BigNumber.from(p).add(n.WeiPerEther);l[d]=i===e.SwapType.SwapExactOut?l[d].add(a.BigNumber.from(s[d]).mul(t).div(n.WeiPerEther)):l[d].add(s[d])}if(o.some((e=>Ye(r,e)))){const t=n.WeiPerEther.sub(a.BigNumber.from(p));l[d]=i===e.SwapType.SwapExactIn?l[d].add(a.BigNumber.from(s[d]).mul(t).div(n.WeiPerEther)):l[d].add(s[d])}})),l}e.SwapType=void 0,(vn=e.SwapType||(e.SwapType={}))[vn.SwapExactIn=0]="SwapExactIn",vn[vn.SwapExactOut=1]="SwapExactOut";const On="0xBA12222222228d8Ba445958a75a0704d566BF2C8",Cn={[e.Network.MAINNET]:{chainId:e.Network.MAINNET,addresses:{contracts:{multicall:"0xeefba1e63905ef1d7acba5a8513c70307c1ce441",poolDataQueries:"0xf5CDdF6feD9C589f1Be04899F48f9738531daD59",lidoRelayer:"0xdcdbf71A870cc60C6F9B621E28a7D3Ffd6Dd4965",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",gaugeControllerCheckpointer:"0x8e5698dc4897dc12243c8642e77b4f21349db97c",veBalProxy:"0x6f5a2eE11E7a772AeB5114A20d0D7c0ff61EB8A0",gyroConfigProxy:"0xac89cc9d78bbad7eb3a02601b4d65daa1f908aa6",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerHelpers:"0x5addcca35b7a0d07c74063c48700c8590e87864e",balancerMinter:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",balancerRelayer:"0xfea793aa415061c483d2390414275ad314b3f621",gaugeController:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",feeDistributor:"0xd3cf852898b21fc233251427c2dc93d3d604f3bb",protocolFeePercentagesProvider:"0x97207b095e4d5c9a6e4cfbfcd2c3358e03b90c4a",weightedPoolFactory:"0x897888115ada5773e02aa29f775430bfb5f34c51",composableStablePoolFactory:"0xfada0f4547ab2de89d1304a668c39b3e09aa7c76",aaveLinearPoolFactory:"0x0b576c1245f479506e7c8bbc4db4db07c1cd31f9",erc4626LinearPoolFactory:"0x813ee7a840ce909e7fea2117a44a90b8063bd4fd",eulerLinearPoolFactory:"0x5f43fba61f63fa6bff101a0a0458cea917f6b347",gearboxLinearPoolFactory:"0x39a79eb449fc05c92c39aa6f0e9bfac03be8de5b",yearnLinearPoolFactory:"0x5f5222ffa40f2aed6380d022184d6ea67c776ee0"},tokens:{bal:"0xba100000625a3754423978a60c9317c58a424e3d",wrappedNativeAsset:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",bbaUsd:"0xa13a9247ea42d743238089903570127dda72fe44",lbpRaisingTokens:["0x6b175474e89094c44da98b954eedeac495271d0f","0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25"}},urls:{subgraph:"https://api.studio.thegraph.com/query/75376/balancer-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/75376/balancer-gauges/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/ethereum-blocks/version/latest⁠"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{wETHwstETH:{id:"0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080",address:"0x32296969ef14eb0c6d29669c550d4a0449130230"}},poolsToIgnore:["0xbd482ffb3e6e50dc1c437557c3bea2b68f3683ee0000000000000000000003c6","0x0afbd58beca09545e4fb67772faf3858e610bcd00000000000000000000004b9","0xf22ff21e17157340575158ad7394e068048dd98b0000000000000000000004b8","0xf71d0774b214c4cf51e33eb3d30ef98132e4dbaa00000000000000000000046e"],sorConnectingTokens:[{symbol:"wEth",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},{symbol:"wstEth",address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{symbol:"DOLA",address:"0x865377367054516e17014CcdED1e7d814EDC9ce4"},{symbol:"rEth",address:"0xae78736cd615f374d3085123a210448e74fc6393"},{symbol:"ETHx",address:"0xa35b1b31ce002fbf2058d22f30f95d405200a15b"}],sorTriPathMidPoolIds:["0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112"]},[e.Network.POLYGON]:{chainId:e.Network.POLYGON,addresses:{contracts:{multicall:"0xa1B2b503959aedD81512C37e9dce48164ec6a94d",poolDataQueries:"0x84813aA3e079A665C0B80F944427eE83cBA63617",gaugeClaimHelper:"0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33",gyroConfigProxy:"0xfdc2e9e03f515804744a40d0f8d25c16e93fbe67",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerHelpers:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",balancerRelayer:"0xd18d5d377eb23362e54fa496597d7e962d56c554",protocolFeePercentagesProvider:"0x42ac0e6fa47385d55aff070d79ef0079868c48a6",weightedPoolFactory:"0xfc8a407bba312ac761d8bfe04ce1201904842b76",composableStablePoolFactory:"0x6ab5549bbd766a43afb687776ad8466f8b42f777",aaveLinearPoolFactory:"0xab2372275809e15198a7968c7f324053867cdb0c",erc4626LinearPoolFactory:"0x5c5fcf8fbd4cd563ced27e7d066b88ee20e1867a",yearnLinearPoolFactory:"0x0b576c1245f479506e7c8bbc4db4db07c1cd31f9"},tokens:{bal:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",wrappedNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",lbpRaisingTokens:["0x8f3cf7ad23cd3cadbd9735aff958023239c6a063","0x2791bca1f2de4661ed88a30c99a7a9449aa84174","0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"]}},urls:{subgraph:"https://api.studio.thegraph.com/query/75376/balancer-polygon-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/75376/balancer-gauges-polygon/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/polygon-blocks/version/latest"},thirdParty:{coingecko:{nativeAssetId:"",platformId:"polygon-pos"}},pools:{},poolsToIgnore:["0x600bd01b6526611079e12e1ff93aba7a3e34226f0000000000000000000009e4","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455"],sorConnectingTokens:[{symbol:"weth",address:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"},{symbol:"bbrz2",address:"0xe22483774bd8611be2ad2f4194078dac9159f4ba"}]},[e.Network.ARBITRUM]:{chainId:e.Network.ARBITRUM,addresses:{contracts:{multicall:"0x269ff446d9892c9e19082564df3f5e8741e190a1",poolDataQueries:"0x7Ba29fE8E83dd6097A7298075C4AFfdBda3121cC",gaugeClaimHelper:"0xa0dabebaad1b243bbb243f933013d560819eb66f",gyroConfigProxy:"0x9b683ca24b0e013512e2566b68704dbe9677413c",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerHelpers:"0x77d46184d22ca6a3726a2f500c776767b6a3d6ab",balancerRelayer:"0x598ce0f1ab64b27256759ef99d883ee51138b9bd",protocolFeePercentagesProvider:"0x5ef4c5352882b10893b70dbcaa0c000965bd23c5",weightedPoolFactory:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",composableStablePoolFactory:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",aaveLinearPoolFactory:"0x7396f99b48e7436b152427bfa3dd6aa8c7c6d05b",erc4626LinearPoolFactory:"0x7adbdabaa80f654568421887c12f09e0c7bd9629",yearnLinearPoolFactory:"0x19dfef0a828eec0c85fbb335aa65437417390b85"},tokens:{bal:"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8",wrappedNativeAsset:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0xff970a61a04b1ca14834a43f5de4533ebddb5cc8","0x82af49447d8a07e3bd95bd0d56f35241523fbab1"]}},urls:{subgraph:"https://api.studio.thegraph.com/query/75376/balancer-arbitrum-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/75376/balancer-gauges-arbitrum/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/arbitrum-blocks/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"arbitrum-one"}},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"}],sorTriPathMidPoolIds:["0x178e029173417b1f9c8bc16dcec6f697bc323746000200000000000000000158","0x0052688295413b32626d226a205b95cdb337de860002000000000000000003d1","0xa1a8bf131571a2139feb79401aa4a2e9482df6270002000000000000000004b4","0x125bc5a031b2db6733bfa35d914ffa428095978b000200000000000000000514"]},[e.Network.GOERLI]:{chainId:e.Network.GOERLI,addresses:{contracts:{multicall:"0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e",poolDataQueries:"0x6d3197d069F8F9f1Fe7e23665Bc64CB77ED8b089",veBal:"0x33A99Dcc4C85C014cf12626959111D5898bbCAbF",veBalProxy:"0xA1F107D1cD709514AE8A914eCB757E95f9cedB31",erc4626LinearPoolFactory:"0xba240c856498e2d7a70af4911aafae0d6b565a5b",aaveLinearPoolFactory:"0x76578ecf9a141296ec657847fb45b0585bcda3a6",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerHelpers:"0x5addcca35b7a0d07c74063c48700c8590e87864e",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",gaugeController:"0xbb1ce49b16d55a1f2c6e88102f32144c7334b116",feeDistributor:"0x42b67611b208e2e9b4cc975f6d74c87b865ae066",protocolFeePercentagesProvider:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d",composableStablePoolFactory:"0x1802953277fd955f9a254b80aa0582f193cf1d77"},tokens:{bal:"",wrappedNativeAsset:""}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-goerli-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-goerli",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/goerli-blocks"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}]},[e.Network.OPTIMISM]:{chainId:e.Network.OPTIMISM,addresses:{contracts:{multicall:"0x2dc0e2aa608532da689e89e237df582b783e552c",poolDataQueries:"0x6B5dA774890Db7B7b96C6f44e6a4b0F657399E2e",gyroConfigProxy:"0x32acb44fc929339b9f16f0449525cc590d2a23f3",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",protocolFeePercentagesProvider:"0xacaac3e6d6df918bf3c809dfc7d42de0e4a72d4c",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",composableStablePoolFactory:"0x1802953277fd955f9a254b80aa0582f193cf1d77",aaveLinearPoolFactory:"0x7396f99b48e7436b152427bfa3dd6aa8c7c6d05b",erc4626LinearPoolFactory:"0x7adbdabaa80f654568421887c12f09e0c7bd9629",yearnLinearPoolFactory:"0x19dfef0a828eec0c85fbb335aa65437417390b85"},tokens:{bal:"0xfe8b128ba8c78aabc59d4c64cee7ff28e9379921",wrappedNativeAsset:"0x4200000000000000000000000000000000000006",lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0x7f5c764cbc14f9669b88837ca1490cca17c31607","0x4200000000000000000000000000000000000006"]}},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"optimistic-ethereum"}},urls:{subgraph:"https://api.studio.thegraph.com/query/75376/balancer-optimism-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/75376/balancer-gauges-optimism/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/optimism-blocks/version/latest"},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x4200000000000000000000000000000000000006"}]},[e.Network.GNOSIS]:{chainId:e.Network.GNOSIS,addresses:{contracts:{multicall:"0xbb6fab6b627947dae0a75808250d8b2652952cb5",poolDataQueries:"0x3f170631ed9821Ca51A59D996aB095162438DC10",aaveLinearPoolFactory:"0x62aab12865d7281048c337d53a4dde9d770321e6",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerRelayer:"0x3536fd480ca495ac91e698a703248a8915c137a3",protocolFeePercentagesProvider:"0x41b953164995c11c81da73d212ed8af25741b7ac",weightedPoolFactory:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",composableStablePoolFactory:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",yearnLinearPoolFactory:"0x19dfef0a828eec0c85fbb335aa65437417390b85",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8"},tokens:{wrappedNativeAsset:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d",bal:"0x7eF541E2a22058048904fE5744f9c7E4C57AF717",wstETH:"0x6C76971f98945AE98dD7d4DFcA8711ebea946eA6"}},urls:{subgraph:"https://api.studio.thegraph.com/query/75376/balancer-gnosis-chain-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/75376/balancer-gauges-gnosis-chain/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/gnosis-blocks/version/latest"},thirdParty:{coingecko:{nativeAssetId:"xdai",platformId:"xdai"}},averageBlockTime:5,pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d"},{symbol:"wsEth",address:"0x6C76971f98945AE98dD7d4DFcA8711ebea946eA6"}],sorTriPathMidPoolIds:["0xeb30c85cc528537f5350cf5684ce6a4538e13394000200000000000000000059","0x7644fa5d0ea14fcf3e813fdf93ca9544f8567655000000000000000000000066"]},[e.Network.FANTOM]:{chainId:e.Network.FANTOM,addresses:{contracts:{vault:"0x20dd72Ed959b6147912C2e529F0a0C651c33c9ce",multicall:"0x66335d7ad8011f6aa3f48aadcb523b62b38ed961",poolDataQueries:"0xb132F1E145DcC085980C531e2dA81f2b84efc14F",gaugeClaimHelper:"0x0000000000000000000000000000000000000000",balancerRelayer:"0x419f7925b8c9e409b6ee8792242556fa210a7a09",balancerHelpers:"0xfE18C7C70b0a2c6541bEde0367124278BC345Dc8",weightedPoolFactory:"0x60467cb225092cE0c989361934311175f437Cf53",composableStablePoolFactory:"0x44814E3A603bb7F1198617995c5696C232F6e8Ed",yearnLinearPoolFactory:"0x1f73ae6ed391a2b1e84ff988a1bb5394b78a4a71"},tokens:{bal:"0xF24Bcf4d1e507740041C9cFd2DddB29585aDCe1e",wrappedNativeAsset:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",lbpRaisingTokens:["0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83","0x04068DA6C83AFCFA0e13ba15A6696662335D5B75","0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E"]}},urls:{subgraph:"https://api.studio.thegraph.com/query/73674/beethovenx-v2-fantom/version/latest",gaugesSubgraph:"",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/fantom-blocks/version/latest"},thirdParty:{coingecko:{nativeAssetId:"ftm",platformId:"fantom"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"wftm",address:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"}]},[e.Network.SEPOLIA]:{chainId:e.Network.SEPOLIA,addresses:{contracts:{multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0x9805dcfD25e6De36bad8fe9D3Fe2c9b44B764102",aaveLinearPoolFactory:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",balancerHelpers:"0xdae7e32adc5d490a43ccba1f0c736033f2b4efca",balancerMinter:"0x1783cd84b3d01854a96b4ed5843753c2ccbd574a",balancerRelayer:"0x6d5342d716c13d9a3f072a2b11498624ade27f90",gaugeController:"0x577e5993b9cc480f07f98b5ebd055604bd9071c4",feeDistributor:"0xa6971317fb06c76ef731601c64433a4846fca707",protocolFeePercentagesProvider:"0xf7d5dce55e6d47852f054697bab6a1b48a00ddbd",weightedPoolFactory:"0x7920bfa1b2041911b354747ca7a6cdd2dfc50cfd",composableStablePoolFactory:"0xa3fd20e29358c056b727657e83dfd139abbc9924",yearnLinearPoolFactory:"0xacf05be5134d64d150d153818f8c67ee36996650",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8"},tokens:{bal:"0xb19382073c7a0addbb56ac6af1808fa49e377b75",wrappedNativeAsset:"0x7b79995e5f793a07bc00c21412e50ecae098e7f9"}},urls:{subgraph:"https://api.studio.thegraph.com/query/24660/balancer-sepolia-v2/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[]},[e.Network.ZKEVM]:{chainId:e.Network.ZKEVM,addresses:{contracts:{balancerMinter:"0x475D18169BE8a89357A9ee3Ab00ca386d20fA229",multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0xF24917fB88261a37Cc57F686eBC831a5c0B9fD39",aaveLinearPoolFactory:"0x4b7b369989e613ff2c65768b7cf930cc927f901e",protocolFeePercentagesProvider:"0x1802953277fd955f9a254b80aa0582f193cf1d77",weightedPoolFactory:"0x03f3fb107e74f2eac9358862e91ad3c692712054",yearnLinearPoolFactory:"0x44d33798dddcdabc93fe6a40c80588033dc502d3",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerHelpers:"",balancerRelayer:""},tokens:{bal:"0x120ef59b80774f02211563834d8e3b72cb1649d6",wrappedNativeAsset:"0x4f9a0e7fd2bf6067db6994cf12e4495df938e6e9",wstETH:"0x5d8cff95d7a57c0bf50b30b43c7cc0d52825d4a9"}},urls:{subgraph:"https://api.studio.thegraph.com/query/24660/balancer-polygon-zk-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/24660/balancer-gauges-polygon-zk/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"polygon-zkevm"}},averageBlockTime:4,multicallBatchSize:128,pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"weth",address:"0x4F9A0e7FD2Bf6067db6994CF12E4495Df938E6e9"},{symbol:"wsEth",address:"0x5D8cfF95D7A57c0BF50B30b43c7CC0D52825D4a9"}]},[e.Network.AVALANCHE]:{chainId:e.Network.AVALANCHE,addresses:{contracts:{vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerMinter:"0xEa924b45a3fcDAAdf4E5cFB1665823B8F8F2039B",multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0x67af5D428d38C5176a286a2371Df691cDD914Fb8",aaveLinearPoolFactory:"0x6caf662b573f577de01165d2d38d1910bba41f8a",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",protocolFeePercentagesProvider:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",composableStablePoolFactory:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",erc4626LinearPoolFactory:"0x4507d91cd2c0d51d9b4f30bf0b93afc938a70ba5",eulerLinearPoolFactory:"",gearboxLinearPoolFactory:"",yearnLinearPoolFactory:""},tokens:{bal:"0xe15bcb9e0ea69e6ab9fa080c4c4a5632896298c3",wrappedNativeAsset:"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"}},urls:{subgraph:"https://api.studio.thegraph.com/query/75376/balancer-avalanche-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/75376/balancer-gauges-avalanche/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/avalanche-blocks/version/latest"},thirdParty:{coingecko:{nativeAssetId:"avalanche-2",platformId:"avalanche"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"WAVAX",address:"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"},{symbol:"sAVAX",address:"0x2b2c81e08f1af8835a78bb2a90ae924ace0ea4be"}]},[e.Network.BASE]:{chainId:e.Network.BASE,addresses:{contracts:{balancerMinter:"0xc7E5ED1054A24Ef31D827E6F86caA58B3Bc168d7",multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerRelayer:"0x76f7204b62f554b79d444588edac9dfa7032c71a",protocolFeePercentagesProvider:"0xded7fef7d8ecdcb74f22f0169e1a9ec696e6695d",weightedPoolFactory:"0x4c32a8a8fda4e24139b51b456b42290f51d6a1c4",composableStablePoolFactory:"0x8df317a729fcaa260306d7de28888932cb579b88",aaveLinearPoolFactory:"0x687b8c9b41e01be8b591725fac5d5f52d0564d79",erc4626LinearPoolFactory:"0x161f4014c27773840ccb4ec1957113e6dd028846",yearnLinearPoolFactory:"0x44d33798dddcdabc93fe6a40c80588033dc502d3",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8"},tokens:{bal:"0x4158734d47fc9692176b5085e0f52ee0da5d47f1",wrappedNativeAsset:"0x4200000000000000000000000000000000000006"}},urls:{subgraph:"https://api.studio.thegraph.com/query/24660/balancer-base-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/24660/balancer-gauges-base/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/bleu-base-blocks/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"base"}},averageBlockTime:2,pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"weth",address:"0x4200000000000000000000000000000000000006"}],sorTriPathMidPoolIds:["0x2db50a0e0310723ef0c2a165cb9a9f80d772ba2f00020000000000000000000d"]},[e.Network.FRAXTAL]:{chainId:e.Network.FRAXTAL,addresses:{contracts:{vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerMinter:"0x9805dcfd25e6de36bad8fe9d3fe2c9b44b764102",multicall:"0xca11bde05977b3631167028862be2a173976ca11",poolDataQueries:"0x5dbad78818d4c8958eff2d5b95b28385a22113cd",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerRelayer:"0xb541765f540447646a9545e0a4800a0bacf9e13d",protocolFeePercentagesProvider:"0xf23b4db826dba14c0e857029dff076b1c0264843",weightedPoolFactory:"0x9da18982a33fd0c7051b19f0d7c76f2d5e7e017c",composableStablePoolFactory:"0x4bdcc2fb18aeb9e2d281b0278d946445070eada7",aaveLinearPoolFactory:"",erc4626LinearPoolFactory:"",yearnLinearPoolFactory:""},tokens:{bal:"0x2fc7447f6cf71f9aa9e7ff8814b37e55b268ec91",wrappedNativeAsset:"0xfc00000000000000000000000000000000000006"}},urls:{subgraph:"https://api.goldsky.com/api/public/project_clwhu1vopoigi01wmbn514m1z/subgraphs/balancer-fraxtal-v2/1.0.0/gn",gaugesSubgraph:"https://api.goldsky.com/api/public/project_clwhu1vopoigi01wmbn514m1z/subgraphs/balancer-gauges-fraxtal/1.0.0/gn",blockNumberSubgraph:"https://api.goldsky.com/api/public/project_clwhu1vopoigi01wmbn514m1z/subgraphs/fraxtal-blocks/1.0.0/gn"},thirdParty:{coingecko:{nativeAssetId:"fraxtal",platformId:"fraxtal"}},averageBlockTime:2,pools:{},poolsToIgnore:[],sorConnectingTokens:[],sorTriPathMidPoolIds:[]},[e.Network.MODE]:{chainId:e.Network.MODE,addresses:{contracts:{vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",balancerMinter:"0x5cf4928a3205728bd12830e1840f7db85c62a4b9",multicall:"0xca11bde05977b3631167028862be2a173976ca11",poolDataQueries:"0x7a2535f5fb47b8e44c02ef5d9990588313fe8f05",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerRelayer:"0xb541765f540447646a9545e0a4800a0bacf9e13d",protocolFeePercentagesProvider:"0x85a80afee867adf27b50bdb7b76da70f1e853062",weightedPoolFactory:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",composableStablePoolFactory:"0x5dbad78818d4c8958eff2d5b95b28385a22113cd",aaveLinearPoolFactory:"",erc4626LinearPoolFactory:"",yearnLinearPoolFactory:""},tokens:{bal:"0xd08a2917653d4e460893203471f0000826fb4034",wrappedNativeAsset:"0x4200000000000000000000000000000000000006"}},urls:{subgraph:"https://api.studio.thegraph.com/query/75376/balancer-mode-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/75376/balancer-gauges-mode/version/latest",blockNumberSubgraph:"https://api.studio.thegraph.com/query/48427/bleu-mode-blocks/version/latest"},thirdParty:{coingecko:{nativeAssetId:"mode",platformId:"mode"}},averageBlockTime:2,pools:{},poolsToIgnore:[],sorConnectingTokens:[],sorTriPathMidPoolIds:[]},[e.Network.BARTIO]:{chainId:e.Network.BARTIO,addresses:{contracts:{multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0x8aA3dfBB7718B61710884F38fC374Cb778ce34Bd",gaugeClaimHelper:"0x0000000000000000000000000000000000000000",gyroConfigProxy:"0x0000000000000000000000000000000000000000",aaveLinearPoolFactory:"0x85070081473d2a17ebe199f381b879e3fba27d11",authorizer:"0xa133a95a4c15d0ef3b67715b744116286705fcdd",authorizerAdaptor:"0x2842ea70f7ecf3cbf6f8c7c5a43b76542f596f1e",authorizerAdaptorEntrypoint:"0x6d41e7a1b95a50c07eef85015fd7038d781237cd",authorizerWithAdaptorValidation:"0xbace365e865a7e3cdf3c757c8de4870fff2dc92e",bal:"0x2DaA47A2cE0BE7484C6328e20eE200e901fEf443",balancerHelpers:"0x44aed640354b5d74ee706439456518390f04bfec",balancerQueries:"0x878ab84abc562e311fce6dfb1d2b74b746d95ae4",balancerRelayer:"0x0000000000000000000000000000000000000000",batchRelayerLibrary:"0x0000000000000000000000000000000000000000",childChainGauge:"0x0000000000000000000000000000000000000000",childChainGaugeFactory:"0x0000000000000000000000000000000000000000",childChainGaugeRewardHelper:"0x0000000000000000000000000000000000000000",childChainGaugeTokenAdder:"0x0000000000000000000000000000000000000000",childChainLiquidityGaugeFactory:"0x0000000000000000000000000000000000000000",childChainStreamer:"0x0000000000000000000000000000000000000000",circuitBreakerLib:"0x0000000000000000000000000000000000000000",composableStablePoolFactory:"0x18a11aa3fd4d16358016e224fbe226d2297bddac",doubleEntrypointFixRelayer:"0x0000000000000000000000000000000000000000",erc4626LinearPoolFactory:"0x0000000000000000000000000000000000000000",externalWeightedMath:"0x0000000000000000000000000000000000000000",gaugeWorkingBalanceHelper:"0x0000000000000000000000000000000000000000",l2BalancerPseudoMinter:"0x0000000000000000000000000000000000000000",l2LayerZeroBridgeForwarder:"0x0000000000000000000000000000000000000000",managedPoolAddRemoveTokenLib:"0x0000000000000000000000000000000000000000",managedPoolAmmLib:"0x0000000000000000000000000000000000000000",managedPoolFactory:"0x0000000000000000000000000000000000000000",merkleOrchard:"0x0000000000000000000000000000000000000000",mockAaveLendingPool:"0x3d4623c6c52c089a09421e76c2e93d73da5680a6",mockAaveLinearPool:"0xe33cf6fdd0993f4d4fbc3d1c61cfef23be210ac1",mockComposableStablePool:"0x0000000000000000000000000000000000000000",mockErc4626LinearPool:"0x0000000000000000000000000000000000000000",mockErc4626Token:"0x0000000000000000000000000000000000000000",mockManagedPool:"0x0000000000000000000000000000000000000000",mockStaticAToken:"0xcee4618b380d6ef5bc0c72ae74f2b07e87743008",mockWeightedPool:"0x0000000000000000000000000000000000000000",mockYearnLinearPool:"0x0000000000000000000000000000000000000000",mockYearnTokenVault:"0x0000000000000000000000000000000000000000",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x0000000000000000000000000000000000000000",nullVotingEscrow:"0x0000000000000000000000000000000000000000",poolRecoveryHelper:"0x0000000000000000000000000000000000000000",protocolFeePercentagesProvider:"0x3c9bcb291b5bc0aed5491ef461933d217039246e",protocolFeesCollector:"0x86eab6dc751bf99686550ce02d66bdff3bf4b492",protocolFeesWithdrawer:"0x0000000000000000000000000000000000000000",protocolIdRegistry:"0x13a0fd51412845fd30d20fddce5383c9de31ead0",recoveryModeHelper:"0x0000000000000000000000000000000000000000",rewardsOnlyGauge:"0x0000000000000000000000000000000000000000",vault:"0xfdb2925ae2d3e2eacfe927611305e5e56aa5f832",veBoostV2:"0x0000000000000000000000000000000000000000",votingEscrowDelegationProxy:"0x0000000000000000000000000000000000000000",weightedPoolFactory:"0xfc1637d65a83f0f991c75abf3b7b8a3adbf6504d",weth:"0x6E1E9896e93F7A71ECB33d4386b49DeeD67a231A",yearnLinearPoolFactory:"0x0000000000000000000000000000000000000000"},tokens:{bal:"0x2DaA47A2cE0BE7484C6328e20eE200e901fEf443",wrappedNativeAsset:"0x7507c1dc16935B82698e4C63f2746A2fCf994dF8"}},urls:{subgraph:"https://api.goldsky.com/api/public/project_cluukfpdrw61a01xag6yihcuy/subgraphs/bartio/0.0.2/gn"},thirdParty:{coingecko:{nativeAssetId:"berachain-bera",platformId:"berachain-bera"}},averageBlockTime:2,pools:{},poolsToIgnore:[],sorConnectingTokens:[],sorTriPathMidPoolIds:[]}},Mn=e=>Cn[e].addresses;var Fn;e.BalancerErrorCode=void 0,(Fn=e.BalancerErrorCode||(e.BalancerErrorCode={})).ABOVE_MAX_TOKENS="ABOVE_MAX_TOKENS",Fn.BELOW_MIN_TOKENS="BELOW_MIN_TOKENS",Fn.EXIT_DELTA_AMOUNTS="EXIT_DELTA_AMOUNTS",Fn.FEE_PROVIDER_NOT_PROVIDED="FEE_PROVIDER_NOT_PROVIDED",Fn.GAUGES_HELPER_ADDRESS_NOT_PROVIDED="GAUGES_HELPER_ADDRESS_NOT_PROVIDED",Fn.GAUGES_NOT_FOUND="GAUGES_NOT_FOUND",Fn.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED="GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED",Fn.GAUGES_REWARD_TOKEN_EMPTY="GAUGES_REWARD_TOKEN_EMPTY",Fn.ILLEGAL_PARAMETER="ILLEGAL_PARAMETER",Fn.INTERNAL_ERROR_INVALID_ABI="INTERNAL_ERROR_INVALID_ABI",Fn.INPUT_LENGTH_MISMATCH="INPUT_LENGTH_MISMATCH",Fn.INPUT_OUT_OF_BOUNDS="INPUT_OUT_OF_BOUNDS",Fn.INPUT_TOKEN_INVALID="INPUT_TOKEN_INVALID",Fn.INVALID_PROTOCOL_ID="INVALID_PROTOCOL_ID",Fn.INVALID_SWAP_FEE_PERCENTAGE="INVALID_SWAP_FEE_PERCENTAGE",Fn.INVALID_WEIGHTS="INVALID_WEIGHTS",Fn.JOIN_DELTA_AMOUNTS="JOIN_DELTA_AMOUNTS",Fn.JOIN_WITH_ZERO_AMOUNT="JOIN_WITH_ZERO_AMOUNT",Fn.MISSING_AMP="MISSING_AMP",Fn.MISSING_DECIMALS="MISSING_DECIMALS",Fn.MISSING_PRICE_RATE="MISSING_PRICE_RATE",Fn.MISSING_TOKENS="MISSING_TOKENS",Fn.MISSING_WEIGHT="MISSING_WEIGHT",Fn.NO_POOL_DATA="NO_POOL_DATA",Fn.NO_VALUE_PARAMETER="NO_VALUE_PARAMETER",Fn.POOL_DOESNT_EXIST="POOL_DOESNT_EXIST",Fn.QUERY_BATCH_SWAP="QUERY_BATCH_SWAP",Fn.RELAY_SWAP_AMOUNTS="RELAY_SWAP_AMOUNTS",Fn.REWARD_TOKEN_ZERO="REWARD_TOKEN_ZERO",Fn.TIMESTAMP_IN_THE_FUTURE="TIMESTAMP_IN_THE_FUTURE",Fn.TOKEN_MISMATCH="TOKEN_MISMATCH",Fn.UNSUPPORTED_PAIR="UNSUPPORTED_PAIR",Fn.UNSUPPORTED_POOL_TYPE="UNSUPPORTED_POOL_TYPE",Fn.UNSUPPORTED_POOL_TYPE_VERSION="UNSUPPORTED_POOL_TYPE_VERSION";class Rn extends Error{constructor(e){super(Rn.getMessage(e)),this.code=e,this.name="BalancerError"}static getMessage(t){switch(t){case e.BalancerErrorCode.ABOVE_MAX_TOKENS:return"the array contains more tokens than the maximum allowed";case e.BalancerErrorCode.BELOW_MIN_TOKENS:return"the array does not contain the minimum quantity of tokens";case e.BalancerErrorCode.EXIT_DELTA_AMOUNTS:return"Error when checking exit call deltas";case e.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED:return"Fee Provider Repository has not been provided";case e.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Helper Contract address has not been provided";case e.BalancerErrorCode.GAUGES_NOT_FOUND:return"Liquidity Gauges not found with given addresses";case e.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Reward Minter Contract address has not been provided";case e.BalancerErrorCode.GAUGES_REWARD_TOKEN_EMPTY:return"No Reward Tokens for Liquidity Gauges provided";case e.BalancerErrorCode.INPUT_LENGTH_MISMATCH:return"input length mismatch";case e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS:return"input out of bounds";case e.BalancerErrorCode.INPUT_TOKEN_INVALID:return"input token invalid";case e.BalancerErrorCode.INVALID_PROTOCOL_ID:return"The provided protocol id does not correspond to a protocol";case e.BalancerErrorCode.INVALID_SWAP_FEE_PERCENTAGE:return"The swap fee needs to be greater than zero and less than 1e17(10%)";case e.BalancerErrorCode.INVALID_WEIGHTS:return"The sum of the weights needs to be equal to 1e18(100%)";case e.BalancerErrorCode.JOIN_DELTA_AMOUNTS:return"Error when checking join call deltas";case e.BalancerErrorCode.JOIN_WITH_ZERO_AMOUNT:return"Cant join pool with 0 amount of token in";case e.BalancerErrorCode.MISSING_AMP:return"missing amp";case e.BalancerErrorCode.MISSING_DECIMALS:return"missing decimals";case e.BalancerErrorCode.MISSING_PRICE_RATE:return"missing price rate";case e.BalancerErrorCode.MISSING_TOKENS:return"missing tokens";case e.BalancerErrorCode.MISSING_WEIGHT:return"missing weight";case e.BalancerErrorCode.NO_POOL_DATA:return"no pool data";case e.BalancerErrorCode.NO_VALUE_PARAMETER:return"Illegal value passed as parameter";case e.BalancerErrorCode.POOL_DOESNT_EXIST:return"balancer pool does not exist";case e.BalancerErrorCode.RELAY_SWAP_AMOUNTS:return"Error when checking swap amounts";case e.BalancerErrorCode.REWARD_TOKEN_ZERO:return"All Zero Values for Reward Tokens";case e.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE:return"Timestamp cannot be in the future";case e.BalancerErrorCode.TOKEN_MISMATCH:return"token mismatch";case e.BalancerErrorCode.UNSUPPORTED_PAIR:return"unsupported token pair";case e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE:return"unsupported pool type";default:return"Unknown error"}}}function Nn(e,t,n){return n?function(e,t){const n=pe-be.divDownFixed(e,t);return n<0?BigInt(0):n}(e,t):function(e,t){const n=be.divDownFixed(e,t)-pe;return n<0?BigInt(0):n}(e,t)}const Dn=BigInt(1e3);function Ln(e,t,n,a){const o=t.length,i=function(e,t,n){let a=se;const o=t.length;for(let e=0;e<o;e++)a+=t[e];if(a==se)return se;let i=se,s=a;const r=e*BigInt(o);for(let e=0;e<255;e++){let e=t[0]*BigInt(o);for(let a=1;a<o;a++)e=be.div(be.mul(be.mul(e,t[a]),BigInt(o)),s,n);if(i=s,s=be.div(be.mul(be.mul(BigInt(o),s),s)+be.div(be.mul(be.mul(r,a),e),Dn,n),be.mul(BigInt(o+1),s)+be.div(be.mul(r-Dn,e),Dn,!n),n),s>i){if(s-i<=1)return s}else if(i-s<=1)return s}throw new Error("Errors.STABLE_INVARIANT_DIDNT_CONVERGE")}(e,t,!0);let s=se,r=i/BigInt(o);for(let e=0;e<o;e++)e!=a&&(s+=t[e],r=r*i/(BigInt(o)*t[e]));const p=t[a],l=e*BigInt(o),d=l*s,u=BigInt(Dn)-l,c=BigInt(2)*l*p+d+u*i,y=r*BigInt(o+1)*Dn-u*p;return be.divUpFixed(c*n/y,i)}class Un{bptZeroPriceImpact(t,n){const{ampWithPrecision:a,scalingFactorsWithoutBpt:o,totalSharesEvm:i,upScaledBalancesWithoutBpt:s}=Te(t);if(n.length!==s.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);let r=se;for(let e=0;e<s.length;e++){r+=Ln(a,s,i,e)*ue(n[e],o[e])/pe}return r}calcPriceImpact(e,t,n,a){return Nn(n,this.bptZeroPriceImpact(e,t),a).toString()}}class qn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:l,expectedAmountsOut:d}=p.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...p,bptIn:n,slippage:a}),u=p.singleTokenOutIndex>=0?k.exitExactBPTInForOneTokenOut(n,p.singleTokenOutIndex):k.exitExactBPTInForTokensOut(n),c=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,minAmountsOut:l,userData:u,toInternalBalance:r}),y=(new Un).calcPriceImpact(t,d.map(BigInt),BigInt(n),!1);return{...c,expectedAmountsOut:d,minAmountsOut:l,priceImpact:y}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(a,n,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{expectedBPTIn:p,maxBPTIn:l}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),{downScaledAmountsOut:d,poolTokens:u}=r,c=k.exitBPTInForExactTokensOut(d,l);return{...this.encodeExitPool({poolId:t.id,userData:c,poolTokens:u,minAmountsOut:d,exiter:e,toInternalBalance:s}),expectedBPTIn:p,maxBPTIn:l,priceImpact:(new Un).calcPriceImpact(t,d.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const i=Te(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,singleTokenOutIndex:-1,bptIn:n,slippage:a}),p=v.recoveryModeExit(n),l=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:p,toInternalBalance:o}),d=(new Un).calcPriceImpact(t,r.map(BigInt),BigInt(n),!1);return{...l,expectedAmountsOut:r,minAmountsOut:s,priceImpact:d}},this.checkInputsExactBPTIn=({bptIn:t,singleTokenOut:o,pool:i,shouldUnwrapNativeAsset:s})=>{if(!t.length||a.parseFixed(t,18).isNegative())throw new Rn(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(o&&o!==n.AddressZero&&!i.tokens.map((e=>e.address)).some((e=>Ye(e,o))))throw new Rn(e.BalancerErrorCode.TOKEN_MISMATCH);if(!s&&o===n.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(i.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS);if(!i.amp)throw new Rn(e.BalancerErrorCode.MISSING_AMP)},this.checkInputsExactTokensOut=(t,n,a)=>{if(n.length!=t.length||n.length!=a.tokensList.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS);if(!a.amp)throw new Rn(e.BalancerErrorCode.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:n,singleTokenOut:a})=>{const o=Te(e,t,n),{poolTokens:i}=o;let s=-1;return a&&(s=i.indexOf(a)),{...o,singleTokenOutIndex:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:a,tokensOut:o})=>{const i=o.some((e=>e===n.AddressZero)),s=Te(e,t,i),{scalingFactors:r}=s,p=new Q(t),[,l]=p.sortTokens(o,a),d=ce(l.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...s,upScaledAmountsOut:d,downScaledAmountsOut:l}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,ampWithPrecision:t,upScaledBalances:n,totalSharesEvm:o,swapFeeEvm:i,singleTokenOutIndex:s,bptIn:r,slippage:p,scalingFactors:l})=>{const d=E.StableMathBigInt._calcTokenOutGivenExactBptIn(t,n,s,BigInt(r),o,i).toString(),u=ye(BigInt(d)-BigInt(1),l[s]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[s]=u,y[s]=je(a.BigNumber.from(u),a.BigNumber.from(p)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:n,bptIn:o,slippage:i})=>{const s=me(E.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(o),t),n),r=s.map((e=>e.toString()));return{minAmountsOut:s.map((e=>je(a.BigNumber.from(e),a.BigNumber.from(i)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsOut:n,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=E.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,n,o,i).toString();return{maxBPTIn:Xe(a.BigNumber.from(r),a.BigNumber.from(s)).toString(),expectedBPTIn:r}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:n,minAmountsOut:a,userData:o,toInternalBalance:i})=>{const s=On,r="exitPool",p={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:n,minAmountsOut:a,userData:o,toInternalBalance:i}};return{data:yn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest]),to:s,functionName:r,attributes:p}}}}class Vn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(n,a,t);const s=this.sortValues({pool:t,wrappedNativeAsset:i,tokensIn:n,amountsIn:a}),{expectedBPTOut:r,minBPTOut:p}=this.calcBptOutGivenExactTokensIn({...s,slippage:o});return{...this.encodeJoinPool({joiner:e,amountsIn:a,tokensIn:n,poolId:t.id,minBPTOut:p,...s}),minBPTOut:p,expectedBPTOut:r,priceImpact:(new Un).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r),!0)}},this.checkInputs=(t,n,a)=>{if(n.length!=t.length||n.length!=a.tokensList.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS);if(!a.amp)throw new Rn(e.BalancerErrorCode.MISSING_AMP)},this.sortValues=({pool:e,wrappedNativeAsset:t,amountsIn:a,tokensIn:o})=>{const{poolTokens:i,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:p,scalingFactors:l,upScaledBalances:d}=Te(e,t,o.includes(n.AddressZero)),u=new Q(t),[,c]=u.sortTokens(o,a);return{poolTokens:i,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:p,upScaledBalances:d,upScaledAmountsIn:ce(c.map((e=>BigInt(e))),l.map((e=>BigInt(e)))),sortedAmountsIn:c}},this.calcBptOutGivenExactTokensIn=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsIn:n,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=E.StableMathBigInt._calcBptOutGivenExactTokensIn(e,t,n,o,i).toString();return{expectedBPTOut:r,minBPTOut:je(a.BigNumber.from(r),a.BigNumber.from(s)).toString()}},this.encodeJoinPool=({poolId:e,joiner:t,poolTokens:n,sortedAmountsIn:a,amountsIn:o,tokensIn:i,minBPTOut:s})=>{const r=k.joinExactTokensInForBPTOut(a,s),p=On,l="joinPool",d={poolId:e,sender:t,recipient:t,joinPoolRequest:{assets:n,maxAmountsIn:a,userData:r,fromInternalBalance:!1}};return{attributes:d,data:yn.createInterface().encodeFunctionData(l,[d.poolId,d.sender,d.recipient,d.joinPoolRequest]),functionName:l,to:p,value:Ge(i,o)}}}}class Gn{calcTotal(e){var t,n;let o=a.BigNumber.from(0),i=a.BigNumber.from(0);for(let n=0;n<e.length;n++){const a=e[n];if(!(null===(t=a.price)||void 0===t?void 0:t.usd))continue;const s=$e(a.price.usd.toString(),18),r=$e(a.balance,18),p=r.mul(s);i=i.add(p),o=o.add(r)}if(o.gt(0)){const t=i.div(o);for(let a=0;a<e.length;a++){const s=e[a];if(null===(n=s.price)||void 0===n?void 0:n.usd)continue;const r=$e(s.balance,18),p=r.mul(t);i=i.add(p),o=o.add(r)}}return a.formatFixed(i,36).toString()}}class Wn{calcPoolSpotPrice(e,t,n){const a=l.StablePool.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,l.ZERO).toString()}}class $n{constructor(e=new qn,t=new Vn,n=new Gn,a=new Wn,o=new Un){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class Kn{calcPoolSpotPrice(e,t,n){const a=l.PhantomStablePool.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,l.ZERO).toString()}}class Hn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(n,a,t.tokensList);const s=this.sortValuesBasedOnPoolVersion({pool:t,wrappedNativeAsset:i,amountsIn:a,tokensIn:n}),r=this.buildExactTokensInForBPTOut({...s,slippage:o,joiner:e,poolId:t.id}),p=Ge(n,a),l=(new Un).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r.expectedBPTOut),!0);return{...r,to:On,value:p,priceImpact:l}}}sortValuesBasedOnPoolVersion({pool:e,wrappedNativeAsset:t,amountsIn:n,tokensIn:a}){return this.sortV1(t,a,n,e)}checkInputs(t,n,a){if(t.length!=n.length||t.length!=a.length-1)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH)}encodeUserDataExactTokensInForBPTOut(e,t,n){const o=je(a.BigNumber.from(e),a.BigNumber.from(t)).toString();return{userData:F.joinExactTokensInForBPTOut(n,o),minBPTOut:o}}encodeJoinPool(e,t,n,a,o,i){const s="joinPool",r={poolId:e,sender:t,recipient:n,joinPoolRequest:{assets:a,maxAmountsIn:i,userData:o,fromInternalBalance:!1}};return{functionName:s,attributes:r,data:yn.createInterface().encodeFunctionData(s,[r.poolId,r.sender,r.recipient,r.joinPoolRequest])}}sortV1(e,t,a,o){const i=new Q(e),[,s]=i.sortTokens(t,a),{poolTokens:r,ampWithPrecision:p,swapFeeEvm:l,totalSharesEvm:d,bptIndex:u,scalingFactorsWithoutBpt:c,upScaledBalancesWithoutBpt:y}=Te(o,e,t.includes(n.AddressZero));return{sortedAmountsIn:s,scalingFactorsWithoutBpt:c,upScaledBalancesWithoutBpt:y,ampWithPrecision:p,totalSharesEvm:d,swapFeeEvm:l,bptIndex:u,poolTokens:r}}buildExactTokensInForBPTOut(e){const{sortedAmountsIn:t,scalingFactorsWithoutBpt:n,upScaledBalancesWithoutBpt:a,ampWithPrecision:o,totalSharesEvm:i,swapFeeEvm:s,bptIndex:r,poolTokens:p,slippage:l,poolId:d,joiner:u}=e,c=this.calcBptOutGivenExactTokensIn(t,n,a,o,i,s),y=this.encodeUserDataExactTokensInForBPTOut(c,l,t),{functionName:m,data:b,attributes:f}=this.encodeJoinPool(d,u,u,p,y.userData,ze(t,r,"0"));return{functionName:m,data:b,attributes:f,minBPTOut:y.minBPTOut,expectedBPTOut:c.toString()}}calcBptOutGivenExactTokensIn(e,t,n,a,o,i){const s=ce(e.map(BigInt),t.map(BigInt));return l.StableMathBigInt._calcBptOutGivenExactTokensIn(a,n,s,o,i)}sortV4(e,t,n){const{poolTokens:a,poolTokensWithoutBpt:o,ampWithPrecision:i,swapFeeEvm:s,totalSharesEvm:r,scalingFactorsWithoutBpt:p,upScaledBalancesWithoutBpt:l}=Te(n),[d]=et(o,e,t);return{sortedAmountsIn:d,scalingFactorsWithoutBpt:p,upScaledBalancesWithoutBpt:l,ampWithPrecision:i,totalSharesEvm:r,swapFeeEvm:s,bptIndex:0,poolTokens:a}}}class Jn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:l,expectedAmountsOut:d}=p.singleTokenOutIndexWithoutBpt>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...p,bptIn:n,slippage:a}),u=p.singleTokenOutIndexWithoutBpt>=0?F.exitExactBPTInForOneTokenOut(n,p.singleTokenOutIndexWithoutBpt):F.exitExactBPTInForAllTokensOut(n),c=ze(l,p.bptIndex,"0"),y=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,userData:u,minAmountsOut:c,toInternalBalance:r}),m=(new Un).calcPriceImpact(t,d.map(BigInt),BigInt(n),!1);return{...y,expectedAmountsOut:d,minAmountsOut:l,priceImpact:m}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(n,a,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{bptIn:p,maxBPTIn:l}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),d=F.exitBPTInForExactTokensOut(r.downscaledAmountsOutWithoutBpt,l);return{...this.encodeExitPool({poolTokens:r.poolTokens,minAmountsOut:r.downscaledAmountsOutWithBpt,userData:d,exiter:e,poolId:t.id,toInternalBalance:s}),maxBPTIn:l,expectedBPTIn:p,priceImpact:(new Un).calcPriceImpact(t,r.downscaledAmountsOutWithoutBpt.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{this.checkInputsRecoveryExit({bptIn:n,pool:t}),t.tokens.forEach((e=>e.priceRate="1"));const i=Te(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:n,slippage:a}),p=v.recoveryModeExit(n),l=ze(s,i.bptIndex,"0"),d=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,userData:p,minAmountsOut:l,toInternalBalance:o}),u=(new Un).calcPriceImpact(t,r.map(BigInt),BigInt(n),!1);return{...d,expectedAmountsOut:r,minAmountsOut:s,priceImpact:u}},this.checkInputsExactBPTIn=({bptIn:t,singleTokenOut:o,pool:i,shouldUnwrapNativeAsset:s})=>{if(a.BigNumber.from(t).lte(0))throw new Rn(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(!o&&i.poolTypeVersion<2)throw new Error("Unsupported Exit Type For Pool");if(o&&o!==n.AddressZero&&!i.tokens.map((e=>e.address)).some((e=>Ye(e,o))))throw new Rn(e.BalancerErrorCode.TOKEN_MISMATCH);if(!s&&o===n.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(i.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS);if(!i.amp)throw new Rn(e.BalancerErrorCode.MISSING_AMP)},this.checkInputsExactTokensOut=(t,n,a)=>{if(t.length!=n.length||t.length!=a.tokensList.length-1)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH)},this.checkInputsRecoveryExit=({bptIn:t,pool:n})=>{if(a.BigNumber.from(t).lte(0))throw new Rn(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(!n.isInRecoveryMode)throw new Error("Exit type not supported because pool is not in Recovery Mode");if(n.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS);if(!n.amp)throw new Rn(e.BalancerErrorCode.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,singleTokenOut:t,wrappedNativeAsset:n,shouldUnwrapNativeAsset:a})=>{const o=Te(e,n,a);let i=-1;return t&&(i=o.poolTokensWithoutBpt.indexOf(t)),{...o,singleTokenOutIndexWithoutBpt:i}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:o,tokensOut:i})=>{const s=i.some((e=>e===n.AddressZero)),r=Te(e,t,s),p=new Q(t),[,l]=p.sortTokens(i,o),d=ze(l,r.bptIndex,"0").map((e=>{const t=a.BigNumber.from(e);return t.isZero()?e:t.sub(1).toString()})),u=ce(l.map((e=>BigInt(e))),r.scalingFactorsWithoutBpt);return{...r,upScaledAmountsOutWithoutBpt:u,downscaledAmountsOutWithBpt:d,downscaledAmountsOutWithoutBpt:l}},this.calcTokenOutGivenExactBptIn=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,singleTokenOutIndexWithoutBpt:n,scalingFactorsWithoutBpt:o,totalSharesEvm:i,swapFeeEvm:s,bptIn:r,slippage:p})=>{const l=E.StableMathBigInt._calcTokenOutGivenExactBptIn(e,t,n,BigInt(r),i,s),d=Array(t.length).fill("0"),u=Array(t.length).fill("0"),c=ye(l,o[n]);return d[n]=c.toString(),u[n]=je(a.BigNumber.from(c),a.BigNumber.from(p)).toString(),{minAmountsOut:u,expectedAmountsOut:d}},this.calcTokensOutGivenExactBptIn=({upScaledBalancesWithoutBpt:e,totalSharesEvm:t,scalingFactorsWithoutBpt:n,bptIn:o,slippage:i})=>{const s=me(E.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(o),t),n),r=s.map((e=>e.toString()));return{minAmountsOut:s.map((e=>je(a.BigNumber.from(e),a.BigNumber.from(i)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,upScaledAmountsOutWithoutBpt:n,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=E.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,n,o,i).toString();return{bptIn:r,maxBPTIn:Xe(a.BigNumber.from(r),a.BigNumber.from(s)).toString()}},this.encodeExitPool=e=>{const{exiter:t,poolId:n,minAmountsOut:a,userData:o,poolTokens:i,toInternalBalance:s}=e,r="exitPool",p={poolId:n,sender:t,recipient:t,exitPoolRequest:{assets:i,minAmountsOut:a,userData:o,toInternalBalance:s}};return{to:On,functionName:r,attributes:p,data:yn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest])}}}}class jn{constructor(e=new Jn,t=new Gn,n=new Kn,a=new Un,o=new Hn){this.exit=e,this.liquidity=t,this.spotPriceCalculator=n,this.priceImpactCalculator=a,this.join=o}}class Xn{bptZeroPriceImpact(t,n){if(n.length!==t.tokensList.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);const{scalingFactorsRaw:a,totalSharesEvm:o,upScaledBalances:i,weights:s}=Te(t);let r=se;for(let e=0;e<n.length;e++){r+=s[e]*o/i[e]*ue(n[e],a[e])/pe}return r}calcPriceImpact(e,t,n,a){return Nn(n,this.bptZeroPriceImpact(e,t),a).toString()}}class Yn{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:l,expectedAmountsOut:d}=p.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...p,bptIn:n,slippage:a}),u=p.singleTokenOutIndex>=0?B.exitExactBPTInForOneTokenOut(n,p.singleTokenOutIndex):B.exitExactBPTInForTokensOut(n),c=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,minAmountsOut:l,userData:u,toInternalBalance:r}),y=(new Xn).calcPriceImpact(t,d.map(BigInt),BigInt(n),!1);return{...c,expectedAmountsOut:d,minAmountsOut:l,priceImpact:y}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(a,n,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{expectedBPTIn:p,maxBPTIn:l}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),{downScaledAmountsOut:d,poolTokens:u}=r,c=B.exitBPTInForExactTokensOut(d,l);return{...this.encodeExitPool({poolId:t.id,userData:c,poolTokens:u,minAmountsOut:d,exiter:e,toInternalBalance:s}),expectedBPTIn:p,maxBPTIn:l,priceImpact:(new Xn).calcPriceImpact(t,d.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1}),t.tokens.forEach((e=>e.priceRate="1"));const i=Te(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:n,slippage:a,singleTokenOutIndex:-1}),p=v.recoveryModeExit(n),l=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:p,toInternalBalance:o}),d=(new Xn).calcPriceImpact(t,r.map(BigInt),BigInt(n),!1);return{...l,expectedAmountsOut:r,minAmountsOut:s,priceImpact:d}},this.checkInputsExactBPTIn=({bptIn:t,singleTokenOut:o,pool:i,shouldUnwrapNativeAsset:s})=>{if(!t.length||a.parseFixed(t,18).isNegative())throw new Rn(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(o&&o!==n.AddressZero&&!i.tokens.map((e=>e.address)).some((e=>Ye(e,o))))throw new Rn(e.BalancerErrorCode.TOKEN_MISMATCH);if(!s&&o===n.AddressZero)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(i.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS)},this.checkInputsExactTokensOut=(t,n,a)=>{if(n.length!=t.length||n.length!=a.tokensList.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:n,singleTokenOut:a})=>{const o=Te(e,t,n),{poolTokens:i}=o;let s=-1;return a&&(s=i.indexOf(a.toLowerCase())),{...o,singleTokenOutIndex:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:a,tokensOut:o})=>{const i=o.some((e=>e===n.AddressZero)),s=Te(e,t,i),{scalingFactors:r}=s,p=new Q(t),[,l]=p.sortTokens(o,a),d=ce(l.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...s,upScaledAmountsOut:d,downScaledAmountsOut:l}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,weights:t,upScaledBalances:n,totalSharesEvm:o,swapFeeEvm:i,singleTokenOutIndex:s,bptIn:r,slippage:p,scalingFactors:l})=>{const d=E.WeightedMaths._calcTokenOutGivenExactBptIn(n[s],t[s],BigInt(r),o,i).toString(),u=ye(BigInt(d)-BigInt(1),l[s]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[s]=u,y[s]=je(a.BigNumber.from(u),a.BigNumber.from(p)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:n,bptIn:o,slippage:i})=>{const s=me(E.WeightedMaths._calcTokensOutGivenExactBptIn(e,BigInt(o),t).map((e=>e.toString())).map((e=>BigInt(e))),n),r=s.map((e=>e.toString()));return{minAmountsOut:s.map((e=>je(a.BigNumber.from(e),a.BigNumber.from(i)).toString())),expectedAmountsOut:r}},this.calcBptInGivenExactTokensOut=({weights:e,upScaledBalances:t,upScaledAmountsOut:n,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=E.WeightedMaths._calcBptInGivenExactTokensOut(t,e,n,o,i).toString();return{maxBPTIn:Xe(a.BigNumber.from(r),a.BigNumber.from(s)).toString(),expectedBPTIn:r}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:n,minAmountsOut:a,userData:o,toInternalBalance:i})=>{const s=On,r="exitPool",p={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:n,minAmountsOut:a,userData:o,toInternalBalance:i}};return{data:yn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest]),to:s,functionName:r,attributes:p}}}}class zn{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(a,n,t);const s=this.sortValues({pool:t,wrappedNativeAsset:i,tokensIn:n,amountsIn:a}),{expectedBPTOut:r,minBPTOut:p}=this.calcBptOutGivenExactTokensIn({...s,slippage:o});return{...this.encodeJoinPool({...s,poolId:t.id,joiner:e,minBPTOut:p,tokensIn:n,amountsIn:a}),minBPTOut:p,expectedBPTOut:r,priceImpact:(new Xn).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r),!0)}},this.checkInputs=(t,n,a)=>{if(t.length!=n.length||t.length!=a.tokensList.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(a.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS);if(a.tokens.some((e=>!e.weight)))throw new Rn(e.BalancerErrorCode.MISSING_WEIGHT)},this.sortValues=({pool:e,tokensIn:t,amountsIn:a,wrappedNativeAsset:o})=>{const i=t.some((e=>e===n.AddressZero)),s=Te(e,o,i),r=new Q(o),[,p]=r.sortTokens(t,a),l=ce(p.map(BigInt),s.scalingFactors);return{...s,sortedAmountsIn:p,upScaledAmountsIn:l}},this.calcBptOutGivenExactTokensIn=({upScaledBalances:e,weights:t,upScaledAmountsIn:n,totalSharesEvm:o,swapFeeEvm:i,slippage:s})=>{const r=l.WeightedMaths._calcBptOutGivenExactTokensIn(e,t,n,o,i).toString();return{expectedBPTOut:r,minBPTOut:je(a.BigNumber.from(r),a.BigNumber.from(s)).toString()}},this.encodeJoinPool=({sortedAmountsIn:e,poolTokens:t,poolId:n,joiner:a,minBPTOut:o,amountsIn:i,tokensIn:s})=>{const r="joinPool",p={poolId:n,sender:a,recipient:a,joinPoolRequest:{assets:t,maxAmountsIn:e,userData:B.joinExactTokensInForBPTOut(e,o),fromInternalBalance:!1}};return{to:On,functionName:r,data:yn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.joinPoolRequest]),attributes:p,value:Ge(s,i)}}}}class Zn{calcTotal(e){var t;let n=a.BigNumber.from(0),o=a.BigNumber.from(0);for(let a=0;a<e.length;a++){const i=e[a];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;let s;s=parseFloat(i.price.usd)<1?$e(parseFloat(i.price.usd).toFixed(10),10).mul(1e8):$e(i.price.usd,18);const r=$e(i.balance,18),p=$e(i.weight||"0",18),l=r.mul(s);o=o.add(l),n=n.add(p)}const i=e.reduce(((e,t)=>e.add($e(t.weight||"0",18))),a.BigNumber.from(0));if(n.gt(0)){return Ke(o.mul(i).div(n),36)}return"0"}}class Qn{calcPoolSpotPrice(e,t,n){const a=e===n.address||t===n.address;if(a){const e={address:n.address,balance:n.totalShares,decimals:18,priceRate:"1",weight:"0"};n.tokens.push(e),n.tokensList.push(n.address)}const o=l.WeightedPool.fromPool(n),i=o.parsePoolPairData(e,t),s=o._spotPriceAfterSwapExactTokenInForTokenOut(i,l.ZERO).toString();return a&&(n.tokens.pop(),n.tokensList.pop()),s}}class ea{constructor(e=new Yn,t=new zn,n=new Zn,a=new Qn,o=new Xn){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class ta{calcTotal(e){var t,o;let i=n.Zero,s=n.Zero;for(let n=0;n<e.length;n++){const a=e[n];if(!(null===(t=a.price)||void 0===t?void 0:t.usd))continue;const o=$e(a.price.usd.toString(),18),r=$e(a.balance,18),p=r.mul(o);s=s.add(p),i=i.add(r)}if(i.gt(0)){const t=s.div(i);for(let n=0;n<e.length;n++){const a=e[n];if(null===(o=a.price)||void 0===o?void 0:o.usd)continue;const r=$e(a.balance,18),p=r.mul(t);s=s.add(p),i=i.add(r)}}return a.formatFixed(s,36).toString()}}class na{calcPoolSpotPrice(e,t,n){const a=l.MetaStablePool.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,l.ZERO).toString()}}class aa{constructor(e=new qn,t=new Vn,n=new ta,a=new na,o=new Un){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class oa{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{throw new Error("Exit type not supported")}}}class ia{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Join type not supported")}}}class sa{constructor(e=new oa,t=new ia,n=new Gn,a=new Kn,o=new Un){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class ra{bptZeroPriceImpact(e,t){throw new Error("Linear Pool bptZeroPriceImpact Not Implented")}calcPriceImpact(e,t,n,a){return"0"}}class pa{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1}),t.tokens.forEach((e=>e.priceRate="1"));const i=Te(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:n,slippage:a}),p=v.recoveryModeExit(n),l=ze(s,i.bptIndex,"0"),d=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:l,userData:p,toInternalBalance:o}),u=(new ra).calcPriceImpact(t,r.map(BigInt),BigInt(n),!1);return{...d,expectedAmountsOut:r,minAmountsOut:s,priceImpact:u}},this.checkInputsExactBPTIn=({bptIn:t,pool:n})=>{if(a.BigNumber.from(t).lte(0))throw new Rn(e.BalancerErrorCode.INPUT_OUT_OF_BOUNDS);if(n.tokens.some((e=>void 0===e.decimals)))throw new Rn(e.BalancerErrorCode.MISSING_DECIMALS)},this.calcTokensOutGivenExactBptIn=({bptIndex:e,upScaledBalances:t,totalSharesEvm:n,scalingFactors:o,bptIn:i,slippage:s})=>{const r=Qe(me(E.LinearMaths._calcTokensOutGivenExactBptIn(t,BigInt(i),n,e),o),e).map((e=>e.toString()));return{minAmountsOut:r.map((e=>je(a.BigNumber.from(e),a.BigNumber.from(s)).toString())),expectedAmountsOut:r}},this.encodeExitPool=e=>{const{exiter:t,poolId:n,minAmountsOut:a,userData:o,poolTokens:i,toInternalBalance:s}=e,r="exitPool",p={poolId:n,sender:t,recipient:t,exitPoolRequest:{assets:i,minAmountsOut:a,userData:o,toInternalBalance:s}};return{to:On,functionName:r,attributes:p,data:yn.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest])}}}}class la{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Join type not supported")}}}const da=18,ua=$e("1",da);class ca{calcTotal(e){var t,a;let o=n.Zero,i=n.Zero;for(let n=0;n<e.length;n++){const a=e[n];if(!(null===(t=a.price)||void 0===t?void 0:t.usd))continue;const s=$e(a.price.usd.toString(),da),r=$e(a.balance,da),p=r.mul(s);i=i.add(p),o=o.add(r)}if(o.gt(0)){const t=i.div(o);for(let n=0;n<e.length;n++){const s=e[n];if(null===(a=s.price)||void 0===a?void 0:a.usd)continue;const r=$e(s.priceRate||"1",da),p=$e(s.balance,da).mul(r).div(ua),l=p.mul(t);i=i.add(l),o=o.add(p)}}return Ke(i,36)}}class ya{calcPoolSpotPrice(e,t,n){const a=l.LinearPool.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,l.ZERO).toString()}}class ma{constructor(e=new pa,t=new la,n=new ca,a=new ya,o=new ra){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class ba{buildExitExactTokensOut(){throw new Error("FXExitConcern Not implemented")}buildRecoveryExit(){throw new Error("FXExitConcern Not implemented")}}class fa{calcTotal(e){var t,n;let o=BigInt(0),i=BigInt(0);for(let n=0;n<e.length;n++){const a=e[n];if(!(null===(t=a.price)||void 0===t?void 0:t.usd))continue;const s=$e(a.price.usd.toString(),18).toBigInt(),r=$e(a.balance,18).toBigInt(),p=be.mulDownFixed(r,s);i=be.add(i,p),o=be.add(o,r)}if(o>BigInt(0)){const t=be.divDownFixed(i,o);for(let a=0;a<e.length;a++){const s=e[a];if(null===(n=s.price)||void 0===n?void 0:n.usd)continue;const r=$e(s.balance,18).toBigInt(),p=be.mulDownFixed(r,t);i=be.add(i,p),o=be.add(o,r)}}return a.formatFixed(i.toString(),18).toString()}}class Ta{calcPoolSpotPrice(){throw new Error("FXSpotPriceConcern Not implemented")}}class ha{bptZeroPriceImpact(e,t){throw new Error("Not implemented")}calcPriceImpact(e,t,n,a){throw new Error("Not implemented")}}class Ia{buildJoin(){throw new Error("FXJoinConcern Not implemented")}}class _a{constructor(e=new ba,t=new fa,n=new Ta,a=new ha,o=new Ia){this.exit=e,this.liquidity=t,this.spotPriceCalculator=n,this.priceImpactCalculator=a,this.join=o}}class ga{buildExitExactTokensOut({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i}){throw new Error("Not implemented")}buildRecoveryExit({exiter:e,pool:t,bptIn:n,slippage:a}){throw new Error("Not implemented")}}class Pa{calcTotal(e){var t,n;let o=BigInt(0),i=BigInt(0);for(let n=0;n<e.length;n++){const a=e[n];if(!(null===(t=a.price)||void 0===t?void 0:t.usd))continue;const s=$e(a.price.usd.toString(),18).toBigInt(),r=$e(a.balance,18).toBigInt(),p=be.mulDownFixed(r,s);i=be.add(i,p),o=be.add(o,r)}if(o>BigInt(0)){const t=be.divDownFixed(i,o);for(let a=0;a<e.length;a++){const s=e[a];if(null===(n=s.price)||void 0===n?void 0:n.usd)continue;const r=$e(s.balance,18).toBigInt(),p=be.mulDownFixed(r,t);i=be.add(i,p),o=be.add(o,r)}}return a.formatFixed(i.toString(),18).toString()}}class wa{calcPoolSpotPrice(){throw new Error("GyroSpotPriceConcern Not implemented")}}class xa{bptZeroPriceImpact(e,t){throw new Error("Not implemented")}calcPriceImpact(e,t,n,a){throw new Error("Not implemented")}}class Ea{buildJoin(){throw new Error("GyroJoinConcern Not implemented")}}class Aa{constructor(e=new ga,t=new Pa,n=new wa,a=new xa,o=new Ea){this.exit=e,this.liquidity=t,this.spotPriceCalculator=n,this.priceImpactCalculator=a,this.join=o}}class Sa{constructor(e,t=new ea,n=new $n,a=new jn,o=new aa,i=new sa,s=new ma){this.weighted=t,this.stable=n,this.composableStable=a,this.metaStable=o,this.stablePhantom=i,this.linear=s}static from(t){switch(t){case"ComposableStable":return new jn;case"FX":return new _a;case"GyroE":case"Gyro2":case"Gyro3":return new Aa;case"MetaStable":return new aa;case"Stable":return new $n;case"StablePhantom":return new sa;case"Investment":case"LiquidityBootstrapping":case"Weighted":return new ea;default:if(tt(t))return new ma;throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}}}class va{constructor(e,t){this.pools=e,this.tokenPrices=t}async getLiquidity(e){const t=e.tokens.filter((t=>t.address!==e.address)),n=await Promise.all(t.map((async e=>{const t=await this.pools.findBy("address",e.address);if(!t)return;const n=$e(await this.getLiquidity(t),18),a=$e(t.totalShares,18),o=$e(e.balance,18),i=a.eq(0)?0:n.mul(o).div(a);return{address:t.address,liquidity:i.toString()}}))),o=n.reduce(((e,t)=>e.add(t?t.liquidity:a.BigNumber.from(0))),a.BigNumber.from(0)),i=t.filter((e=>!n.find((t=>(null==t?void 0:t.address)===e.address)))),s=await Promise.all(i.map((async e=>{var t;const n=await this.tokenPrices.find(e.address);return{address:e.address,decimals:e.decimals,priceRate:e.priceRate,price:(null==n?void 0:n.usd)&&n||{usd:null===(t=e.token)||void 0===t?void 0:t.latestUSDPrice},balance:e.balance,weight:e.weight}}))),r=$e(Sa.from(e.poolType).liquidity.calcTotal(s),18);return Ke(o.add(r),18)}async getBptPrice(e){const t=await this.getLiquidity(e);return(parseFloat(t)/parseFloat(e.totalShares)).toString()}}const ka=a.BigNumber.from("0"),Ba=e=>e?Object.keys(e).filter((t=>e[t].gt(ka))).reduce(((t,n)=>(t[n]=e[n],t)),{}):{},Oa=(e,t,n)=>e.map((e=>((e,t,n)=>{if(!t[e.address]&&!n[e.address])return e;const a=Ba(t[e.address]),o=Ba(n[e.address]);return e.claimableTokens||(e.claimableTokens={...a,...o}),e})(e,t,n))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),Ca=(e,t)=>{var n;if(t.rewardTokens)for(const a of Object.keys(t.rewardTokens))e[n=t.id]||(e[n]=[]),e[t.id].push(a);return e},Ma=new t.Interface(["function claim_rewards(address sender, address receiver) returns (uint256)","function claimable_tokens(address addr) view returns (uint256)","function claimable_reward(address addr, address token) view returns (uint256)"]),Fa=new t.Interface(["function mintMany(address[] gauges) returns (uint256)"]),Ra=new t.Interface(["function getPendingRewards(address gauge, address user, address token) view returns (uint256)","function claimRewardsFromGauges(address[] gauges, address user)"]);class Na{constructor(e,t,n,a,o,i){this.multicall=a,this.liquidityGauges=e,this.feeDistributor=t,this.chainId=n,this.gaugeClaimHelperAddress=o,this.balancerMinterAddress=i}async getClaimableRewardTokens(t){const n=await this.getGauges();if(!n.length)throw new Rn(e.BalancerErrorCode.GAUGES_NOT_FOUND);const a=n.map((e=>e.address)),o=this.getRewardTokens(n),i=await this.retrieveClaimableTokens(a,t),s=await this.retrieveClaimableRewards(o,t);return Oa(n,s,i)}async buildClaimRewardTokensRequest(t,n){if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new Rn(e.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED)}else if(!this.gaugeClaimHelperAddress)throw new Rn(e.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const o=(await this.getClaimableRewardTokens(n)).filter((e=>t.map((e=>e.toLowerCase())).includes(e.address.toLowerCase()))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),i=Array.from(new Set(o.map((e=>e.claimableTokens)).map((e=>Object.keys(e||{}))).flatMap((e=>e))));if(!i.length)throw new Rn(e.BalancerErrorCode.GAUGES_REWARD_TOKEN_EMPTY);const s=i.map((e=>o.reduce(((t,n)=>(n.claimableTokens&&n.claimableTokens[e]&&n.claimableTokens[e]!==ka&&(t=n.claimableTokens[e].add(t)),t)),a.BigNumber.from(0))));if(!s.length||s.every((e=>e.eq(ka))))throw new Rn(e.BalancerErrorCode.REWARD_TOKEN_ZERO);if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new Rn(e.BalancerErrorCode.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED);const a=Fa.encodeFunctionData("mintMany",[t]);return{to:this.balancerMinterAddress,from:n,callData:a,tokensOut:i,expectedTokensValue:s,functionName:"mintMany"}}{if(!this.gaugeClaimHelperAddress)throw new Rn(e.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const a=Ra.encodeFunctionData("claimRewardsFromGauges",[t,n]);return{to:this.gaugeClaimHelperAddress,from:n,callData:a,tokensOut:i,expectedTokensValue:s,functionName:"claimRewardsFromGauges"}}}async getClaimableVeBalTokens(t,n){var a;if(!this.feeDistributor)throw new Rn(e.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED);return null===(a=this.feeDistributor)||void 0===a?void 0:a.getClaimableBalances(t,n)}async buildClaimVeBalTokensRequest(t,n){if(!this.feeDistributor)throw new Rn(e.BalancerErrorCode.FEE_PROVIDER_NOT_PROVIDED);const a=await this.feeDistributor.getClaimableBalances(t,n),o=n.map((e=>{var t;return null!==(t=a[e])&&void 0!==t?t:ka}));if(o.every((e=>e.eq(ka))))throw new Rn(e.BalancerErrorCode.REWARD_TOKEN_ZERO);const i=this.feeDistributor.claimBalances(t,n);return{to:this.feeDistributor.feeDistributor.address,from:t,callData:i,tokensOut:n,expectedTokensValue:o,functionName:"claimTokens"}}async getGauges(){return await this.liquidityGauges.fetch()}getRewardTokens(e){return e.reduce(Ca,{})}async retrieveClaimableRewards(e,t){const n=Object.keys(e),{payload:o,paths:i}=this.getPayload(n,e,t),[,s]=await this.multicall.callStatic.aggregate(o),r=s.map((e=>"0x"==e?"0x0":e));return i.reduce((e=>(t,n,o)=>{var i;const s=a.BigNumber.from(`${e[o]}`);return s.gt(ka)&&(t[i=n.gauge]||(t[i]={}),t[n.gauge][n.token]=s),t})(r),{})}getPayload(e,t,n){const a=[],o=[];for(const i of e)for(const e of t[i])o.push({gauge:i,token:e}),a.push(this.getArguments(n,i,e));return{payload:a,paths:o}}getArguments(t,n,a){if(1===this.chainId||5===this.chainId)return{target:n,callData:Ma.encodeFunctionData("claimable_reward",[t,a])};if(!this.gaugeClaimHelperAddress)throw new Rn(e.BalancerErrorCode.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);return{target:this.gaugeClaimHelperAddress,callData:Ra.encodeFunctionData("getPendingRewards",[n,t,a])}}async retrieveClaimableTokens(t,n){if(this.chainId===e.Network.MAINNET||this.chainId===e.Network.GOERLI){const e=Cn[this.chainId].addresses.tokens.bal,o=t.map((e=>({target:e,callData:Ma.encodeFunctionData("claimable_tokens",[n])}))),[,i]=await this.multicall.callStatic.aggregate(o),s=i.map((e=>"0x"==e?"0x0":e));return t.reduce(((e,t)=>(n,o,i)=>{const s=a.BigNumber.from(`${e[i]}`);return s.gt(ka)&&(n[o]||(n[o]={}),n[o][t]=s),n})(s,e),{})}return{}}}async function Da(e,t,a,o){const i={sender:n.AddressZero,recipient:n.AddressZero,fromInternalBalance:!1,toInternalBalance:!1};try{return(await e.callStatic.queryBatchSwap(t,a,o,i)).map((e=>e.toString()))}catch(e){throw`queryBatchSwap call error: ${e}`}}var La,Ua,qa,Va,Ga,Wa,$a,Ka,Ha,Ja,ja,Xa,Ya,za,Za,Qa,eo,to,no,ao,oo,io,so,ro,po,lo,uo,co,yo,mo,bo;!function(e){e.Day="day",e.Hour="hour"}(La||(La={})),function(e){e.EndAmp="endAmp",e.EndTimestamp="endTimestamp",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartAmp="startAmp",e.StartTimestamp="startTimestamp"}(Ua||(Ua={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Timestamp="timestamp",e.TotalLiquidity="totalLiquidity",e.TotalProtocolFee="totalProtocolFee",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.Vault="vault",e.VaultId="vault__id",e.VaultPoolCount="vault__poolCount",e.VaultProtocolFeesCollector="vault__protocolFeesCollector",e.VaultTotalLiquidity="vault__totalLiquidity",e.VaultTotalProtocolFee="vault__totalProtocolFee",e.VaultTotalSwapCount="vault__totalSwapCount",e.VaultTotalSwapFee="vault__totalSwapFee",e.VaultTotalSwapVolume="vault__totalSwapVolume"}(qa||(qa={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Pools="pools",e.ProtocolFeesCollector="protocolFeesCollector",e.Snapshots="snapshots",e.TotalLiquidity="totalLiquidity",e.TotalProtocolFee="totalProtocolFee",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(Va||(Va={})),function(e){e.BptPrice="bptPrice",e.Id="id",e.LowerBoundPercentage="lowerBoundPercentage",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Token="token",e.TokenAddress="token__address",e.TokenAssetManager="token__assetManager",e.TokenBalance="token__balance",e.TokenCashBalance="token__cashBalance",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenIndex="token__index",e.TokenIsExemptFromYieldProtocolFee="token__isExemptFromYieldProtocolFee",e.TokenManagedBalance="token__managedBalance",e.TokenName="token__name",e.TokenOldPriceRate="token__oldPriceRate",e.TokenPaidProtocolFees="token__paidProtocolFees",e.TokenPriceRate="token__priceRate",e.TokenSymbol="token__symbol",e.TokenWeight="token__weight",e.UpperBoundPercentage="upperBoundPercentage"}(Ga||(Ga={})),function(e){e.Decimals="decimals",e.Divisor="divisor",e.Id="id",e.Tokens="tokens"}(Wa||(Wa={})),function(e){e.EndTimestamp="endTimestamp",e.EndWeights="endWeights",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartTimestamp="startTimestamp",e.StartWeights="startWeights"}($a||($a={})),function(e){e.Exit="Exit",e.Join="Join"}(Ka||(Ka={})),function(e){e.Amounts="amounts",e.Block="block",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Sender="sender",e.Timestamp="timestamp",e.Tx="tx",e.Type="type",e.User="user",e.UserId="user__id",e.ValueUsd="valueUSD"}(Ha||(Ha={})),function(e){e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset"}(Ja||(Ja={})),function(e){e.CashDelta="cashDelta",e.Id="id",e.ManagedDelta="managedDelta",e.PoolTokenId="poolTokenId",e.PoolTokenIdAddress="poolTokenId__address",e.PoolTokenIdAssetManager="poolTokenId__assetManager",e.PoolTokenIdBalance="poolTokenId__balance",e.PoolTokenIdCashBalance="poolTokenId__cashBalance",e.PoolTokenIdDecimals="poolTokenId__decimals",e.PoolTokenIdId="poolTokenId__id",e.PoolTokenIdIndex="poolTokenId__index",e.PoolTokenIdIsExemptFromYieldProtocolFee="poolTokenId__isExemptFromYieldProtocolFee",e.PoolTokenIdManagedBalance="poolTokenId__managedBalance",e.PoolTokenIdName="poolTokenId__name",e.PoolTokenIdOldPriceRate="poolTokenId__oldPriceRate",e.PoolTokenIdPaidProtocolFees="poolTokenId__paidProtocolFees",e.PoolTokenIdPriceRate="poolTokenId__priceRate",e.PoolTokenIdSymbol="poolTokenId__symbol",e.PoolTokenIdWeight="poolTokenId__weight",e.Timestamp="timestamp",e.Type="type"}(ja||(ja={})),function(e){e.Deposit="Deposit",e.Update="Update",e.Withdraw="Withdraw"}(Xa||(Xa={})),function(e){e.Asc="asc",e.Desc="desc"}(Ya||(Ya={})),function(e){e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z"}(za||(za={})),function(e){e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PoolLiquidity="poolLiquidity",e.PoolShareValue="poolShareValue",e.PoolTotalShares="poolTotalShares",e.PricingAsset="pricingAsset"}(Za||(Za={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(Qa||(Qa={})),function(e){e.Amounts="amounts",e.HoldersCount="holdersCount",e.Id="id",e.Liquidity="liquidity",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.ProtocolFee="protocolFee",e.SwapFees="swapFees",e.SwapVolume="swapVolume",e.SwapsCount="swapsCount",e.Timestamp="timestamp",e.TotalShares="totalShares"}(eo||(eo={})),function(e){e.Address="address",e.AssetManager="assetManager",e.Balance="balance",e.CashBalance="cashBalance",e.CircuitBreaker="circuitBreaker",e.CircuitBreakerBptPrice="circuitBreaker__bptPrice",e.CircuitBreakerId="circuitBreaker__id",e.CircuitBreakerLowerBoundPercentage="circuitBreaker__lowerBoundPercentage",e.CircuitBreakerUpperBoundPercentage="circuitBreaker__upperBoundPercentage",e.Decimals="decimals",e.Id="id",e.Index="index",e.IsExemptFromYieldProtocolFee="isExemptFromYieldProtocolFee",e.ManagedBalance="managedBalance",e.Managements="managements",e.Name="name",e.OldPriceRate="oldPriceRate",e.PaidProtocolFees="paidProtocolFees",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PriceRate="priceRate",e.Symbol="symbol",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenFxOracleDecimals="token__fxOracleDecimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenLatestUsdPriceTimestamp="token__latestUSDPriceTimestamp",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.Weight="weight"}(to||(to={})),function(e){e.Address="address",e.Alpha="alpha",e.Amp="amp",e.AmpUpdates="ampUpdates",e.BaseToken="baseToken",e.Beta="beta",e.C="c",e.CircuitBreakers="circuitBreakers",e.CreateTime="createTime",e.DSq="dSq",e.Delta="delta",e.Epsilon="epsilon",e.ExpiryTime="expiryTime",e.Factory="factory",e.HistoricalValues="historicalValues",e.HoldersCount="holdersCount",e.Id="id",e.IsInRecoveryMode="isInRecoveryMode",e.IsPaused="isPaused",e.JoinExitEnabled="joinExitEnabled",e.JoinsExits="joinsExits",e.Lambda="lambda",e.LastJoinExitAmp="lastJoinExitAmp",e.LastPostJoinExitInvariant="lastPostJoinExitInvariant",e.LatestAmpUpdate="latestAmpUpdate",e.LatestAmpUpdateEndAmp="latestAmpUpdate__endAmp",e.LatestAmpUpdateEndTimestamp="latestAmpUpdate__endTimestamp",e.LatestAmpUpdateId="latestAmpUpdate__id",e.LatestAmpUpdateScheduledTimestamp="latestAmpUpdate__scheduledTimestamp",e.LatestAmpUpdateStartAmp="latestAmpUpdate__startAmp",e.LatestAmpUpdateStartTimestamp="latestAmpUpdate__startTimestamp",e.LowerTarget="lowerTarget",e.MainIndex="mainIndex",e.ManagementAumFee="managementAumFee",e.ManagementFee="managementFee",e.MustAllowlistLPs="mustAllowlistLPs",e.Name="name",e.OracleEnabled="oracleEnabled",e.Owner="owner",e.PoolType="poolType",e.PoolTypeVersion="poolTypeVersion",e.PriceRateProviders="priceRateProviders",e.PrincipalToken="principalToken",e.ProtocolAumFeeCache="protocolAumFeeCache",e.ProtocolId="protocolId",e.ProtocolIdData="protocolIdData",e.ProtocolIdDataId="protocolIdData__id",e.ProtocolIdDataName="protocolIdData__name",e.ProtocolSwapFeeCache="protocolSwapFeeCache",e.ProtocolYieldFeeCache="protocolYieldFeeCache",e.Root3Alpha="root3Alpha",e.S="s",e.Shares="shares",e.Snapshots="snapshots",e.SqrtAlpha="sqrtAlpha",e.SqrtBeta="sqrtBeta",e.StrategyType="strategyType",e.SwapEnabled="swapEnabled",e.SwapEnabledCurationSignal="swapEnabledCurationSignal",e.SwapEnabledInternal="swapEnabledInternal",e.SwapFee="swapFee",e.Swaps="swaps",e.SwapsCount="swapsCount",e.Symbol="symbol",e.TauAlphaX="tauAlphaX",e.TauAlphaY="tauAlphaY",e.TauBetaX="tauBetaX",e.TauBetaY="tauBetaY",e.Tokens="tokens",e.TokensList="tokensList",e.TotalAumFeeCollectedInBpt="totalAumFeeCollectedInBPT",e.TotalLiquidity="totalLiquidity",e.TotalLiquiditySansBpt="totalLiquiditySansBPT",e.TotalProtocolFee="totalProtocolFee",e.TotalProtocolFeePaidInBpt="totalProtocolFeePaidInBPT",e.TotalShares="totalShares",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.TotalWeight="totalWeight",e.Tx="tx",e.U="u",e.UnitSeconds="unitSeconds",e.UpperTarget="upperTarget",e.V="v",e.VaultId="vaultID",e.VaultIdId="vaultID__id",e.VaultIdPoolCount="vaultID__poolCount",e.VaultIdProtocolFeesCollector="vaultID__protocolFeesCollector",e.VaultIdTotalLiquidity="vaultID__totalLiquidity",e.VaultIdTotalProtocolFee="vaultID__totalProtocolFee",e.VaultIdTotalSwapCount="vaultID__totalSwapCount",e.VaultIdTotalSwapFee="vaultID__totalSwapFee",e.VaultIdTotalSwapVolume="vaultID__totalSwapVolume",e.W="w",e.WeightUpdates="weightUpdates",e.WrappedIndex="wrappedIndex",e.Z="z"}(no||(no={})),function(e){e.Address="address",e.CacheDuration="cacheDuration",e.CacheExpiry="cacheExpiry",e.Id="id",e.LastCached="lastCached",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Rate="rate",e.Token="token",e.TokenAddress="token__address",e.TokenAssetManager="token__assetManager",e.TokenBalance="token__balance",e.TokenCashBalance="token__cashBalance",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenIndex="token__index",e.TokenIsExemptFromYieldProtocolFee="token__isExemptFromYieldProtocolFee",e.TokenManagedBalance="token__managedBalance",e.TokenName="token__name",e.TokenOldPriceRate="token__oldPriceRate",e.TokenPaidProtocolFees="token__paidProtocolFees",e.TokenPriceRate="token__priceRate",e.TokenSymbol="token__symbol",e.TokenWeight="token__weight"}(ao||(ao={})),function(e){e.Id="id",e.Name="name"}(oo||(oo={})),function(e){e.EndSwapFeePercentage="endSwapFeePercentage",e.EndTimestamp="endTimestamp",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartSwapFeePercentage="startSwapFeePercentage",e.StartTimestamp="startTimestamp"}(io||(io={})),function(e){e.Block="block",e.Caller="caller",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Timestamp="timestamp",e.TokenAmountIn="tokenAmountIn",e.TokenAmountOut="tokenAmountOut",e.TokenIn="tokenIn",e.TokenInSym="tokenInSym",e.TokenOut="tokenOut",e.TokenOutSym="tokenOutSym",e.Tx="tx",e.UserAddress="userAddress",e.UserAddressId="userAddress__id",e.ValueUsd="valueUSD"}(so||(so={})),function(e){e.Amount="amount",e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdJoinExitEnabled="poolId__joinExitEnabled",e.PoolIdLambda="poolId__lambda",e.PoolIdLastJoinExitAmp="poolId__lastJoinExitAmp",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementAumFee="poolId__managementAumFee",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdMustAllowlistLPs="poolId__mustAllowlistLPs",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapEnabledCurationSignal="poolId__swapEnabledCurationSignal",e.PoolIdSwapEnabledInternal="poolId__swapEnabledInternal",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalAumFeeCollectedInBpt="poolId__totalAumFeeCollectedInBPT",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalLiquiditySansBpt="poolId__totalLiquiditySansBPT",e.PoolIdTotalProtocolFee="poolId__totalProtocolFee",e.PoolIdTotalProtocolFeePaidInBpt="poolId__totalProtocolFeePaidInBPT",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset",e.Timestamp="timestamp"}(ro||(ro={})),function(e){e.Id="id",e.Timestamp="timestamp",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenFxOracleDecimals="token__fxOracleDecimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenLatestUsdPriceTimestamp="token__latestUSDPriceTimestamp",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(po||(po={})),function(e){e.Address="address",e.Decimals="decimals",e.FxOracleDecimals="fxOracleDecimals",e.Id="id",e.LatestFxPrice="latestFXPrice",e.LatestPrice="latestPrice",e.LatestPriceAsset="latestPrice__asset",e.LatestPriceBlock="latestPrice__block",e.LatestPriceId="latestPrice__id",e.LatestPricePrice="latestPrice__price",e.LatestPricePricingAsset="latestPrice__pricingAsset",e.LatestUsdPrice="latestUSDPrice",e.LatestUsdPriceTimestamp="latestUSDPriceTimestamp",e.Name="name",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolJoinExitEnabled="pool__joinExitEnabled",e.PoolLambda="pool__lambda",e.PoolLastJoinExitAmp="pool__lastJoinExitAmp",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementAumFee="pool__managementAumFee",e.PoolManagementFee="pool__managementFee",e.PoolMustAllowlistLPs="pool__mustAllowlistLPs",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapEnabledCurationSignal="pool__swapEnabledCurationSignal",e.PoolSwapEnabledInternal="pool__swapEnabledInternal",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalAumFeeCollectedInBpt="pool__totalAumFeeCollectedInBPT",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalLiquiditySansBpt="pool__totalLiquiditySansBPT",e.PoolTotalProtocolFee="pool__totalProtocolFee",e.PoolTotalProtocolFeePaidInBpt="pool__totalProtocolFeePaidInBPT",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Symbol="symbol",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(lo||(lo={})),function(e){e.Id="id",e.Pair="pair",e.PairId="pair__id",e.PairTotalSwapFee="pair__totalSwapFee",e.PairTotalSwapVolume="pair__totalSwapVolume",e.Timestamp="timestamp",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(uo||(uo={})),function(e){e.Id="id",e.Token0="token0",e.Token0Address="token0__address",e.Token0Decimals="token0__decimals",e.Token0FxOracleDecimals="token0__fxOracleDecimals",e.Token0Id="token0__id",e.Token0LatestFxPrice="token0__latestFXPrice",e.Token0LatestUsdPrice="token0__latestUSDPrice",e.Token0LatestUsdPriceTimestamp="token0__latestUSDPriceTimestamp",e.Token0Name="token0__name",e.Token0Symbol="token0__symbol",e.Token0TotalBalanceNotional="token0__totalBalanceNotional",e.Token0TotalBalanceUsd="token0__totalBalanceUSD",e.Token0TotalSwapCount="token0__totalSwapCount",e.Token0TotalVolumeNotional="token0__totalVolumeNotional",e.Token0TotalVolumeUsd="token0__totalVolumeUSD",e.Token1="token1",e.Token1Address="token1__address",e.Token1Decimals="token1__decimals",e.Token1FxOracleDecimals="token1__fxOracleDecimals",e.Token1Id="token1__id",e.Token1LatestFxPrice="token1__latestFXPrice",e.Token1LatestUsdPrice="token1__latestUSDPrice",e.Token1LatestUsdPriceTimestamp="token1__latestUSDPriceTimestamp",e.Token1Name="token1__name",e.Token1Symbol="token1__symbol",e.Token1TotalBalanceNotional="token1__totalBalanceNotional",e.Token1TotalBalanceUsd="token1__totalBalanceUSD",e.Token1TotalSwapCount="token1__totalSwapCount",e.Token1TotalVolumeNotional="token1__totalVolumeNotional",e.Token1TotalVolumeUsd="token1__totalVolumeUSD",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(co||(co={})),function(e){e.Balance="balance",e.Id="id",e.Token="token",e.TokenInfo="tokenInfo",e.TokenInfoAddress="tokenInfo__address",e.TokenInfoDecimals="tokenInfo__decimals",e.TokenInfoFxOracleDecimals="tokenInfo__fxOracleDecimals",e.TokenInfoId="tokenInfo__id",e.TokenInfoLatestFxPrice="tokenInfo__latestFXPrice",e.TokenInfoLatestUsdPrice="tokenInfo__latestUSDPrice",e.TokenInfoLatestUsdPriceTimestamp="tokenInfo__latestUSDPriceTimestamp",e.TokenInfoName="tokenInfo__name",e.TokenInfoSymbol="tokenInfo__symbol",e.TokenInfoTotalBalanceNotional="tokenInfo__totalBalanceNotional",e.TokenInfoTotalBalanceUsd="tokenInfo__totalBalanceUSD",e.TokenInfoTotalSwapCount="tokenInfo__totalSwapCount",e.TokenInfoTotalVolumeNotional="tokenInfo__totalVolumeNotional",e.TokenInfoTotalVolumeUsd="tokenInfo__totalVolumeUSD",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(yo||(yo={})),function(e){e.Id="id",e.SharesOwned="sharesOwned",e.Swaps="swaps",e.UserInternalBalances="userInternalBalances"}(mo||(mo={})),function(e){e.Allow="allow",e.Deny="deny"}(bo||(bo={}));const fo=A.default`
    fragment SubgraphPoolShare on PoolShare {
  id
  balance
  userAddress {
    id
  }
  poolId {
    id
    address
  }
}
    `,To=A.default`
    fragment SubgraphSubPool on Pool {
  id
  totalShares
  address
  poolType
  mainIndex
}
    `,ho=A.default`
    fragment SubgraphSubPoolToken on PoolToken {
  address
  balance
  weight
  priceRate
  symbol
  decimals
  isExemptFromYieldProtocolFee
}
    `,Io=A.default`
    fragment TokenTree on Token {
  latestUSDPrice
  latestFXPrice
  pool {
    ...SubgraphSubPool
    tokens(first: 100, orderBy: index) {
      ...SubgraphSubPoolToken
      token {
        latestUSDPrice
        pool {
          ...SubgraphSubPool
          tokens(first: 100, orderBy: index) {
            ...SubgraphSubPoolToken
            token {
              latestUSDPrice
              pool {
                ...SubgraphSubPool
              }
            }
          }
        }
      }
    }
  }
}
    ${To}
${ho}`,_o=A.default`
    fragment SubgraphPoolToken on PoolToken {
  id
  symbol
  name
  decimals
  address
  balance
  managedBalance
  weight
  priceRate
  isExemptFromYieldProtocolFee
  token {
    ...TokenTree
  }
}
    ${Io}`,go=A.default`
    fragment SubgraphPriceRateProvider on PriceRateProvider {
  address
  token {
    address
  }
}
    `,Po=A.default`
    fragment SubgraphPool on Pool {
  id
  address
  poolType
  poolTypeVersion
  factory
  strategyType
  symbol
  name
  swapEnabled
  swapFee
  protocolYieldFeeCache
  protocolSwapFeeCache
  owner
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 100, orderBy: index) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  amp
  priceRateProviders(first: 100) {
    ...SubgraphPriceRateProvider
  }
  expiryTime
  unitSeconds
  createTime
  principalToken
  baseToken
  wrappedIndex
  mainIndex
  lowerTarget
  upperTarget
  sqrtAlpha
  sqrtBeta
  root3Alpha
  isInRecoveryMode
  isPaused
  alpha
  beta
  c
  s
  lambda
  tauAlphaX
  tauAlphaY
  tauBetaX
  tauBetaY
  u
  v
  w
  z
  dSq
  delta
  epsilon
}
    ${_o}
${go}`;A.default`
    fragment TokenAttrs on Token {
  address
  symbol
  decimals
}
    `;const wo=A.default`
    fragment SubgraphPoolSnapshot on PoolSnapshot {
  id
  pool {
    id
  }
  totalShares
  swapVolume
  swapFees
  timestamp
}
    `,xo=A.default`
    fragment SubgraphJoinExit on JoinExit {
  amounts
  id
  sender
  timestamp
  tx
  type
  user {
    id
  }
  pool {
    id
    tokensList
  }
}
    `,Eo=A.default`
    fragment SubgraphBalancer on Balancer {
  id
  totalLiquidity
  totalSwapVolume
  totalSwapFee
  totalSwapCount
  poolCount
}
    `,Ao=A.default`
    fragment SubgraphTokenPrice on TokenPrice {
  id
  poolId {
    id
  }
  asset
  amount
  pricingAsset
  price
  block
  timestamp
}
    `,So=A.default`
    fragment SubgraphTokenLatestPrice on LatestPrice {
  id
  asset
  price
  poolId {
    id
  }
  pricingAsset
}
    `,vo=A.default`
    fragment SubgraphUser on User {
  id
  sharesOwned(first: 1000) {
    balance
    poolId {
      id
    }
  }
}
    `,ko=A.default`
    query PoolShare($id: ID!, $block: Block_height) {
  poolShare(id: $id, block: $block) {
    ...SubgraphPoolShare
  }
}
    ${fo}`,Bo=A.default`
    query PoolShares($first: Int, $orderBy: PoolShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: PoolShare_filter, $block: Block_height) {
  poolShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphPoolShare
  }
}
    ${fo}`,Oo=A.default`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${Po}`,Co=A.default`
    query AllPools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pool0: pools(
    first: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool1000: pools(
    first: 1000
    skip: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool2000: pools(
    first: 1000
    skip: 2000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${Po}`,Mo=A.default`
    query Pool($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPool
  }
}
    ${Po}`,Fo=A.default`
    query PoolHistoricalLiquidities($skip: Int, $first: Int, $orderBy: PoolHistoricalLiquidity_orderBy, $orderDirection: OrderDirection, $where: PoolHistoricalLiquidity_filter, $block: Block_height) {
  poolHistoricalLiquidities(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    id
    poolId {
      id
    }
    poolTotalShares
    poolLiquidity
    poolShareValue
    pricingAsset
    block
  }
}
    `,Ro=A.default`
    query PoolSnapshots($skip: Int, $first: Int, $orderBy: PoolSnapshot_orderBy, $orderDirection: OrderDirection, $where: PoolSnapshot_filter, $block: Block_height) {
  poolSnapshots(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolSnapshot
  }
}
    ${wo}`,No=A.default`
    query JoinExits($skip: Int, $first: Int, $orderBy: JoinExit_orderBy, $orderDirection: OrderDirection, $where: JoinExit_filter, $block: Block_height) {
  joinExits(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphJoinExit
  }
}
    ${xo}`,Do=A.default`
    query Balancers($skip: Int, $first: Int, $orderBy: Balancer_orderBy, $orderDirection: OrderDirection, $where: Balancer_filter, $block: Block_height) {
  balancers(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphBalancer
  }
}
    ${Eo}`,Lo=A.default`
    query TokenPrices($skip: Int, $first: Int, $orderBy: TokenPrice_orderBy, $orderDirection: OrderDirection, $where: TokenPrice_filter, $block: Block_height) {
  tokenPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenPrice
  }
}
    ${Ao}`,Uo=A.default`
    query TokenLatestPrices($skip: Int, $first: Int, $orderBy: LatestPrice_orderBy, $orderDirection: OrderDirection, $where: LatestPrice_filter, $block: Block_height) {
  latestPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenLatestPrice
  }
}
    ${So}`,qo=A.default`
    query TokenLatestPrice($id: ID!) {
  latestPrice(id: $id) {
    ...SubgraphTokenLatestPrice
  }
}
    ${So}`,Vo=A.default`
    query User($id: ID!, $block: Block_height) {
  user(id: $id, block: $block) {
    ...SubgraphUser
  }
}
    ${vo}`,Go=A.default`
    query Users($skip: Int, $first: Int, $orderBy: User_orderBy, $orderDirection: OrderDirection, $where: User_filter, $block: Block_height) {
  users(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphUser
  }
}
    ${vo}`,Wo=(e,t,n)=>e();function $o(e,t=Wo){return{PoolShare:(n,a)=>t((t=>e.request(ko,n,{...a,...t})),"PoolShare","query"),PoolShares:(n,a)=>t((t=>e.request(Bo,n,{...a,...t})),"PoolShares","query"),Pools:(n,a)=>t((t=>e.request(Oo,n,{...a,...t})),"Pools","query"),AllPools:(n,a)=>t((t=>e.request(Co,n,{...a,...t})),"AllPools","query"),Pool:(n,a)=>t((t=>e.request(Mo,n,{...a,...t})),"Pool","query"),PoolHistoricalLiquidities:(n,a)=>t((t=>e.request(Fo,n,{...a,...t})),"PoolHistoricalLiquidities","query"),PoolSnapshots:(n,a)=>t((t=>e.request(Ro,n,{...a,...t})),"PoolSnapshots","query"),JoinExits:(n,a)=>t((t=>e.request(No,n,{...a,...t})),"JoinExits","query"),Balancers:(n,a)=>t((t=>e.request(Do,n,{...a,...t})),"Balancers","query"),TokenPrices:(n,a)=>t((t=>e.request(Lo,n,{...a,...t})),"TokenPrices","query"),TokenLatestPrices:(n,a)=>t((t=>e.request(Uo,n,{...a,...t})),"TokenLatestPrices","query"),TokenLatestPrice:(n,a)=>t((t=>e.request(qo,n,{...a,...t})),"TokenLatestPrice","query"),User:(n,a)=>t((t=>e.request(Vo,n,{...a,...t})),"User","query"),Users:(n,a)=>t((t=>e.request(Go,n,{...a,...t})),"Users","query")}}var Ko,Ho,Jo,jo,Xo,Yo,zo,Zo,Qo,ei,ti,ni,ai,oi,ii,si,ri,pi,li,di;!function(e){e.day="day",e.hour="hour"}(Ko||(Ko={})),function(e){e.Arbitrum="Arbitrum",e.Avalanche="Avalanche",e.Base="Base",e.Fraxtal="Fraxtal",e.Gnosis="Gnosis",e.Optimism="Optimism",e.Polygon="Polygon",e.PolygonZkEvm="PolygonZkEvm"}(Ho||(Ho={})),function(e){e.gauges="gauges",e.id="id",e.numGauges="numGauges"}(Jo||(Jo={})),function(e){e.id="id"}(jo||(jo={})),function(e){e.balance="balance",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.user="user",e.user__id="user__id"}(Xo||(Xo={})),function(e){e.id="id",e.name="name"}(Yo||(Yo={})),function(e){e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.timestamp="timestamp",e.user="user",e.user__id="user__id",e.weight="weight"}(zo||(zo={})),function(e){e.addedTimestamp="addedTimestamp",e.address="address",e.id="id",e.liquidityGauge="liquidityGauge",e.liquidityGauge__id="liquidityGauge__id",e.liquidityGauge__isKilled="liquidityGauge__isKilled",e.liquidityGauge__isPreferentialGauge="liquidityGauge__isPreferentialGauge",e.liquidityGauge__poolAddress="liquidityGauge__poolAddress",e.liquidityGauge__poolId="liquidityGauge__poolId",e.liquidityGauge__relativeWeightCap="liquidityGauge__relativeWeightCap",e.liquidityGauge__streamer="liquidityGauge__streamer",e.liquidityGauge__symbol="liquidityGauge__symbol",e.liquidityGauge__totalSupply="liquidityGauge__totalSupply",e.rootGauge="rootGauge",e.rootGauge__chain="rootGauge__chain",e.rootGauge__id="rootGauge__id",e.rootGauge__isKilled="rootGauge__isKilled",e.rootGauge__recipient="rootGauge__recipient",e.rootGauge__relativeWeightCap="rootGauge__relativeWeightCap",e.type="type",e.type__id="type__id",e.type__name="type__name"}(Zo||(Zo={})),function(e){e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.isPreferentialGauge="isPreferentialGauge",e.pool="pool",e.poolAddress="poolAddress",e.poolId="poolId",e.pool__address="pool__address",e.pool__id="pool__id",e.pool__poolId="pool__poolId",e.relativeWeightCap="relativeWeightCap",e.rewardTokensList="rewardTokensList",e.shares="shares",e.streamer="streamer",e.symbol="symbol",e.tokens="tokens",e.totalSupply="totalSupply"}(Qo||(Qo={})),function(e){e.bias="bias",e.id="id",e.slope="slope",e.timestamp="timestamp",e.user="user",e.user__id="user__id"}(ei||(ei={})),function(e){e.bias="bias",e.dstChainId="dstChainId",e.id="id",e.localUser="localUser",e.localUser__id="localUser__id",e.remoteUser="remoteUser",e.slope="slope",e.timestamp="timestamp",e.votingEscrowID="votingEscrowID",e.votingEscrowID__id="votingEscrowID__id",e.votingEscrowID__stakedSupply="votingEscrowID__stakedSupply"}(ti||(ti={})),function(e){e.asc="asc",e.desc="desc"}(ni||(ni={})),function(e){e.address="address",e.gauges="gauges",e.gaugesList="gaugesList",e.id="id",e.poolId="poolId",e.preferentialGauge="preferentialGauge",e.preferentialGauge__id="preferentialGauge__id",e.preferentialGauge__isKilled="preferentialGauge__isKilled",e.preferentialGauge__isPreferentialGauge="preferentialGauge__isPreferentialGauge",e.preferentialGauge__poolAddress="preferentialGauge__poolAddress",e.preferentialGauge__poolId="preferentialGauge__poolId",e.preferentialGauge__relativeWeightCap="preferentialGauge__relativeWeightCap",e.preferentialGauge__streamer="preferentialGauge__streamer",e.preferentialGauge__symbol="preferentialGauge__symbol",e.preferentialGauge__totalSupply="preferentialGauge__totalSupply"}(ai||(ai={})),function(e){e.decimals="decimals",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.periodFinish="periodFinish",e.rate="rate",e.symbol="symbol",e.totalDeposited="totalDeposited"}(oi||(oi={})),function(e){e.chain="chain",e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.recipient="recipient",e.relativeWeightCap="relativeWeightCap"}(ii||(ii={})),function(e){e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.recipient="recipient",e.relativeWeightCap="relativeWeightCap"}(si||(si={})),function(e){e.gaugeShares="gaugeShares",e.gaugeVotes="gaugeVotes",e.id="id",e.omniVotingLocks="omniVotingLocks",e.votingLocks="votingLocks"}(ri||(ri={})),function(e){e.bias="bias",e.id="id",e.lockedBalance="lockedBalance",e.slope="slope",e.timestamp="timestamp",e.unlockTime="unlockTime",e.updatedAt="updatedAt",e.user="user",e.user__id="user__id",e.votingEscrowID="votingEscrowID",e.votingEscrowID__id="votingEscrowID__id",e.votingEscrowID__stakedSupply="votingEscrowID__stakedSupply"}(pi||(pi={})),function(e){e.id="id",e.locks="locks",e.omniLocks="omniLocks",e.stakedSupply="stakedSupply"}(li||(li={})),function(e){e.allow="allow",e.deny="deny"}(di||(di={}));const ui=A.default`
    fragment SubgraphGaugeShare on GaugeShare {
  id
  balance
  user {
    id
  }
  gauge {
    id
    isKilled
    poolId
    poolAddress
    totalSupply
  }
}
    `,ci=A.default`
    fragment SubgraphLiquidityGauge on LiquidityGauge {
  id
  symbol
  poolAddress
  poolId
  streamer
  factory {
    id
    numGauges
  }
  totalSupply
  tokens {
    id
    symbol
    decimals
    totalDeposited
    rate
    periodFinish
  }
}
    `,yi=A.default`
    fragment SubgraphPoolWithPreferentialGauge on Pool {
  id
  poolId
  preferentialGauge {
    ...SubgraphLiquidityGauge
  }
}
    ${ci}`,mi=A.default`
    query GaugeShare($id: ID!, $block: Block_height) {
  gaugeShare(id: $id, block: $block) {
    ...SubgraphGaugeShare
  }
}
    ${ui}`,bi=A.default`
    query GaugeShares($first: Int, $orderBy: GaugeShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: GaugeShare_filter, $block: Block_height) {
  gaugeShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphGaugeShare
  }
}
    ${ui}`,fi=A.default`
    query LiquidityGauges($skip: Int, $first: Int, $orderBy: LiquidityGauge_orderBy, $orderDirection: OrderDirection, $where: LiquidityGauge_filter, $block: Block_height) {
  liquidityGauges(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphLiquidityGauge
  }
}
    ${ci}`,Ti=A.default`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithPreferentialGauge
  }
}
    ${yi}`,hi=A.default`
    query PoolGauges($where: Pool_filter, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $skip: Int, $block: Block_height) {
  pools(
    where: $where
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    block: $block
  ) {
    gauges {
      id
      relativeWeightCap
    }
    preferentialGauge {
      id
    }
  }
}
    `,Ii=(e,t,n)=>e();function _i(e){return $o(new u.GraphQLClient(e))}function gi(e){return function(e,t=Ii){return{GaugeShare:(n,a)=>t((t=>e.request(mi,n,{...a,...t})),"GaugeShare","query"),GaugeShares:(n,a)=>t((t=>e.request(bi,n,{...a,...t})),"GaugeShares","query"),LiquidityGauges:(n,a)=>t((t=>e.request(fi,n,{...a,...t})),"LiquidityGauges","query"),Pools:(n,a)=>t((t=>e.request(Ti,n,{...a,...t})),"Pools","query"),PoolGauges:(n,a)=>t((t=>e.request(hi,n,{...a,...t})),"PoolGauges","query")}}(new u.GraphQLClient(e))}class Pi{constructor(e,n,a={}){this.options=a,this.calls=[],this.paths=[],this.address="0xcA11bde05977b3631167028862bE2a173976CA11",this.interface=new t.Interface(e),this.multicall=rn.connect(this.address,n)}call(e,t,n,a){return this.calls.push([t,n,a]),this.paths.push(e),this}async execute(e={},t=1024){const n=e;return(await this.executeMulticall(t)).forEach(((e,t)=>r.set(n,this.paths[t],e.length>1?e:e[0]))),this.calls=[],this.paths=[],n}async executeMulticall(e){const t=Math.ceil(this.calls.length/e),n=[],a=[];for(let n=0;n<t;n++){const t=this.calls.slice(n*e,(n+1)*e).map((([e,t,n])=>({target:e,allowFailure:!0,callData:this.interface.encodeFunctionData(t,n)})));a.push(this.multicall.callStatic.aggregate3(t,this.options))}return(await Promise.all(a)).forEach(((t,a)=>{const o=a*e;for(let e=0;e<t.length;e++){const a=o+e,{success:i,returnData:s}=t[e];if(i)try{const e=this.interface.decodeFunctionResult(this.calls[a][1],s);n[a]=e}catch(e){console.error("Multicall error",this.paths[a]),n[a]=[]}else console.error("Failed request in multicall",this.paths[a]),n[a]=[]}})),n}}const wi=["function getSwapFeePercentage() view returns (uint256)","function percentFee() view returns (uint256)","function protocolPercentFee() view returns (uint256)","function getNormalizedWeights() view returns (uint256[])","function totalSupply() view returns (uint256)","function getVirtualSupply() view returns (uint256)","function getActualSupply() view returns (uint256)","function getTargets() view returns (uint256 lowerTarget, uint256 upperTarget)","function getTokenRates() view returns (uint256, uint256)","function getWrappedTokenRate() view returns (uint256)","function getAmplificationParameter() view returns (uint256 value, bool isUpdating, uint256 precision)","function getPausedState() view returns (bool)","function inRecoveryMode() view returns (bool)","function getRate() view returns (uint256)","function getScalingFactors() view returns (uint256[] memory)","function getPoolTokens(bytes32) view returns (address[], uint256[])"],xi=(e,t,n)=>{n.call(`${e}.weights`,t,"getNormalizedWeights")},Ei=(e,t,n)=>{n.call(`${e}.targets`,t,"getTargets"),n.call(`${e}.wrappedTokenRate`,t,"getWrappedTokenRate")},Ai=(e,t,n)=>{n.call(`${e}.amp`,t,"getAmplificationParameter")},Si=(e,t,n)=>{n.call(`${e}.tokenRates`,t,"getTokenRates")},vi=async(e,t,n,a=1024)=>{if(0===e.length)return{};const o=new Pi(wi,n);e.forEach((({id:e,address:n,poolType:a,poolTypeVersion:i})=>{((e,t,n,a,o)=>{o.call(`${e}.poolTokens`,n,"getPoolTokens",[e]),o.call(`${e}.totalShares`,t,(e=>e.includes("Linear")||["StablePhantom"].includes(e)?"getVirtualSupply":"ComposableStable"===e?"getActualSupply":"totalSupply")(a)),o.call(`${e}.swapFee`,t,(e=>"Element"===e?"percentFee":"FX"===e?"protocolPercentFee":"getSwapFeePercentage")(a))})(e,n,t,a,o),((e,t=1)=>{const n=()=>({});switch(e){case"Weighted":case"LiquidityBootstrapping":case"Investment":return xi;case"Stable":case"StablePhantom":case"MetaStable":case"ComposableStable":return Ai;case"GyroE":case"Gyro2":return 2===t?Si:n;case"AaveLinear":return 1===t?Ei:n;default:return n}})(a,i)(e,n,o)}));return await o.execute({},a)};async function ki(e,t,n,o,i=1024){if(0===e.length)return e;const s=[],r=await vi(e,n,o,i);return e.forEach((e=>{const t=r[e.id];s.push(((e,t)=>({...e,tokens:t.poolTokens?e.tokens.map((n=>{const o=t.poolTokens[0].map((e=>e.toLowerCase())).indexOf(n.address),i=e.wrappedIndex&&e.tokensList[e.wrappedIndex],s=void 0===n.decimals?18:n.decimals;return{...n,balance:a.formatFixed(t.poolTokens[1][o],s),weight:t.weights&&a.formatFixed(t.weights[o],18)||n.weight,priceRate:t.wrappedTokenRate&&i&&i.toLowerCase()===n.address.toLowerCase()&&a.formatFixed(t.wrappedTokenRate,18)||n.priceRate}})):e.tokens,totalShares:t.totalShares?a.formatFixed(t.totalShares,18):e.totalShares,swapFee:t.swapFee?a.formatFixed(t.swapFee,18):e.swapFee,amp:t.amp&&t.amp[0]&&a.formatFixed(t.amp[0],String(t.amp[2]).length-1)||e.amp,lowerTarget:t.targets&&a.formatFixed(t.targets[0],18)||e.lowerTarget,upperTarget:t.targets&&a.formatFixed(t.targets[1],18)||e.upperTarget,tokenRates:t.tokenRates&&t.tokenRates.map((e=>a.formatFixed(e,18)))||e.tokenRates}))(e,t))})),s}class Bi{constructor(e,t,n,a,o){this.client=e,this.provider=t,this.network=n,this.sorConfig=a,this.defaultArgs=(null==o?void 0:o.args)||{orderBy:no.TotalLiquidity,orderDirection:Ya.Desc,where:{swapEnabled:{eq:!0},totalShares:{gt:1e-12}}}}async getPools(e){const t=function(e){return e.map((e=>({...e,poolType:e.poolType||"",tokens:(e.tokens||[]).map((e=>({...e,weight:e.weight||null}))),totalWeight:e.totalWeight||void 0,amp:e.amp||void 0,expiryTime:e.expiryTime?r.parseInt(e.expiryTime):void 0,unitSeconds:e.unitSeconds?r.parseInt(e.unitSeconds):void 0,principalToken:e.principalToken||void 0,baseToken:e.baseToken||void 0})))}((await this.getSubgraphPools(e)).filter((e=>{if(!this.network.poolsToIgnore)return!0;return-1===this.network.poolsToIgnore.findIndex((t=>t.toLowerCase()===e.id.toLowerCase()))})));if(this.sorConfig&&!1===this.sorConfig.fetchOnChainBalances)return t;const n=z.getInstance();n.time(`fetching on-chain balances for ${t.length} pools`);const a=await ki(t,this.network.addresses.contracts.multicall,this.network.addresses.contracts.vault,this.provider,this.network.multicallBatchSize);return n.timeEnd(`fetching on-chain balances for ${t.length} pools`),a}async getSubgraphPools(e){const t=new st(e||this.defaultArgs).format(new it);if(t.first){const{pools:e}=await this.client.Pools(t);return e}const{pool0:n,pool1000:a,pool2000:o}=await this.client.AllPools(t);return[...n,...a,...o]}}class Oi{constructor(e,t){this.client=e,this.weth=t.toLowerCase()}async getNativeAssetPriceInToken(e){const t=await this.getLatestPriceInEthFromSubgraph(e);if(!t)throw Error("No price found in the subgraph");return""+1/t}async getLatestPriceInEthFromSubgraph(e){e=e.toLowerCase();const{latestPrices:t}=await this.client.TokenLatestPrices({where:{asset_in:[e,this.weth]}}),n=r.keyBy(t,"id");if(n[`${e}-${this.weth}`])return parseFloat(n[`${e}-${this.weth}`].price);const a=t.filter((t=>t.asset===e));for(const e of a){const t=n[`${e.pricingAsset}-${this.weth}`];if(t)return parseFloat(e.price)*parseFloat(t.price)}return null}}function Ci(e){var t,n;if("number"==typeof e.network){const n=Cn[e.network];return{...n,urls:{...n.urls,subgraph:null!==(t=e.customSubgraphUrl)&&void 0!==t?t:n.urls.subgraph},tenderly:e.tenderly}}return{...e.network,urls:{...e.network.urls,subgraph:null!==(n=e.customSubgraphUrl)&&void 0!==n?n:e.network.urls.subgraph},tenderly:e.network.tenderly}}const Mi=["0x00c2a4be503869fa751c2dbcb7156cc970b5a8da000000000000000000000477","0x02d928e68d8f10c0358566152677db51e1e2dc8c00000000000000000000051e","0x04248aabca09e9a1a3d5129a7ba05b7f17de768400000000000000000000050e","0x05513ca725b6ce035ca2641075474eb469f05f4c00020000000000000000041f","0x0a0fb4ff697de5ac5b6770cd8ee1b72af80b57cf000000000000000000000496","0x0afbd58beca09545e4fb67772faf3858e610bcd00000000000000000000004b9","0x0d05aac44ac7dd3c7ba5d50be93eb884a057d23400000000000000000000051c","0x11839d635e2f0270da37e8ef4324d4d5d54329570002000000000000000004d8","0x126e7643235ec0ab9c103c507642dc3f4ca23c66000000000000000000000468","0x133d241f225750d2c92948e464a5a80111920331000000000000000000000476","0x159cb00338fb63f263fd6f621df619cef71da9540000000000000000000004d5","0x173063a30e095313eee39411f07e95a8a806014e0002000000000000000003ab","0x1bd2f176a812e312077bca87e37c08432bb09f3e0000000000000000000005a1","0x20b156776114e8a801e9767d90c6ccccc8adf398000000000000000000000499","0x246ffb4d928e394a02e45761fecdba6c2e79b8eb000000000000000000000541","0x25accb7943fd73dda5e23ba6329085a3c24bfb6a000200000000000000000387","0x26c2b83fc8535deead276f5cc3ad9c1a2192e02700020000000000000000056b","0x2b218683178d029bab6c9789b1073aa6c96e517600000000000000000000058c","0x2ba7aa2213fa2c909cd9e46fed5a0059542b36b00000000000000000000003a3","0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c0000000000000000000000fd","0x2e52c64fd319e380cdbcfc4577ea1fda558a32e40002000000000000000005ba","0x2f4eb100552ef93840d5adc30560e5513dfffacb000000000000000000000334","0x2ff1a9dbdacd55297452cfd8a4d94724bc22a5f7000000000000000000000484","0x3035917be42af437cbdd774be26b9ec90a2bd677000200000000000000000543","0x331d50e0b00fc1c32742f151e56b9b616227e23e00000000000000000000047c","0x334c96d792e4b26b841d28f53235281cec1be1f200020000000000000000038a","0x335d1709d4da9aca59d16328db5cd4ea66bfe06b0000000000000000000004d6","0x395d8a1d9ad82b5abe558f8abbfe183b27138af40000000000000000000004e5","0x3bb22fc9033b802f2ac47c18885f63476f158afc000000000000000000000483","0x3c640f0d3036ad85afa2d5a9e32be651657b874f00000000000000000000046b","0x3cdae4f12a67ba563499e102f309c73213cb241c000000000000000000000335","0x3dbb8d974b82e82ce79c20c0f5995f4f1f533ede000000000000000000000470","0x3f7a7fd7f214be45ec26820fd01ac3be4fc75aa70002000000000000000004c5","0x3fcb7085b8f2f473f80bf6d879cae99ea4de934400000000000000000000056d","0x41503c9d499ddbd1dcdf818a1b05e9774203bf46000000000000000000000594","0x4228290ee9cab692938ff0b4ba303fbcdb68e9f200020000000000000000057d","0x454ed96955d04d2f5cdd05e0fd1c77975bfe5307000000000000000000000410","0x481c5fc05d63a58aa2f0f2aa417c021b5d419cb200000000000000000000056a","0x483006684f422a9448023b2382615c57c5ecf18f000000000000000000000488","0x4a82b580365cff9b146281ab72500957a849abdc000000000000000000000494","0x4c81255cc9ed7062180ea99962fe05ac0d57350b0000000000000000000005a3","0x4c8d2e60863e8d7e1033eda2b3d84e92a641802000000000000000000000040f","0x4cbde5c4b4b53ebe4af4adb85404725985406163000000000000000000000595","0x4ce0bd7debf13434d3ae127430e9bd4291bfb61f00020000000000000000038b","0x4ce277df0feb5b4d07a0ca2adcf5326e4005239d000000000000000000000518","0x4fd4687ec38220f805b6363c3c1e52d0df3b5023000200000000000000000473","0x4fd63966879300cafafbb35d157dc5229278ed230000000000000000000000e9","0x50cf90b954958480b8df7958a9e965752f62712400000000000000000000046f","0x53bc3cba3832ebecbfa002c12023f8ab1aa3a3a0000000000000000000000411","0x5a6a8cffb4347ff7fc484bf5f0f8a2e234d34255000200000000000000000275","0x5b3240b6be3e7487d61cd1afdfc7fe4fa1d81e6400000000000000000000037b","0x60683b05e9a39e3509d8fdb9c959f23170f8a0fa000000000000000000000489","0x60d604890feaa0b5460b28a424407c24fe89374a0000000000000000000004fc","0x639883476960a23b38579acfd7d71561a0f408cf000200000000000000000505","0x652d486b80c461c397b0d95612a404da936f3db30000000000000000000000e7","0x6667c6fa9f2b3fc1cc8d85320b62703d938e43850000000000000000000004fb","0x6a1eb2e9b45e772f55bd9a34659a04b6f75da68700000000000000000000040d","0x6c56e72c551b5ac4bf54a620a76077ca768c8fe40002000000000000000004da","0x70b7d3b3209a59fb0400e17f67f3ee8c37363f4900020000000000000000018f","0x7337224d59cb16c2dc6938cd45a7b2c60c865d6a0000000000000000000004d4","0x74cbfaf94a3577c539a9dcee9870a6349a33b34f000000000000000000000534","0x779d01f939d78a918a3de18cc236ee89221dfd4e0000000000000000000004c7","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x804cdb9116a10bb78768d3252355a1b18067bf8f0000000000000000000000fb","0x813e3fe1761f714c502d1d2d3a7cceb33f37f59d00000000000000000000040c","0x82698aecc9e28e9bb27608bd52cf57f704bd1b83000000000000000000000336","0x8a6b25e33b12d1bb6929a8793961076bd1f9d3eb0002000000000000000003e8","0x8e6ec57a822c2f527f2df7c7d7d361df3e7530a1000000000000000000000498","0x8f4063446f5011bc1c9f79a819efe87776f23704000000000000000000000197","0x9001cbbd96f54a658ff4e6e65ab564ded76a543100000000000000000000050a","0x9210f1204b5a24742eba12f710636d76240df3d00000000000000000000000fc","0x9516a2d25958edb8da246a320f2c7d94a0dbe25d000000000000000000000519","0x959216bb492b2efa72b15b7aacea5b5c984c3cca000200000000000000000472","0x968024662b9566b42d78af23a0f441bc8723fa83000200000000000000000418","0x99c88ad7dc566616548adde8ed3effa730eb6c3400000000000000000000049a","0x9b1c8407a360443a9e5eca004713e4088fab8ac0000000000000000000000497","0x9b692f571b256140a39a34676bffa30634c586e100000000000000000000059d","0x9d7f992c900fbea0ec314bdd71b7cc1becf76a33000200000000000000000573","0x9fb771d530b0ceba5160f7bfe2dd1e8b8aa1340300000000000000000000040e","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d","0xa1697f9af0875b63ddc472d6eebada8c1fab85680000000000000000000004f9","0xa3823e50f20982656557a4a6a9c06ba5467ae9080000000000000000000000e6","0xa718042e5622099e5f0ace4e7122058ab39e1bbe000200000000000000000475","0xa8b103a10a94f4f2d7ed2fdcd5545e807557330700000000000000000000048e","0xac5b4ef7ede2f2843a704e96dcaa637f4ba3dc3f00000000000000000000051d","0xac976bb42cb0c85635644e8c7c74d0e0286aa61c0000000000000000000003cb","0xae37d54ae477268b9997d4161b96b8200755935c000000000000000000000337","0xae8535c23afedda9304b03c68a3563b75fc8f92b0000000000000000000005a0","0xb0f75e97a114a4eb4a425edc48990e6760726709000000000000000000000198","0xb5e3de837f869b0248825e0175da73d4e8c3db6b000200000000000000000474","0xb841b062ea8ccf5c4cb78032e91de4ae875560420002000000000000000005b7","0xb9bd68a77ccf8314c0dfe51bc291c77590c4e9e6000200000000000000000385","0xbb6881874825e60e1160416d6c426eae65f2459e000000000000000000000592","0xbc0f2372008005471874e426e86ccfae7b4de79d000000000000000000000485","0xbf2ef8bdc2fc0f3203b3a01778e3ec5009aeef3300000000000000000000058d","0xbfa413a2ff0f20456d57b643746133f54bfe0cd20000000000000000000004c3","0xc2b021133d1b0cf07dba696fd5dd89338428225b000000000000000000000598","0xc443c15033fcb6cf72cc24f1bda0db070ddd9786000000000000000000000593","0xc50d4347209f285247bda8a09fc1c12ce42031c3000000000000000000000590","0xc5dc1316ab670a2eed5716d7f19ced321191f38200000000000000000000056e","0xc8c79fcd0e859e7ec81118e91ce8e4379a481ee6000000000000000000000196","0xcaa052584b462198a5a9356c28bce0634d65f65c0000000000000000000004db","0xcbfa4532d8b2ade2c261d3dd5ef2a2284f7926920000000000000000000004fa","0xcfae6e251369467f465f13836ac8135bd42f8a56000000000000000000000591","0xd4e7c1f3da1144c9e2cfd1b015eda7652b4a439900000000000000000000046a","0xd6e355036f41dc261b3f1ed3bbc6003e87aadb4f000000000000000000000495","0xd7edb56f63b2a0191742aea32df1f98ca81ed9c600000000000000000000058e","0xd997f35c9b1281b82c8928039d14cddab5e13c2000000000000000000000019c","0xdba274b4d04097b90a72b62467d828cefd708037000000000000000000000486","0xdc063deafce952160ec112fa382ac206305657e60000000000000000000004c4","0xdec02e6642e2c999af429f5ce944653cad15e093000000000000000000000469","0xe03af00fabe8401560c1ff7d242d622a5b601573000000000000000000000493","0xe0fcbf4d98f0ad982db260f86cf28b49845403c5000000000000000000000504","0xe2d16b0a39f3fbb4389a0e8f1efcbecfb3d1e6e10000000000000000000005a7","0xe4dc3c1998ac693d68f4c77476d7c815694c3e94000200000000000000000416","0xe6bcc79f328eec93d4ec8f7ed35534d9ab549faa0000000000000000000000e8","0xe8c56405bc405840154d9b572927f4197d110de10000000000000000000005a4","0xeb486af868aeb3b6e53066abc9623b1041b42bc000000000000000000000046c","0xeb567dde03f3da7fe185bdacd5ab495ab220769d000000000000000000000548","0xec3626fee40ef95e7c0cbb1d495c8b67b34d398300000000000000000000053d","0xf22ff21e17157340575158ad7394e068048dd98b0000000000000000000004b8","0xf57c794f42da72b38c8f610ff3b5e8502e48cbde00000000000000000000055c","0xf71d0774b214c4cf51e33eb3d30ef98132e4dbaa00000000000000000000046e","0xfa24a90a3f2bbe5feea92b95cd0d14ce709649f900000000000000000000058f","0xfd11ccdbdb7ab91cb9427a6d6bf570c95876d1950000000000000000000004c2","0xfebb0bbf162e64fb9d0dfe186e517d84c395f016000000000000000000000502","0xfef969638c52899f91781f1be594af6f40b99bad00000000000000000000047b","0x02e139d53ebf4033bf78ab66c6a1e7f1f204487f0002000000000000000009f9","0x03090a9811181a2afe830a3a0b467698ccf3a8b1000000000000000000000bf5","0x0320c1c5b6df19a194d48882aaec1c72940081d9000000000000000000000a7d","0x04b54ea92d73de2d62d651db7d9778f0c49157d8000200000000000000000ba2","0x0503dd6b2d3dd463c9bef67fb5156870af63393e00000000000000000000042e","0x0889b240a5876aae745ac19f1771853671dc5d36000000000000000000000b3f","0x0bc54e914f53f98d16035f4f0d948f3e09c2fac0000200000000000000000bac","0x0c06e87c7b88d998f645b91c1f53b51294b12bca000100000000000000000bb9","0x10b040038f87219d9b42e025e3bd9b8095c87dd9000000000000000000000b11","0x117a3d474976274b37b7b94af5dcade5c90c6e85000000000000000000000aca","0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000a5f","0x1379b816b9be611431d693290289c204720ca56d000100000000000000000b6f","0x150e7b885bdfce974f2abe88a72fdbd692175c6f0002000000000000000009fd","0x178e029173417b1f9c8bc16dcec6f697bc323746000000000000000000000758","0x1aafc31091d93c3ff003cff5d2d8f7ba2e7284250000000000000000000003b3","0x216690738aac4aa0c4770253ca26a28f0115c595000000000000000000000b2c","0x216d6db0c28204014618482c369d7fbf0a8f3232000100000000000000000b60","0x230ecdb2a7cee56d6889965a023aa0473d6da507000000000000000000000bf3","0x252ff6a3a6fd7b5e8e999de8e3f5c3b306ed1401000200000000000000000bec","0x25e57f4612912614e6c99616bd2abb9b5ae71e99000000000000000000000bf0","0x2645b13fd2c5295296e94a76280b968bdcbbdfed000000000000000000000c11","0x284eb68520c8fa83361c1a3a5910aec7f873c18b000000000000000000000ac9","0x2c8dbe8eb86135d9f2f26d196748c088d47f73e7000200000000000000000a29","0x31bccf9e28b94e5dacebaa67fe8bc1603cecd904000000000000000000000a01","0x341068a547c3cde3c09e338714010dd01b32f93f000200000000000000000a34","0x3db543faf7a92052de7860c5c9debabee59ed5bd000000000000000000000a62","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd00000000000000000000070d","0x3efb91c4f9b103ee45885695c67794591916f34e000200000000000000000b43","0x402cfdb7781fa85d52f425352661128250b79e12000000000000000000000be3","0x43894de14462b421372bcfe445fa51b1b4a0ff3d000000000000000000000b36","0x4739e50b59b552d490d3fdc60d200977a38510c0000000000000000000000b10","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0x4a0b73f0d13ff6d43e304a174697e3d5cfd310a400020000000000000000091c","0x4a77ef015ddcd972fd9ba2c7d5d658689d090f1a000000000000000000000b38","0x4ae3661afa119892f0cc8c43edaf6a94989ac171000000000000000000000c06","0x4ccb966d8246240afb7a1a24628efb930870b1c40002000000000000000009fc","0x52cc8389c6b93d740325729cc7c958066cee4262000000000000000000000b0f","0x5b77107fcdf2b41903bab2bc555d4fc14cf7667d000000000000000000000b32","0x5bae72b75caab1f260d21bc028c630140607d6e8000000000000000000000ac6","0x600bd01b6526611079e12e1ff93aba7a3e34226f0000000000000000000009e4","0x63ce19ccd39930725b8a3d2733627804718ab83d000000000000000000000bf2","0x64efad69f099813021b41f4cac6e749fd55e188f000000000000000000000b39","0x6933ec1ca55c06a894107860c92acdfd2dd8512f000000000000000000000428","0x6abe4e7a497b8293c258389c1b00d177e4f257ed00010000000000000000080d","0x6c8c7fc50247a47038015eb1fd5dc105d05dafba000200000000000000000ba0","0x7079a25dec33be61bbd81b2fb69b468e80d3e72c0000000000000000000009ff","0x71bd10c2a590b5858f5576550c163976a48af906000000000000000000000b27","0x7c82a23b4c48d796dee36a9ca215b641c6a8709d000000000000000000000acd","0x7f4f4942f2a14b6ab7b08b10ada1aacede4ee8d4000200000000000000000b44","0x86aef31951e0a3a54333bd9e72f9a95587d058c5000200000000000000000912","0x882c7a84231484b3e9f3fd45ac04b1eb5d35b076000200000000000000000a91","0x894c82800526e0391e709c0983a5aea3718b7f6d000000000000000000000ac5","0x89b28a9494589b09dbccb69911c189f74fdadc5a000000000000000000000b33","0x89bb15076c9f2d86aa98ec6cffc1a71e31c38953000000000000000000000bf1","0x89f1146fee52b5d9166e9c83cc388b6d8f69f1380001000000000000000009e7","0x8a819a4cabd6efcb4e5504fe8679a1abd831dd8f00000000000000000000042d","0x8b58a1e7fff52001c22386c2918d45938a6a9be30001000000000000000008d9","0x8b8225bfedebaf1708c55743acb4ad43fd4d0f21000200000000000000000918","0x8fbd0f8e490735cfc3abf4f29cbddd5c3289b9a7000000000000000000000b5b","0x8fd39252d683fdb60bddd4df4b53c9380b496d59000200000000000000000b45","0x9321e2250767d79bab5aa06daa8606a2b3b7b4c5000000000000000000000bf4","0x949a12b95ec5b80c375b98963a5d6b33b0d0efff0002000000000000000009fe","0x9a020bdc2faff5bd24c6acc2020d01ff9f2c627a000000000000000000000ae2","0x9cf9358300e34bf9373d30129a1e718d8d058b54000200000000000000000913","0x9e34631547adcf2f8cefa0f5f223955c7b137571000000000000000000000ad5","0xa5a935833f6a5312715f182733eab088452335d7000100000000000000000bee","0xa5fe91dde37d8bf2dacacc0168b115d28ed03f84000000000000000000000b35","0xa8bf1c584519be0184311c48adbdc4c15cb2e8c1000000000000000000000bf6","0xab269164a10fab22bc87c39946da06c870b172d6000000000000000000000bfc","0xac2cae8d2f78a4a8f92f20dbe74042cd0a8d5af3000000000000000000000be2","0xae646817e458c0be890b81e8d880206710e3c44e000000000000000000000acb","0xaef2c171dbe64b0c18977e16e70bfd29d4ee0256000000000000000000000ac8","0xb0c830dceb4ef55a60192472c20c8bf19df03488000000000000000000000be1","0xb266ac3b7c98d7bcb28731dac0ef42dba1b276be000000000000000000000be4","0xb371aa09f5a110ab69b39a84b5469d29f9b22b76000000000000000000000b37","0xb3d658d5b95bf04e2932370dd1ff976fe18dd66a000000000000000000000ace","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0xb59be8f3c85a9dd6e2899103b6fbf6ea405b99a4000000000000000000000b34","0xb878ecce26838fbba4f78cb5b791a0e09152c067000000000000000000000427","0xb973ca96a3f0d61045f53255e319aedb6ed4924000000000000000000000042f","0xbd4e35784c832d0f9049b54cb3609e5907c5b495000100000000000000000b14","0xc55ec796a4debe625d95436a3531f4950b11bdcf000000000000000000000b3e","0xc7e6389e364f4275eb442ef215ed21877028e2af000000000000000000000ac7","0xc83b55bbd005f1f84906545fcdb145dee53523e0000200000000000000000b30","0xcb21a9e647c95127ed784626485b3104cb28d0e7000000000000000000000425","0xd00f9ca46ce0e4a63067c4657986f0167b0de1e5000000000000000000000b42","0xd2f3b9e67c69762dd1c88f1d3dadd1649a190761000200000000000000000bf7","0xd4accb350f9cf59fe3cf7a5ee6ed9ace6a568ea9000200000000000000000b75","0xda1cd1711743e57dd57102e9e61b75f3587703da000000000000000000000acc","0xdae301690004946424e41051ace1791083be42a1000000000000000000000b40","0xde0a77ab6689b980c30306b10f9131a007e1af81000200000000000000000ba1","0xe051605a83deae38d26a7346b100ef1ac2ef8a0b0000000000000000000003ce","0xe1fb90d0d3b47e551d494d7ebe8f209753526b01000000000000000000000ac4","0xe2272cddb2cc408e79e02a73d1db9acc24a843d5000200000000000000000ba7","0xe2dc0e0f2c358d6e31836dee69a558ab8d1390e70000000000000000000009fa","0xe4885ed2818cc9e840a25f94f9b2a28169d1aea7000000000000000000000b29","0xe6909c2f18a29d97217a6146f045e1780606991f000100000000000000000bfe","0xe78b25c06db117fdf8f98583cdaaa6c92b79e917000000000000000000000b2b","0xea11645ac7d8f2def94c9d8d86bd766296c9b6b6000000000000000000000b3a","0xeb480dbbdd921cd6c359e4cc4c65ddea6395e2a1000200000000000000000946","0xed35f28f837e96f81240ebb82e0e3f518c7e8a2f000100000000000000000bb5","0xf0211cceebe6fcc45052b4e57ee95d233f5669d2000100000000000000000c01","0xf22a66046b5307842f21b311ecb4c462c24c0635000000000000000000000b15","0xf28f17be00f8ca3c9b7f66a4aad5513757fb3341000200000000000000000b5a","0xf42ed61450458ee4620f5ef4f29adb25a6ef0fb6000000000000000000000bf8","0xf48f01dcb2cbb3ee1f6aab0e742c2d3941039d56000000000000000000000445","0xf93579002dbe8046c43fefe86ec78b1112247bb8000000000000000000000759","0xf984eb2b8a7ef780245a797a2fccd82f346409ca000000000000000000000a59","0xfa2c0bd8327c99db5bde4c9e9e5cbf30946351bb000000000000000000000948","0xff4ce5aaab5a627bf82f4a571ab1ce94aa365ea600000000000000000000075a","0x1ac55c31dac78ca943cb8ebfca5945ce09e036e2000000000000000000000024","0x225e0047671939a8d78e08ebd692788abe63f15c000000000000000000000009","0x41211bba6d37f5a74b22e667533f080c7c7f3f1300000000000000000000000b","0x4de21b365d6543661d0e105e579a34b963862497000200000000000000000045","0x581ec1f5e7ced12b186deae32256adb53bdd5b08000000000000000000000001","0x66f33ae36dd80327744207a48122f874634b3ada000100000000000000000013","0xa3ed6f78edc29f69df8a0d16b1d1ccf9871f918c000000000000000000000032","0xa611a551b95b205ccd9490657acf7899daee5db700000000000000000000002e","0xb95829adbacd8af89e291dee78bc09e24de51d6b000000000000000000000043","0xb973ca96a3f0d61045f53255e319aedb6ed49240000200000000000000000011","0xba1a5b19d09a79dada039b1f974015c5a989d5fd000100000000000000000046","0xbb9cd48d33033f5effbedec9dd700c7d7e1dcf5000000000000000000000000e","0xd16f72b02da5f51231fde542a8b9e2777a478c8800000000000000000000000f","0xd4015683b8153666190e0b2bec352580ebc4caca00000000000000000000000d","0xe15cac1df3621e001f76210ab12a7f1a1691481f000000000000000000000044","0xe7f88d7d4ef2eb18fcf9dd7216ba7da1c46f3dd600000000000000000000000a","0xf48f01dcb2cbb3ee1f6aab0e742c2d3941039d56000200000000000000000012","0xfedb19ec000d38d92af4b21436870f115db22725000000000000000000000010","0xffff76a3280e95dc855696111c2562da09db2ac000000000000000000000000c","0x00fcd3d55085e998e291a0005cedecf58ac14c4000020000000000000000047f","0x077794c30afeccdf5ad2abc0588e8cee7197b71a000000000000000000000352","0x117a3d474976274b37b7b94af5dcade5c90c6e85000000000000000000000381","0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000353","0x19b1c92631405a0a9495ccba0becf4f2e8e908bd000000000000000000000410","0x1e550b7764da9638fdd32c8a701364de31f45ee800000000000000000000047c","0x1fa7f727934226aedab636d62a084931b97d366b000000000000000000000411","0x23ca0306b21ea71552b148cf3c4db4fc85ae19290000000000000000000000c9","0x284eb68520c8fa83361c1a3a5910aec7f873c18b000000000000000000000380","0x2a96254ca32020b20ed3506f8f75318da24709f9000200000000000000000456","0x36942963e3b6f37ecc45a4e72349558514233f0000000000000000000000048a","0x3f53a862919ccfa023cb6ace91378a79fb0f6bf500000000000000000000040f","0x40af308e3d07ec769d85eb80afb116525ff4ac99000000000000000000000485","0x418de00ae109e6f874d872658767866d680eaa1900000000000000000000047d","0x45c4d1376943ab28802b995acffc04903eb5223f000000000000000000000470","0x4689122d360c4725d244c5cfea22861333d862e6000100000000000000000468","0x4739e50b59b552d490d3fdc60d200977a38510c0000000000000000000000409","0x49a0e3334496442a9706e481617724e7e37eaa080000000000000000000003ff","0x519cce718fcd11ac09194cff4517f12d263be067000000000000000000000382","0x52cc8389c6b93d740325729cc7c958066cee4262000000000000000000000408","0x567ecfcb22205d279bb8eed3e066989902bf03d5000000000000000000000452","0x585d95df0231fa08aeee35ff0c16b92fd0ecdc3300020000000000000000045f","0x5a7f39435fd9c381e4932fa2047c9a5136a5e3e7000000000000000000000400","0x5bae72b75caab1f260d21bc028c630140607d6e8000000000000000000000350","0x6cb787a419c3e6ee2e9ff365856c29cd10659113000000000000000000000474","0x7c82a23b4c48d796dee36a9ca215b641c6a8709d000000000000000000000406","0x81fc12c60ee5b753cf5fd0adc342dfb5f3817e3200000000000000000000035d","0x894c82800526e0391e709c0983a5aea3718b7f6d00000000000000000000034f","0x970712708a08e8fb152be4d81b2dc586923f5369000200000000000000000479","0x9bf7c3b63c77b4b4f2717776f15a4bec1b532a280000000000000000000000c8","0x9cebf13bb702f253abf1579294694a1edad00eaa000000000000000000000486","0x9e34631547adcf2f8cefa0f5f223955c7b137571000000000000000000000407","0x9fb7d6dcac7b6aa20108bad226c35b85a9e31b63000200000000000000000412","0xa1ea76c42b2938cfa9abea12357881006c52851300000000000000000000048f","0xa50f89e9f439fde2a6fe05883721a00475da3c4500000000000000000000048b","0xa612b6aed2e7ca1a3a4f23fbca9128461bbb7718000000000000000000000274","0xa8af146d79ac0bb981e4e0d8b788ec5711b1d5d000000000000000000000047b","0xad28940024117b442a9efb6d0f25c8b59e1c950b00000000000000000000046f","0xae646817e458c0be890b81e8d880206710e3c44e00000000000000000000039d","0xaef2c171dbe64b0c18977e16e70bfd29d4ee0256000000000000000000000351","0xbbf9d705b75f408cfcaee91da32966124d2c6f7d00000000000000000000047e","0xbd724eb087d4cc0f61a5fed1fffaf937937e14de000000000000000000000473","0xbe0f30217be1e981add883848d0773a86d2d2cd4000000000000000000000471","0xc46be4b8bb6b5a3d3120660efae9c5416318ed40000000000000000000000472","0xc69771058481551261709d8db44977e9afde645000010000000000000000042a","0xc6eee8cb7643ec2f05f46d569e9ec8ef8b41b389000000000000000000000475","0xcba9ff45cfb9ce238afde32b0148eb82cbe635620000000000000000000003fd","0xcf8b555b7754556cf2ac2165e77ee23ed8517d7900020000000000000000045e","0xd0dc20e6342db2de82692b8dc842301ff9121805000200000000000000000454","0xd3d5d45f4edf82ba0dfaf061d230766032a10e07000200000000000000000413","0xd6d20527c7b0669989ee082b9d3a1c63af742290000000000000000000000483","0xda1cd1711743e57dd57102e9e61b75f3587703da0000000000000000000003fc","0xe1fb90d0d3b47e551d494d7ebe8f209753526b0100000000000000000000034e","0xee02583596aee94cccb7e8ccd3921d955f17982a00000000000000000000040a","0xf984eb2b8a7ef780245a797a2fccd82f346409ca00000000000000000000034d","0xff8f84e8c87532af96aef5582ee451572233678b000200000000000000000478","0x054e7b0c73e1ee5aed6864fa511658fc2b54bcaa000000000000000000000015","0x3f1a2c4a3a751f6626bd90ef16e104f0772d4d6b00020000000000000000001b","0x7275c131b1f67e8b53b4691f92b0e35a4c1c6e22000000000000000000000010","0xa154009870e9b6431305f19b09f9cfd7284d4e7a000000000000000000000013","0xa1d14d922a575232066520eda11e27760946c991000000000000000000000012","0xa826a114b0c7db4d1ff4a4be845a78998c64564c000000000000000000000008","0xea67626e1f0b59e0d172a04f5702ef90bcdf440c00000000000000000000000f","0xeb496161099d45b3ea4892408ef745c6182eb56e00000000000000000000000e","0xece571847897fd61e764d455dc15cf1cd9de8d6f000000000000000000000014","0xed3e2f496cbcd8e212192fb8d1499842f04a0d19000000000000000000000009","0x02c9dcb975262719a61f9b40bdf0987ead9add3a000000000000000000000006","0x16c9a4d841e88e52b51936106010f27085a529ec00000000000000000000000c","0x32be2d0ddeaf3333501b24a28668ce373ba8e763000200000000000000000014","0x32f03464fdf909fdf3798f87ff3712b10c59bd86000000000000000000000005","0x4b718e0e2fea1da68b763cd50c446fba03ceb2ea00000000000000000000000b","0x68a69c596b3839023c0e08d09682314f582314e5000200000000000000000011","0x6f34a44fce1506352a171232163e7716dd073ade000200000000000000000015","0x9e2d87f904862671eb49cb358e74284762cc9f42000200000000000000000013","0xac4b72c01072a52b73ca71105504f1372efcce0d000000000000000000000003","0xbfd65c6160cfd638a85c645e6e6d8acac5dac935000000000000000000000004","0xe274c9deb6ed34cfe4130f8d0a8a948dea5bb28600000000000000000000000d"];class Fi{constructor(t){this.chainId=t,this.balancerApiUrl="https://api-v3.balancer.fi/",this.tokenPriceQuery=u.gql`
    query queryTokenPrices($chainKey: GqlChain!) {
      tokenGetCurrentPrices(chains: [$chainKey]) {
        address
        price
      }
    }
  `,this.chainKey=e.Network[t]}async getNativeAssetPriceInToken(e){const{tokenGetCurrentPrices:t}=await u.request(this.balancerApiUrl,this.tokenPriceQuery,{chainKey:this.chainKey}),n=t.find((({address:t})=>t.toLowerCase()===e.toLowerCase()));if(!n)throw new Error("Token Price not found in the API");const a=t.find((({address:e})=>e.toLowerCase()===Ri[this.chainKey]));if(!a)throw new Error("Native Token Price not found in the API");const o=n.price/a.price;return String(o)}}var Ri;function Ni(e=!0){return e?"https://api.coingecko.com/api/v3/":"https://pro-api.coingecko.com/api/v3/"}function Di(e=!0){return e?"x-cg-demo-api-key":"x-cg-pro-api-key"}!function(e){e.MAINNET="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.POLYGON="0x0000000000000000000000000000000000001010",e.ARBITRUM="0x912ce59144191c1204e64559fe8253a0e49e6548",e.AVALANCHE="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.BASE="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.FANTOM="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.GNOSIS="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.OPTIMISM="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",e.ZKEVM="0xa2036f0538221a77a3937f1379699f44945018d0"}(Ri||(Ri={}));class Li{constructor(e,t){this.chainId=e,this.urlBase=`${Ni(null==t?void 0:t.isDemoApiKey)}simple/token_price/${this.platformId}?vs_currencies=${this.nativeAssetId}`,this.coingeckoApiKeyHeaderName=Di(null==t?void 0:t.isDemoApiKey),this.apiKey=t.coingeckoApiKey}async getNativeAssetPriceInToken(e){const t=await this.getTokenPriceInNativeAsset(e);return""+1/parseFloat(t)}async getTokenPriceInNativeAsset(e){var t;const n=`${this.urlBase}&contract_addresses=${e}`,{data:a}=await S.default.get(n,{headers:{Accept:"application/json","Content-Type":"application/json",[this.coingeckoApiKeyHeaderName]:null!==(t=this.apiKey)&&void 0!==t?t:""}});if(void 0===a[e.toLowerCase()]||void 0===a[e.toLowerCase()][this.nativeAssetId])throw Error("No price returned from Coingecko");return a[e.toLowerCase()][this.nativeAssetId]}get platformId(){return Cn[this.chainId].thirdParty.coingecko.platformId||"2"}get nativeAssetId(){return Cn[this.chainId].thirdParty.coingecko.nativeAssetId||""}}class Ui extends l.SOR{constructor(e){const t=Ci(e),n=Ui.getSorConfig(e),a=Ui.getSorNetworkConfig(t),o=new d.JsonRpcProvider(e.rpcUrl,e.network),i=_i(t.urls.subgraph);super(o,a,Ui.getPoolDataService(t,n,o,i),Ui.getTokenPriceService(t,n,i,e.coingecko))}static getSorConfig(e){return{tokenPriceService:"api",poolDataService:"subgraph",fetchOnChainBalances:!0,...e.sor}}static getSorNetworkConfig(e){var t;return{...e,vault:e.addresses.contracts.vault,weth:e.addresses.tokens.wrappedNativeAsset,lbpRaisingTokens:null===(t=e.addresses.tokens)||void 0===t?void 0:t.lbpRaisingTokens,wETHwstETH:e.pools.wETHwstETH,connectingTokens:e.sorConnectingTokens,triPathMidPoolIds:e.sorTriPathMidPoolIds}}static getPoolDataService(e,t,n,a){var o;const i=[...null!==(o=e.poolsToIgnore)&&void 0!==o?o:[],...Mi];return"object"==typeof t.poolDataService?t.poolDataService:new Bi(a,n,{...e,poolsToIgnore:i},t)}static getTokenPriceService(e,t,n,a){return"coingecko"===t.tokenPriceService&&a?new Li(e.chainId,a):"object"==typeof t.tokenPriceService?t.tokenPriceService:"subgraph"===t.tokenPriceService?new Oi(n,e.addresses.tokens.wrappedNativeAsset):new Fi(e.chainId)}}function qi(e){if(e.poolIds.length>2)throw new Error("Simple flash swap only supports a maximum of two pools");if(e.assets.length>2)throw new Error("Simple flash swap only supports a maximum of to two assets (tokens)")}function Vi(e,t){return[{poolId:e[0],assetInIndex:0,assetOutIndex:1,amount:t,userData:"0x"},{poolId:e[1],assetInIndex:1,assetOutIndex:0,amount:"0",userData:"0x"}]}function Gi(e){return-1*Number(e)}function Wi(e){return r.sum(e)}const $i={"0xae7ab96520de3a18e5e111b5eaab095312d7fe84":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0","0xd46ba6d942050d489dbd938a2c909a5d5039a161":"0xedb171c18ce90b633db442f2a6f72874093b49ef","0x1e6bb68acec8fefbd87d192be09bb274170a0548":"0xF03387d8d0FF326ab586A58E0ab4121d106147DF"};function Ki(e){let t=e;return $i.hasOwnProperty(e)&&(t=$i[e]),t}var Hi;function Ji(e,t,n){const{tokens:a,contracts:o}=Mn(n);let i={id:Hi.vault,address:o.vault};return a.stETH&&o.lidoRelayer&&[e,t].includes(a.stETH)&&(i={id:Hi.lido,address:o.lidoRelayer}),i}function ji(e){return e.id===Hi.lido?xt.abi.filter((e=>"function"===e.type&&e.name&&["swap","batchSwap"].includes(e.name))):yn.abi.filter((e=>"function"===e.type&&e.name&&["swap","batchSwap"].includes(e.name)))}function Xi(e){return{amount:e,max:t=>e.mul(1e4+t).div(1e4),min:t=>e.mul(1e4-t).div(1e4)}}function Yi(t,n){const a=n===e.SwapType.SwapExactIn?t.swapAmount:t.returnAmount,o=n===e.SwapType.SwapExactIn?t.returnAmount:t.swapAmount,i=n===e.SwapType.SwapExactIn?t.swapAmountForSwaps||t.swapAmount:t.returnAmountFromSwaps||t.returnAmount,s=n===e.SwapType.SwapExactIn?t.returnAmountFromSwaps||t.returnAmount:t.swapAmountForSwaps||t.swapAmount,r=Ki(t.tokenIn),p=Ki(t.tokenOut);return{...t,amountIn:a,amountOut:o,amountInForLimits:Xi(i),amountOutForLimits:Xi(s),tokenInForSwaps:r,tokenOutFromSwaps:p}}!function(e){e[e.vault=1]="vault",e[e.lido=2]="lido"}(Hi||(Hi={}));class zi{constructor(e,t,n){this.kind=t,this.chainId=n,this.functionName="swap",this.swapInfo=Yi(e,t),this.relayer=Ji(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}get amount(){return this.kind===e.SwapType.SwapExactOut?this.swapInfo.amountOutForLimits.amount:this.swapInfo.amountInForLimits.amount}setLimits(t){this.limit=this.kind===e.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(t).toString():this.swapInfo.amountInForLimits.max(t).toString()}get singleSwap(){return{poolId:this.swapInfo.swaps[0].poolId,kind:this.kind,assetIn:this.swapInfo.tokenInForSwaps,assetOut:this.swapInfo.tokenOutFromSwaps,amount:this.amount.toString(),userData:"0x"}}attributes(){var e;if(!this.funds||!this.limit||!this.deadline)throw new Error("Uninitialized arguments");let t={request:this.singleSwap,funds:this.funds,limit:this.limit,deadline:this.deadline};const n=this.fragment();return n[0].inputs&&(null===(e=n[0].inputs)||void 0===e?void 0:e.length)>4&&(t={...t,value:"0",outputReference:"0"}),t}data(){return new t.Interface(this.fragment()).encodeFunctionData("swap",Object.values(this.attributes()))}value(t){let o=a.BigNumber.from(0);return this.swapInfo.tokenIn===n.AddressZero&&(o=this.kind===e.SwapType.SwapExactIn?this.swapInfo.amountIn:this.swapInfo.amountInForLimits.max(t)),o}to(){return this.relayer.address}fragment(){return ji(this.relayer).filter((e=>e.name===this.functionName))}}class Zi{constructor(e,t,n){this.kind=t,this.chainId=n,this.functionName="batchSwap",this.swapInfo=Yi(e,t),this.relayer=Ji(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}minAmountOut(t){return this.kind===e.SwapType.SwapExactIn?this.swapInfo.amountOutForLimits.min(t):this.swapInfo.amountOutForLimits.amount}maxAmountIn(t){return this.kind===e.SwapType.SwapExactOut?this.swapInfo.amountInForLimits.max(t):this.swapInfo.amountInForLimits.amount}setLimits(e){this.limits=this.swapInfo.tokenAddresses.map((t=>{let n=a.BigNumber.from(0);return t===this.swapInfo.tokenInForSwaps&&(n=this.maxAmountIn(e)),t===this.swapInfo.tokenOutFromSwaps&&(n=this.minAmountOut(e).mul(-1)),n})).map((e=>e.toString().split(".")[0]))}attributes(){var e;if(!this.funds||!this.limits||!this.deadline)throw new Error("Uninitialized arguments");let t={kind:this.kind,swaps:this.swapInfo.swaps,assets:this.swapInfo.tokenAddresses,funds:this.funds,limits:this.limits,deadline:this.deadline};const n=this.fragment();return n[0].inputs&&(null===(e=n[0].inputs)||void 0===e?void 0:e.length)>6&&(t={...t,value:"0",outputReferences:[]}),t}data(){return new t.Interface(this.fragment()).encodeFunctionData("batchSwap",Object.values(this.attributes()))}value(e){let t=a.BigNumber.from(0);return this.swapInfo.tokenIn===n.AddressZero&&(t=this.maxAmountIn(e)),t}to(){return this.relayer.address}fragment(){return ji(this.relayer).filter((e=>e.name===this.functionName))}}const Qi={maxPools:4,gasPrice:"1",deadline:"999999999999999999",maxSlippage:10};class es{constructor(e){e instanceof l.SOR?(this.sor=e,this.chainId=this.sor.provider._network.chainId):(this.sor=new Ui(e),"number"==typeof e.network?this.chainId=e.network:this.chainId=e.network.chainId),this.vaultContract=yn.connect(On,this.sor.provider)}static getLimitsForSlippage(e,t,n,a,o,i){return Bn(e,t,n,a,o,i).map((e=>e.toString()))}async findRouteGivenIn({tokenIn:e,tokenOut:t,amount:n,gasPrice:a,maxPools:o=4}){return this.sor.getSwaps(e,t,l.SwapTypes.SwapExactIn,n,{gasPrice:a,maxPools:o})}async findRouteGivenOut({tokenIn:e,tokenOut:t,amount:n,gasPrice:a,maxPools:o=4}){return this.sor.getSwaps(e,t,l.SwapTypes.SwapExactOut,n,{gasPrice:a,maxPools:o})}buildSwap({userAddress:e,recipient:t,swapInfo:n,kind:a,deadline:o,maxSlippage:i}){if(!this.chainId)throw"Missing network configuration";const s=n.swaps.length>1?new Zi(n,a,this.chainId):new zi(n,a,this.chainId);s.setFunds(e,t),s.setDeadline(o),s.setLimits(i);const r=s.to(),{functionName:p}=s;return{to:r,functionName:p,attributes:s.attributes(),data:s.data(),value:s.value(i)}}async buildRouteExactIn(t,n,o,i,s,r=Qi){const p={...Qi,...r},l=await this.findRouteGivenIn({tokenIn:o,tokenOut:i,amount:a.BigNumber.from(s),gasPrice:a.BigNumber.from(p.gasPrice),maxPools:p.maxPools});return this.buildSwap({userAddress:t,recipient:n,swapInfo:l,kind:e.SwapType.SwapExactIn,deadline:p.deadline,maxSlippage:p.maxSlippage})}static encodeBatchSwap(e){return yn.createInterface().encodeFunctionData("batchSwap",[e.kind,e.swaps,e.assets,e.funds,e.limits,e.deadline])}static encodeSimpleFlashSwap(t){return this.encodeBatchSwap(function({poolIds:t,assets:n,flashLoanAmount:a,walletAddress:o}){qi({poolIds:t,assets:n});const i=Vi(t,a),s={sender:o,fromInternalBalance:!1,recipient:o,toInternalBalance:!1};return{kind:e.SwapType.SwapExactIn,swaps:i,assets:n,funds:s,limits:["0","0"],deadline:"999999999999999999"}}(t))}async fetchPools(e){return this.sor.fetchPools(e)}getPools(){return this.sor.getPools()}async queryBatchSwap(e){return await Da(this.vaultContract,e.kind,e.swaps,e.assets)}async querySimpleFlashSwap(t){return await async function(t){qi(t);const[n,a]=t.assets;try{const o=await Da(t.vaultContract,e.SwapType.SwapExactIn,Vi(t.poolIds,t.flashLoanAmount),t.assets),i={[n]:Gi(o[0]).toString(),[a]:Gi(o[1]).toString()};return{profits:i,isProfitable:Wi([i[n],i[a]])>0}}catch(e){throw`Failed to querySimpleFlashSwap: ${e}`}}({...t,vaultContract:this.vaultContract})}async getSorSwap(t){return await async function(t,n,a,o,i){const s=a===e.SwapType.SwapExactIn?l.SwapTypes.SwapExactIn:l.SwapTypes.SwapExactOut;return await i.getSwaps(t.toLowerCase(),n.toLowerCase(),s,o)}(t.tokenIn,t.tokenOut,t.swapType,t.amount,this.sor)}async queryExactIn(t){const n=await this.query(t,e.SwapType.SwapExactIn);return this.assetDeltas(n.map(String),t.tokenAddresses)}async queryExactOut(t){const n=await this.query(t,e.SwapType.SwapExactOut);return this.assetDeltas(n.map(String),t.tokenAddresses)}query(e,t){const{swaps:a,tokenAddresses:o}=e,i={sender:n.AddressZero,recipient:n.AddressZero,fromInternalBalance:!1,toInternalBalance:!1};return this.vaultContract.callStatic.queryBatchSwap(t,a,o,i)}assetDeltas(e,t){return Object.fromEntries(e.map(((e,n)=>[t[n],e])))}}var ts;e.PoolKind=void 0,(ts=e.PoolKind||(e.PoolKind={}))[ts.WEIGHTED=0]="WEIGHTED",ts[ts.LEGACY_STABLE=1]="LEGACY_STABLE",ts[ts.COMPOSABLE_STABLE=2]="COMPOSABLE_STABLE",ts[ts.COMPOSABLE_STABLE_V2=3]="COMPOSABLE_STABLE_V2";const ns=xt.createInterface();class as{static encodeApproveVault(e,t){return ns.encodeFunctionData("approveVault",[e,t])}static encodeSetRelayerApproval(e,t,n){return ns.encodeFunctionData("setRelayerApproval",[e,t,n])}static encodeGaugeWithdraw(e,t,n,a){return ns.encodeFunctionData("gaugeWithdraw",[e,t,n,a])}static encodeGaugeDeposit(e,t,n,a){return ns.encodeFunctionData("gaugeDeposit",[e,t,n,a])}static encodeSwap(e){return ns.encodeFunctionData("swap",[e.request,e.funds,e.limit,e.deadline,e.value,e.outputReference])}static encodeBatchSwap(e){return ns.encodeFunctionData("batchSwap",[e.swapType,e.swaps,e.assets,e.funds,e.limits,e.deadline,e.value,e.outputReferences])}static encodeExitPool(e){return ns.encodeFunctionData("exitPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.exitPoolRequest,e.outputReferences])}static encodeJoinPool(e){return ns.encodeFunctionData("joinPool",[e.poolId,e.kind,e.sender,e.recipient,e.joinPoolRequest,e.value,e.outputReference])}static encodeWrapAaveDynamicToken(e){return ns.encodeFunctionData("wrapAaveDynamicToken",[e.staticToken,e.sender,e.recipient,e.amount,e.fromUnderlying,e.outputReference])}static encodeUnwrapAaveStaticToken(e){return ns.encodeFunctionData("unwrapAaveStaticToken",[e.staticToken,e.sender,e.recipient,e.amount,e.toUnderlying,e.outputReference])}static encodeUnwrapWstETH(e){return ns.encodeFunctionData("unwrapWstETH",[e.sender,e.recipient,e.amount,e.outputReference])}static encodeUnwrap(e,t){let n;switch(t){case"AaveLinear":return this.encodeUnwrapAaveStaticToken({staticToken:e.wrappedToken,sender:e.sender,recipient:e.recipient,amount:e.amount,toUnderlying:!0,outputReference:e.outputReference});case"BeefyLinear":case"ERC4626Linear":n="unwrapERC4626";break;case"EulerLinear":n="unwrapEuler";break;case"GearboxLinear":n="unwrapGearbox";break;case"ReaperLinear":n="unwrapReaperVaultToken";break;case"TetuLinear":n="unwrapTetu";break;case"YearnLinear":n="unwrapYearn";break;case"MidasLinear":n="unwrapCompoundV2";break;case"SiloLinear":n="unwrapShareToken";break;default:throw new Error("Unwrapping not supported for this pool type: "+t)}return ns.encodeFunctionData(n,[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}static encodePeekChainedReferenceValue(e){return ns.encodeFunctionData("peekChainedReferenceValue",[e])}static toChainedReference(e,t=!0){const n=t?as.CHAINED_REFERENCE_TEMP_PREFIX:as.CHAINED_REFERENCE_READONLY_PREFIX,o=`0x${n}${"0".repeat(64-n.length)}`;return a.BigNumber.from(o).add(e)}static fromChainedReference(e,t=!0){const n=t?as.CHAINED_REFERENCE_TEMP_PREFIX:as.CHAINED_REFERENCE_READONLY_PREFIX,o=`0x${n}${"0".repeat(64-n.length)}`;return a.BigNumber.from(e).sub(a.BigNumber.from(o))}static isChainedReference(e){const t=a.BigNumber.from(e),n=a.BigNumber.from("0xfff0000000000000000000000000000000000000000000000000000000000000"),o=t.toBigInt()&n.toBigInt();return"0xba10000000000000000000000000000000000000000000000000000000000000"===a.BigNumber.from(o)._hex.toString()}static formatExitPoolInput(e){const{assets:t,minAmountsOut:n,userData:a,toInternalBalance:o,poolId:i,poolKind:s,sender:r,recipient:p,outputReferences:l}=e;return{poolId:i,poolKind:s,sender:r,recipient:p,outputReferences:l,exitPoolRequest:{assets:t,minAmountsOut:n,userData:a,toInternalBalance:o}}}static formatJoinPoolInput(e){const{assets:t,maxAmountsIn:n,userData:a,fromInternalBalance:o,poolId:i,kind:s,sender:r,recipient:p,value:l,outputReference:d}=e;return{poolId:i,kind:s,sender:r,recipient:p,value:l,outputReference:d,joinPoolRequest:{assets:t,maxAmountsIn:n,userData:a,fromInternalBalance:o}}}}as.CHAINED_REFERENCE_TEMP_PREFIX="ba10",as.CHAINED_REFERENCE_READONLY_PREFIX="ba11",as.signRelayerApproval=async(e,t,a,o)=>{const i=o.interface.encodeFunctionData("setRelayerApproval",[t,e,!0]),s=await oe.signSetRelayerApprovalAuthorization(o,a,e,i);return oe.encodeCalldataAuthorization("0x",n.MaxUint256,s)};class os{constructor(e){this.url=Ci(e).urls.subgraph,this.client=this.initClient()}initClient(){return $o(new u.GraphQLClient(this.url))}}class is{constructor(e,t){this.swaps=t||new es(e)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async getSpotPrice(t,n,a=[]){0===a.length&&(await this.fetchPools(),a=this.getPools());const o=l.parseToPoolsDict(a,0),i=this.swaps.sor.routeProposer.getCandidatePathsFromDict(t,n,0,o,4);if(0===i.length)throw new Rn(e.BalancerErrorCode.UNSUPPORTED_PAIR);return l.getSpotPriceAfterSwapForPath(i[0],0,l.ZERO).toString()}}const ss=["function getPoolId() view returns (bytes32)","function getSwapFeePercentage() view returns (uint256)","function getProtocolFeesCollector() view returns (address)","function inRecoveryMode() view returns (bool)"];class rs{constructor(e,n,a={}){this.multicall=e,this.options=a,this.calls=[],this.paths=[],this.interface=new t.Interface(n)}call(e,t,n,a){return this.calls.push([t,n,a]),this.paths.push(e),this}async execute(e={}){const t=e;return(await this.executeMulticall()).forEach(((e,n)=>r.set(t,this.paths[n],e.length>1?e:e[0]))),this.calls=[],this.paths=[],t}async executeMulticall(){const[,e]=await this.multicall.callStatic.aggregate(this.calls.map((([e,t,n])=>({target:e,callData:this.interface.encodeFunctionData(t,n)}))),this.options);return e.map(((e,t)=>this.interface.decodeFunctionResult(this.calls[t][1],e)))}}function ps(e){return Math.round(Date.now()/1e3)-e<86400}class ls{constructor(e,t){this.veBalAddress=e,this.multicall=t}async getLockInfo(e){if(!this.veBalAddress)throw new Error("veBal address must be defined");const t=new rs(this.multicall,[...En.abi]);t.call("locked",this.veBalAddress,"locked",[e]),t.call("epoch",this.veBalAddress,"epoch"),t.call("totalSupply",this.veBalAddress,"totalSupply()");const n=await t.execute();return this.formatLockInfo(n)}formatLockInfo(e){const[t,n]=e.locked,a=t.gt(0),o=1e3*n.toNumber();const i=a&&Date.now()>o;return{lockedEndDate:o,lockedAmount:Me(t),totalSupply:Me(e.totalSupply),epoch:Me(e.epoch,0),hasExistingLock:a,isExpired:i}}}class ds{constructor(e,t){if(!e.veBalProxy)throw new Error("veBalProxy address must be defined");this.instance=Sn.connect(e.veBalProxy,t)}async getAdjustedBalance(e){return Me(await this.instance.adjustedBalanceOf(e))}}class us{constructor(e,t){this.getLiquidityGauge=nn.connect,this.contractAddresses="number"==typeof e?Cn[e].addresses.contracts:e;const n=yn.connect(this.contractAddresses.vault,t),a=ft.connect(this.contractAddresses.balancerHelpers,t);let o;this.contractAddresses.lidoRelayer&&(o=Zt.connect(this.contractAddresses.lidoRelayer,t));const i=on.connect(this.contractAddresses.multicall,t),s=Pt.connect(this.contractAddresses.balancerRelayer,t);let r,p,l,d,u,c,y,m,b,f,T;this.contractAddresses.veBal&&(r=new ls(this.contractAddresses.veBal,i)),this.contractAddresses.veBalProxy&&(p=new ds(this.contractAddresses,t)),this.contractAddresses.gaugeClaimHelper&&(l=$t.connect(this.contractAddresses.gaugeClaimHelper,t)),this.contractAddresses.composableStablePoolFactory&&(d=vt.connect(this.contractAddresses.composableStablePoolFactory,t)),this.contractAddresses.weightedPoolFactory&&(u=Tn.connect(this.contractAddresses.weightedPoolFactory,t)),this.contractAddresses.aaveLinearPoolFactory&&(c=dt.connect(this.contractAddresses.aaveLinearPoolFactory,t)),this.contractAddresses.erc4626LinearPoolFactory&&(y=Nt.connect(this.contractAddresses.erc4626LinearPoolFactory,t)),this.contractAddresses.eulerLinearPoolFactory&&(m=qt.connect(this.contractAddresses.eulerLinearPoolFactory,t)),this.contractAddresses.gearboxLinearPoolFactory&&(b=jt.connect(this.contractAddresses.gearboxLinearPoolFactory,t)),this.contractAddresses.yearnLinearPoolFactory&&(f=gn.connect(this.contractAddresses.yearnLinearPoolFactory,t)),this.contractAddresses.gyroConfigProxy&&(T=Yt.connect(this.contractAddresses.gyroConfigProxy,t)),this.instances={aaveLinearPoolFactory:c,balancerHelpers:a,BasePool:this.getBasePool,composableStablePoolFactory:d,ERC20:this.getErc20,erc4626LinearPoolFactory:y,eulerLinearPoolFactory:m,gaugeClaimHelper:l,gearboxLinearPoolFactory:b,gyroConfig:T,liquidityGauge:this.getLiquidityGauge,lidoRelayer:o,multicall:i,relayer:s,veBal:r,veBalProxy:p,weightedPoolFactory:u,yearnLinearPoolFactory:f,vault:n}}get contracts(){return this.instances}getErc20(e,t){return Ct.connect(e,t)}getBasePool(e,t){return((e,t)=>new m.Contract(e,ss,t))(e,t)}}class cs{constructor(e,t){this.tokenPrices=e,this.tokenHistoricalPrices=t}async calcImpLoss(t,n){if(1e3*t>=Date.now())throw console.error(`[ImpermanentLossService][calcImpLoss]Error: ${Rn.getMessage(e.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE)}`),new Rn(e.BalancerErrorCode.TIMESTAMP_IN_THE_FUTURE);const a=await this.prepareData(t,n),o=this.getPoolValueDelta(a),i=this.getHoldValueDelta(a);return this.calculateImpermanentLoss(o,i)}calculateImpermanentLoss(e,t){return Math.floor(100*Math.abs(e/t-1)*100)/100}getPoolValueDelta(e){return e.reduce(((e,t)=>e*Math.pow(Math.abs(t.priceDelta+1),t.weight)),1)}getHoldValueDelta(e){return e.reduce(((e,t)=>e+Math.abs(t.priceDelta+1)*t.weight),0)}async prepareData(e,t){const n=t.tokens.filter((e=>e.address!==t.address)),a=this.getWeights(n),o=n.map((e=>e.address)),i=await this.getEntryPrices(e,o),s=await this.getExitPrices(n);return this.getAssets(n,s,i,a)}getAssets(e,t,n,a){return e.map(((e,o)=>({priceDelta:this.getDelta(n[e.address],t[e.address]),weight:a[o]})))}getDelta(t,n){if(0===t)throw console.error(`[ImpermanentLossService][getDelta]Error: ${Rn.getMessage(e.BalancerErrorCode.ILLEGAL_PARAMETER)}: entry price is 0`),new Rn(e.BalancerErrorCode.ILLEGAL_PARAMETER);return(n-t)/t}getWeights(t){const n=t.every((e=>!e.weight)),a=Math.round(1/t.length*100)/100,o=n?t.map((()=>a)):t.map((e=>{var t;return Number(null!==(t=e.weight)&&void 0!==t?t:0)}));if(o.some((e=>0===e)))throw console.error(`[ImpermanentLossService][getWeights]Error: ${Rn.getMessage(e.BalancerErrorCode.MISSING_WEIGHT)}`),new Rn(e.BalancerErrorCode.MISSING_WEIGHT);return o}async getExitPrices(t){var n;const a=await Promise.all(t.map((e=>this.tokenPrices.find(e.address)))).catch((()=>[]));if(!a.length||a.some((e=>void 0===(null==e?void 0:e.usd))))throw console.error(`[ImpermanentLossService][getExitPrices]Error: ${Rn.getMessage(e.BalancerErrorCode.MISSING_PRICE_RATE)}`),new Rn(e.BalancerErrorCode.MISSING_PRICE_RATE);const o=t.map(((e,t)=>({...e,price:a[t]}))),i={};for(const e of o)(null===(n=e.price)||void 0===n?void 0:n.usd)&&(i[e.address]=+e.price.usd);return i}async getEntryPrices(t,n){const a={};for(const o of n){const n=await this.tokenHistoricalPrices.findBy(o,t).catch((e=>{z.getInstance().warn(`[ImpermanentLossService][getEntryPrices]Error: ${e.message}`)}));if(!(null==n?void 0:n.usd)){throw z.getInstance().warn(`[ImpermanentLossService][getEntryPrices]Error: ${Rn.getMessage(e.BalancerErrorCode.MISSING_PRICE_RATE)}`),new Rn(e.BalancerErrorCode.MISSING_PRICE_RATE)}a[o]=+n.usd}return a}}const ys=145e3,ms=1648465251,bs=31536e3,fs=2**(1/4),Ts=(e=Math.round((new Date).getTime()/1e3))=>{const t=Math.floor((e-ms)/bs);return ys*fs**-t},hs=e=>365*(ys*fs**-e/7);var Is=Object.freeze({__proto__:null,INITIAL_RATE:ys,START_EPOCH_TIME:ms,weekly:Ts,total:hs,between:(e,t)=>{if(e<ms)throw"start timestamp before emission schedule deployment";if(t<e)throw"cannot finish before starting";let n=0;const a=Math.floor((e-ms)/bs),o=Math.floor((t-ms)/bs);for(let e=a;e<=o;e++)n+=hs(e);const i=ms+bs*(a+1)-e,s=t-(ms+bs*o);return n-=hs(a)*(bs-i)/bs,n-=hs(o)*(bs-s)/bs,n}});class _s{constructor(e,t){this.repository=e,this.tokenPrices=t}async data(e=Date.now()){const t=await this.repository.multicallData(e),n=await this.tokenPrices.find(t.balAddress);if(!n||!n.usd)throw"No BAL USD price found";return{lastWeekBalRevenue:t.balAmount*parseFloat(n.usd),lastWeekBBAUsdRevenue:t.bbAUsdAmount*t.bbAUsdPrice,veBalSupply:t.veBalSupply}}}class gs{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapFee?(null==t?void 0:t.totalSwapFee)?parseFloat(e.totalSwapFee)-parseFloat(t.totalSwapFee):e.createTime&&ps(e.createTime)?parseFloat(e.totalSwapFee):0:0}}class Ps{constructor(e,t,n,a,o,i,s,r,p){this.pools=e,this.tokenPrices=t,this.tokenMeta=n,this.tokenYields=a,this.feeCollector=o,this.yesterdaysPools=i,this.liquidityGauges=s,this.feeDistributor=r,this.gyroConfigRepository=p}async swapFees(e){const t=await this.last24hFees(e),n=await this.totalLiquidity(e);if(!t||!n)return 0;const a=t*(1-await this.protocolSwapFeePercentage(e))/parseFloat(n)*1e4;return Math.round(365*a)}async tokenAprs(e){if(!e.tokens)return{total:0,breakdown:{}};const t=await this.totalLiquidity(e),n=e.tokens.filter((t=>t.address!==e.address)),a=await Promise.all(n.map((async t=>{let n=0;const a=await this.tokenYields.find(t.address);if(a)n="MetaStable"===e.poolType||e.poolType.includes("Gyro")?a*(1-await this.protocolSwapFeePercentage(e)):"ComposableStable"===e.poolType||"Weighted"===e.poolType&&e.poolTypeVersion>=2?t.isExemptFromYieldProtocolFee?a:a*(1-parseFloat(e.protocolYieldFeeCache||"0.5")):a;else{const a=await this.pools.findBy("address",t.address);if(a){const o=await this.swapFees(a);let i=(await this.tokenAprs(a)).total;("ComposableStable"===e.poolType||"Weighted"===e.poolType&&2===e.poolTypeVersion)&&(t.isExemptFromYieldProtocolFee||(i*=1-parseFloat(e.protocolYieldFeeCache||"0.5"))),n=o+i}}return n}))),o=async e=>{var n,a,o,i,s;let r;if(e.weight)return parseFloat(e.weight);if(null===(a=null===(n=e.token)||void 0===n?void 0:n.pool)||void 0===a?void 0:a.poolType){const t=await this.pools.findBy("address",e.address);t&&(r=(await this.bptPrice(t)).toString())}else r=(null===(o=e.price)||void 0===o?void 0:o.usd)||(null===(i=await this.tokenPrices.find(e.address))||void 0===i?void 0:i.usd)||(null===(s=e.token)||void 0===s?void 0:s.latestUSDPrice);if(r){return parseFloat(e.balance)*parseFloat(r)/parseFloat(t)}throw`No price for ${e.address}`},i=await Promise.all(n.map((async(e,t)=>{if(0===a[t])return 0;try{const n=await o(e);return Math.round(a[t]*n)}catch(e){return z.getInstance().error(e),0}})));return{total:i.reduce(((e,t)=>e+t),0),breakdown:r.pickBy(r.zipObject(n.map((e=>e.address)),i),r.identity)}}async stakingApr(e,t=1){if(!this.liquidityGauges)return 0;const n=await this.liquidityGauges.findBy("poolId",e.id);if(!n||1==e.chainId&&0===n.workingSupply||e.chainId>1&&0===n.totalSupply||e.chainId>1&&0===n.balInflationRate)return 0;const a=Cn[e.chainId].addresses.tokens.bal;if(!a)return 0;const[o,i]=await Promise.all([this.tokenPrices.find(a),this.bptPrice(e)]);if(!(null==o?void 0:o.usd))throw"Missing BAL price";const s=(n.workingSupply+.4)/.4*i;if(n.balInflationRate){const e=86400*n.balInflationRate*365*parseFloat(o.usd);return Math.round(1e4*t*e/s)}if(e.chainId>1){if(!n.rewardTokens)return 0;const e=a&&n.rewardTokens[a];if(!e)return 0;{let t;try{t=await this.rewardTokenApr(a,e);const o=n.totalSupply*i,s=t.value/o;return Math.round(1e4*s)}catch(e){return 0}}}const r=parseFloat(o.usd),p=Math.round((new Date).getTime()/1e3),l=Ts(p)/7*365*n.relativeWeight*r;return Math.round(1e4*t*l/s)}async rewardAprs(e){if(!this.liquidityGauges)return{total:0,breakdown:{}};const t=await this.liquidityGauges.findBy("poolId",e.id);if(!t||!t.rewardTokens||Object.keys(t.rewardTokens).length<1)return{total:0,breakdown:{}};const n=Cn[e.chainId].addresses.tokens.bal,a=Object.keys(t.rewardTokens).filter((e=>e!=n)).map((async e=>{const n=t.rewardTokens[e];try{return await this.rewardTokenApr(e,n)}catch(t){return{address:e,value:0}}})),o=await this.bptPrice(e),i=t.totalSupply*o;if(0==i)return{total:0,breakdown:{}};const s={};let r=0;for await(const e of Object.values(a)){const t=e.value/i,n=Math.round(1e4*t);r+=n,s[e.address]=n}return{total:r,breakdown:s}}async protocolApr(e){if("0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"!=e.id||!this.feeDistributor)return 0;const t=new _s(this.feeDistributor,this.tokenPrices),{lastWeekBalRevenue:n,lastWeekBBAUsdRevenue:a,veBalSupply:o}=await t.data(),i=await this.bptPrice(e);if(!i)throw"bptPrice for veBal pool missing";const s=(n+a)/7;return Math.round(365*s*1e4/(i*o))}async apr(e){if(Mi.includes(e.id))return{swapFees:0,tokenAprs:{total:0,breakdown:{}},stakingApr:{min:0,max:0},rewardAprs:{total:0,breakdown:{}},protocolApr:0,min:0,max:0};const[t,n,a,o,i,s]=await Promise.all([this.swapFees(e),this.tokenAprs(e),this.stakingApr(e),this.stakingApr(e,2.5),this.rewardAprs(e),this.protocolApr(e)]);return{swapFees:t,tokenAprs:n,stakingApr:{min:a,max:o},rewardAprs:i,protocolApr:s,min:t+n.total+i.total+a,max:t+n.total+i.total+s+o}}async last24hFees(e){return new gs(this.yesterdaysPools).last24h(e)}async totalLiquidity(e){try{const t=new va(this.pools,this.tokenPrices);return await t.getLiquidity(e)}catch(t){return z.getInstance().warn("Liquidity calculcation failed, falling back to subgraph"),e.totalLiquidity}}async bptPrice(e){return parseFloat(await this.totalLiquidity(e))/parseFloat(e.totalShares)}async protocolSwapFeePercentage(e){let t=.5;return t=e.poolType.includes("Gyro")&&this.gyroConfigRepository?await this.gyroConfigRepository.getGyroProtocolFee(e.address):e.protocolSwapFeeCache?parseFloat(e.protocolSwapFeeCache):await this.feeCollector.find("")||.5,t}async rewardTokenApr(e,t){if(t.period_finish.toNumber()<Date.now()/1e3)return{address:e,value:0};{const n=t.rate.mul(86400).mul(365),a=await this.tokenPrices.find(e);if(a&&a.usd){let o=18;if(t.decimals)o=t.decimals;else{const t=await this.tokenMeta.find(e);o=(null==t?void 0:t.decimals)||18}return{address:e,value:parseFloat(Me(n,o))*parseFloat(a.usd)}}throw`No USD price for ${e}`}}}const ws=Object.values(e.PoolType),xs=new Map;ws.forEach((e=>{e.includes("Linear")&&ws.includes(e)&&xs.set(e,"batchSwap")})),xs.set(e.PoolType.Element,"batchSwap"),xs.set(e.PoolType.Investment,"joinPool"),xs.set(e.PoolType.LiquidityBootstrapping,"joinPool"),xs.set(e.PoolType.MetaStable,"joinPool"),xs.set(e.PoolType.Stable,"joinPool"),xs.set(e.PoolType.StablePhantom,"batchSwap"),xs.set(e.PoolType.Weighted,"joinPool"),xs.set(e.PoolType.ComposableStable,"joinPool");const Es=new Map;ws.forEach((e=>{e.includes("Linear")&&ws.includes(e)&&Es.set(e,"batchSwap")})),Es.set(e.PoolType.Element,"batchSwap"),Es.set(e.PoolType.Investment,"exitPool"),Es.set(e.PoolType.LiquidityBootstrapping,"exitPool"),Es.set(e.PoolType.MetaStable,"exitPool"),Es.set(e.PoolType.Stable,"exitPool"),Es.set(e.PoolType.StablePhantom,"batchSwap"),Es.set(e.PoolType.Weighted,"exitPool"),Es.set(e.PoolType.ComposableStable,"exitPool");class As{constructor(t){this.pools=t,this.getGraphNodes=async(t,n,a)=>{if(!await this.pools.find(n))throw new Rn(e.BalancerErrorCode.POOL_DOESNT_EXIST);const o=await this.buildGraphFromRootPool(n,a);if(o.id!==n)throw new Error("Error creating graph nodes");return t?As.orderByBfs(o).reverse():As.orderByBfs(o)}}async buildGraphFromRootPool(t,a){const o=await this.pools.find(t);if(!o)throw new Rn(e.BalancerErrorCode.POOL_DOESNT_EXIST);return(await this.buildGraphFromPool(o.address,0,void 0,n.WeiPerEther,a))[0]}getTokenTotal(e){const t=e.tokensList.indexOf(e.address);let a=n.Zero;const{balancesEvm:o}=Te(e);return o.forEach(((e,n)=>{t!==n&&(a=a.add(e))})),a}async buildGraphFromPool(t,o,i,s,r){var p;const l=await this.pools.findBy("address",t);if(!l){if(i){const e=await this.pools.findBy("address",i.address),n=e.tokensList.indexOf(t),a=null!==(p=e.tokens[n].decimals)&&void 0!==p?p:18,{balancesEvm:r}=Te(e);return As.createInputTokenNode(o,t,a,i,s,r[n].toString())}throw new Rn(e.BalancerErrorCode.POOL_DOESNT_EXIST)}const d=xs.get(l.poolType),u=Es.get(l.poolType);if(!d||!u)throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);const c=this.getTokenTotal(l),{spotPriceCalculator:y}=Sa.from(l.poolType),m={};let b=18;l.tokens.forEach((e=>{if(Ye(e.address,l.address))return void(b=e.decimals?e.decimals:18);const t=y.calcPoolSpotPrice(e.address,l.address,l);m[e.address]=t}));let f={address:l.address,id:l.id,type:l.poolType,joinAction:d,exitAction:u,isProportionalExit:!1,children:[],marked:!1,index:o.toString(),parent:i,proportionOfParent:s,isLeaf:!1,spotPrices:m,decimals:b,balance:l.totalShares,priceRate:n.WeiPerEther.toString()};if(this.updateNodeIfProportionalExit(l,f),o++,l.poolType.toString().includes("Linear"))[f,o]=this.createLinearNodeChildren(f,o,l,r);else{const{balancesEvm:e}=Te(l);for(let t=0;t<l.tokens.length;t++){if(Ye(l.tokens[t].address,l.address))continue;let n;if("Weighted"===l.poolType){const e=l.tokens[t].weight;n=a.parseFixed(e,18)}else n=a.BigNumber.from(e[t]).mul(1e18.toString()).div(c);const i=n.mul(s).div(1e18.toString()),p=await this.buildGraphFromPool(l.tokens[t].address,o,f,i,r);o=p[1],p[0]&&f.children.push(p[0])}}return[f,o]}updateNodeIfProportionalExit(t,n){(t.poolType===e.PoolType.Weighted||t.poolType===e.PoolType.ComposableStable&&t.poolTypeVersion>2)&&(n.isProportionalExit=!0)}createLinearNodeChildren(e,t,n,a){var o;if(void 0===n.mainIndex)throw new Error("Issue With Linear Pool");if(a.map((e=>e.toLowerCase())).includes(n.tokensList[n.mainIndex].toLowerCase())){const a=this.createWrappedTokenNode(n,t,e,e.proportionOfParent);return e.children.push(a[0]),[e,a[1]]}{const{balancesEvm:a}=Te(n),i=null!==(o=n.tokens[n.mainIndex].decimals)&&void 0!==o?o:18,s=As.createInputTokenNode(t,n.tokensList[n.mainIndex],i,e,e.proportionOfParent,a[n.mainIndex].toString());return e.children.push(s[0]),[e,t=s[1]]}}createWrappedTokenNode(e,t,n,a){var o;if(void 0===e.wrappedIndex||void 0===e.mainIndex)throw new Error("Issue With Linear Pool");const{balancesEvm:i,upScaledBalances:s,scalingFactorsRaw:r,priceRates:p}=Te(e),l={type:"WrappedToken",address:e.tokensList[e.wrappedIndex],id:"N/A",children:[],marked:!1,joinAction:"wrap",exitAction:"unwrap",isProportionalExit:!1,index:t.toString(),parent:n,proportionOfParent:a,isLeaf:!1,spotPrices:{},decimals:18,balance:i[e.wrappedIndex].toString(),priceRate:p[e.wrappedIndex].toString()};t++;const d=null!==(o=e.tokens[e.mainIndex].decimals)&&void 0!==o?o:18,u=ye(s[e.wrappedIndex],r[e.mainIndex]).toString(),c=As.createInputTokenNode(t,e.tokensList[e.mainIndex],d,l,a,u);return l.children=[c[0]],[l,t=c[1]]}static createInputTokenNode(e,t,a,o,i,s){return[{address:t,id:"N/A",type:"Input",children:[],marked:!1,joinAction:"input",exitAction:"output",isProportionalExit:!1,index:e.toString(),parent:o,proportionOfParent:i,isLeaf:!0,spotPrices:{},decimals:a,balance:s,priceRate:n.WeiPerEther.toString()},e+1]}static orderByBfs(e){const t=[],n=[];for(e.marked=!0,t.push(e);t.length>0;){const e=t.shift();e&&n.push(e),null==e||e.children.forEach((e=>{e.marked||(e.marked=!0,t.push(e))}))}return n}static getLeafAddresses(e){return e.filter((e=>e.isLeaf)).map((e=>e.address))}static isProportionalPools(e){return e.every((e=>!(e.children.length>1)||e.isProportionalExit))}}class Ss{constructor(){}}Ss.joinInit=e=>t.defaultAbiCoder.decode(["uint256","uint256[]"],e),Ss.joinExactTokensInForBPTOut=e=>t.defaultAbiCoder.decode(["uint256","uint256[]","uint256"],e),Ss.joinTokenInForExactBPTOut=e=>t.defaultAbiCoder.decode(["uint256","uint256","uint256"],e),Ss.joinAllTokensInForExactBPTOut=e=>t.defaultAbiCoder.decode(["uint256","uint256"],e),Ss.exitExactBPTInForOneTokenOut=e=>t.defaultAbiCoder.decode(["uint256","uint256","uint256"],e),Ss.exitExactBPTInForTokensOut=e=>t.defaultAbiCoder.decode(["uint256","uint256"],e),Ss.exitBPTInForExactTokensOut=e=>t.defaultAbiCoder.decode(["uint256","uint256[]","uint256"],e);class vs{constructor(e){this.relayerModel=e}joinKind(e){const n=t.defaultAbiCoder.decode(["uint256"],e)[0];if(!n)throw new Error("No exit kind.");return n.toNumber()}decodeJoinData(t,n){if(n===e.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT){return Ss.joinAllTokensInForExactBPTOut(t).toString()}if(n===e.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT){const[,e]=Ss.joinExactTokensInForBPTOut(t);return e}if(n===e.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT){const[,e,n]=Ss.joinTokenInForExactBPTOut(t);return[e.toString(),n]}throw new Error("Non supported join data")}allTokensInForExactBPTOut(){throw new Error("joinAllTokensInForExactBPTOut not supported")}joinExactTokensInForBPTOut(t,n){const o=this.decodeJoinData(t,e.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT),i=this.relayerModel.doChainedRefReplacements(o),s=n._calcBptOutGivenExactTokensIn(i.map((e=>a.BigNumber.from(e))));if("StablePhantom"==n.SubgraphType||"ComposableStable"==n.SubgraphType){const e=n.tokens.find((e=>Ye(e.address,n.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const t=a.parseFixed(e.balance.toString(),e.decimals);n.updateTokenBalanceForPool(n.address,t.sub(s))}else n.updateTokenBalanceForPool(n.address,n.totalShares.add(s));const r=n.tokens.filter((e=>!Ye(e.address,n.address)));return i.forEach(((e,t)=>{const o=a.parseFixed(r[t].balance.toString(),r[t].decimals);n.updateTokenBalanceForPool(r[t].address,o.add(e))})),[s.toString(),r.map((e=>e.address)),i]}joinTokenInForExactBPTOut(t,n){const[o,i]=this.decodeJoinData(t,e.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT),s=this.relayerModel.doChainedRefReplacement(o),r=n.parsePoolPairData(n.tokensList[Number(i)],n.address),p=a.formatFixed(s,18),d=n._tokenInForExactTokenOut(r,l.bnum(p.toString())).dp(r.decimalsIn),u=a.parseFixed(d.toString(),r.decimalsIn);return n.updateTokenBalanceForPool(r.tokenIn,r.balanceIn.add(u)),n.updateTokenBalanceForPool(r.tokenOut,r.balanceOut.add(s)),[u.toString(),r.tokenIn,u.toString()]}async doJoinPool(t,a){const o=a[t.poolId],i=this.joinKind(t.encodedUserData);let s="0",r=[],p=[];if(i===e.WeightedPoolJoinKind.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT)s=this.allTokensInForExactBPTOut();else if(i===e.WeightedPoolJoinKind.EXACT_TOKENS_IN_FOR_BPT_OUT)[s,r,p]=this.joinExactTokensInForBPTOut(t.encodedUserData,o);else{if(i!==e.WeightedPoolJoinKind.TOKEN_IN_FOR_EXACT_BPT_OUT)throw new Error("Exit type not implemented");{let e,n;[s,e,n]=this.joinTokenInForExactBPTOut(t.encodedUserData,o),r.push(e),p.push(n)}}return r.push(o.address),p.push(n.Zero.sub(s).toString()),t.outputReference&&as.isChainedReference(t.outputReference)&&this.relayerModel.setChainedReferenceValue(t.outputReference,s),[r,p]}}class ks{constructor(e){this.relayerModel=e}exitKind(n,a){const o=t.defaultAbiCoder.decode(["uint256"],a)[0];if(!o)throw new Error("No exit kind.");return"ComposableStable"===n?o.toNumber()===e.ComposableStablePoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT?e.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT:o.toNumber()===e.ComposableStablePoolExitKind.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT?e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT:e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT:o.toNumber()}decodeExitData(t,n){if(n===e.WeightedPoolExitKind.BPT_IN_FOR_EXACT_TOKENS_OUT){const[,e,n]=Ss.exitBPTInForExactTokensOut(t);return[e.toString(),n.toString()]}if(n===e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT){const[,e,n]=Ss.exitExactBPTInForOneTokenOut(t);return[e.toString(),n.toString()]}if(n===e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT){const[,e]=Ss.exitExactBPTInForTokensOut(t);return[e.toString()]}throw new Error("Non supported exit data")}exactBptInForTokensOut(t,n){const[o]=this.decodeExitData(t,e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT),i=this.relayerModel.doChainedRefReplacement(o),s=n._calcTokensOutGivenExactBptIn(a.BigNumber.from(i)).map((e=>e.toString()));if("StablePhantom"==n.SubgraphType||"ComposableStable"==n.SubgraphType){const e=n.tokens.find((e=>Ye(e.address,n.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const t=a.parseFixed(e.balance.toString(),e.decimals);n.updateTokenBalanceForPool(n.address,t.add(i))}else n.updateTokenBalanceForPool(n.address,n.totalShares.sub(i));const r=n.tokens.filter((e=>!Ye(e.address,n.address)));return s.forEach(((e,t)=>{const o=a.parseFixed(r[t].balance.toString(),r[t].decimals);n.updateTokenBalanceForPool(r[t].address,o.sub(e))})),[i,r.map((e=>e.address)),s]}exactBptInForOneTokenOut(t,n){const[o,i]=this.decodeExitData(t,e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT),s=this.relayerModel.doChainedRefReplacement(o),r=n.parsePoolPairData(n.address,n.tokensList[Number(i)]),p=a.formatFixed(s,r.decimalsIn),d=n._exactTokenInForTokenOut(r,l.bnum(p)).dp(r.decimalsOut),u=a.parseFixed(d.toString(),r.decimalsOut),c=function(e,t){const n=[];return t.forEach((t=>{const o=e.tokens.findIndex((e=>Ye(e.address,t)));if(o<0)throw"Pool does not contain tokenIn";n.push(a.parseFixed(e.tokens[o].balance,e.tokens[o].decimals).toString())})),n}(n,[n.address,r.tokenOut]);n.updateTokenBalanceForPool(r.tokenOut,a.BigNumber.from(c[1]).sub(u)),"StablePhantom"==n.SubgraphType||"ComposableStable"==n.SubgraphType?n.updateTokenBalanceForPool(n.address,a.BigNumber.from(c[0]).add(s)):n.updateTokenBalanceForPool(n.address,n.totalShares.sub(s));const y=n.tokensList.filter((e=>!Ye(e,n.address))),m=new Array(y.length).fill("0");return m[Number(i)]=u.toString(),[s,y,m]}async doExitPool(t,a){const o=a[t.poolId],i=this.exitKind(o.SubgraphType,t.encodedUserData);let s,r=[],p=[];const l=[],d=[];if(i===e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_TOKENS_OUT)[s,p,r]=this.exactBptInForTokensOut(t.encodedUserData,o);else{if(i!==e.WeightedPoolExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT)throw new Error("Exit type not implemented");[s,p,r]=this.exactBptInForOneTokenOut(t.encodedUserData,o)}for(let e=0;e<t.outputReferences.length;e++){const n=o.tokensList[t.outputReferences[e].index],a=p.indexOf(n);if(-1===a)throw new Error("Token out not found");this.relayerModel.setChainedReferenceValue(t.outputReferences[e].key.toString(),r[a])}return l.push(o.address,...p),d.push(s,...r.map((e=>n.Zero.sub(e).toString()))),[l,d]}}class Bs{constructor(e){this.relayerModel=e}async doSingleSwap(e,t){const a=this.relayerModel.doChainedRefReplacement(e.request.amount.toString()),o=t[e.request.poolId],[,i]=this.doSwap(e.request.assetIn,e.request.assetOut,o,e.request.kind,a),s=n.Zero.sub(i);if(!e.outputReference)throw new Error("Missing outputReference");return this.relayerModel.setChainedReferenceValue(e.outputReference.toString(),s.abs().toString()),[s.toString(),a]}async doBatchSwap(t,a){const o=t.assets,i=new Array(o.length).fill(n.Zero);let s;for(let e=0;e<t.swaps.length;++e){const n=t.swaps[e].amount;as.isChainedReference(n)&&(t.swaps[e].amount=this.relayerModel.getChainedReferenceValue(n))}t.swaps.forEach((n=>{const r=o[n.assetInIndex],p=o[n.assetOutIndex],l=a[n.poolId];let d=n.amount;"0"===d&&(d=s);const[u,c]=this.doSwap(r,p,l,t.swapType,d);s=t.swapType===e.SwapType.SwapExactIn?c.toString():u.toString(),i[n.assetInIndex]=i[n.assetInIndex].add(u),i[n.assetOutIndex]=i[n.assetOutIndex].sub(c)}));for(let e=0;e<t.outputReferences.length;e++)this.relayerModel.setChainedReferenceValue(t.outputReferences[e].key.toString(),i[t.outputReferences[e].index].abs().toString());return i.map((e=>e.toString()))}doSwap(t,o,i,s,r){const p=i.parsePoolPairData(t,o),d=s===e.SwapType.SwapExactIn;let u=d?a.BigNumber.from(r):n.Zero,c=d?n.Zero:a.BigNumber.from(r);const y=a.formatFixed(u,p.decimalsIn),m=a.formatFixed(c,p.decimalsOut);if(d){const e=i._exactTokenInForTokenOut(p,l.bnum(y.toString())).dp(p.decimalsOut);c=a.parseFixed(e.toString(),p.decimalsOut)}else{const e=i._tokenInForExactTokenOut(p,l.bnum(m.toString())).dp(p.decimalsIn);u=a.parseFixed(e.toString(),p.decimalsIn)}return i.updateTokenBalanceForPool(p.tokenIn,p.balanceIn.add(u)),i.updateTokenBalanceForPool(p.tokenOut,p.balanceOut.sub(c)),[u,c]}}class Os{constructor(e){this.relayerModel=e}async doUnwrap(e,t){const o=t[e.poolId],i=o.tokens[o.wrappedIndex],s=o.tokens[o.mainIndex],r=this.relayerModel.doChainedRefReplacement(e.amount.toString()),p=be.divDownFixed(be.mulDownFixed(BigInt(r),a.parseFixed(i.priceRate,18).toBigInt()),n.WeiPerEther.toBigInt()).toString();this.relayerModel.setChainedReferenceValue(e.outputReference.toString(),p);return[[i.address,s.address],[r,n.Zero.sub(p).toString()]]}}class Cs{constructor(e){this.relayerModel=e,this.joinModel=new vs(e),this.exitModel=new ks(e),this.swapModel=new Bs(e),this.unwrapModel=new Os(e)}async doJoin(e,t){return this.joinModel.doJoinPool(e,t)}async doExit(e,t){return this.exitModel.doExitPool(e,t)}async doBatchSwap(e,t){return this.swapModel.doBatchSwap(e,t)}async doSingleSwap(e,t){return this.swapModel.doSingleSwap(e,t)}async doUnwrap(e,t){return this.unwrapModel.doUnwrap(e,t)}}class Ms{constructor(){this.chainedRefs={}}setChainedReferenceValue(e,t){this.chainedRefs[e]=t}getChainedReferenceValue(e){return this.chainedRefs[e]}doChainedRefReplacement(e){return as.isChainedReference(e.toString())?this.getChainedReferenceValue(e.toString()):e}doChainedRefReplacements(e){return e.map((e=>this.doChainedRefReplacement(e).toString()))}}class Fs{constructor(e,t){this.poolDataService=e,this.wrappedNativeAsset=t,this.poolsArray=[],this.poolsDict={}}dataSource(){return this.poolDataService}async all(e=!1){if(e||0===this.poolsArray.length){const e=r.cloneDeep(await this.dataSource().getPools());for(const t of e)if(["Weighted","Investment","Stable","LiquidityBootstrapping"].includes(t.poolType)){const e={address:t.address,balance:t.totalShares,decimals:18,priceRate:"1",weight:"0"};t.tokens.push(e),t.tokensList.push(t.address)}this.poolsArray=e}return this.poolsArray}parseToPoolsDict(e){return Object.fromEntries(r.cloneDeep(e).filter((e=>e.tokensList.length>0&&"0"!==e.tokens[0].balance)).map((e=>[e.id,this.parseNewPool(e)])).filter((([,e])=>void 0!==e)))}parseNewPool(e){if(!e.swapEnabled)return;let t={};try{if(["Weighted","Investment","LiquidityBootstrapping"].includes(e.poolType)){t=l.WeightedPool.fromPool(e,!1)}else if("Stable"===e.poolType){t=l.StablePool.fromPool(e)}else if("MetaStable"===e.poolType){t=l.MetaStablePool.fromPool(e)}else if(e.poolType.toString().includes("Linear")){t=l.LinearPool.fromPool(e)}else if("StablePhantom"===e.poolType){t=l.PhantomStablePool.fromPool(e)}else{if("ComposableStable"!==e.poolType){return void z.getInstance().warn(`Unknown pool type or type field missing: ${e.poolType} ${e.id}`)}t=l.ComposableStablePool.fromPool(e)}if(!t)throw new Error("Issue with Pool");t.SubgraphType=e.poolType}catch(e){return void console.error("Error parseNewPool")}return t}async poolsDictionary(e=!1){if(e||0===Object.keys(this.poolsDict).length){const t=await this.all(e);this.poolsDict=this.parseToPoolsDict(t)}return this.poolsDict}}var Rs,Ns;!function(e){e[e.BatchSwap=0]="BatchSwap",e[e.Join=1]="Join",e[e.Exit=2]="Exit",e[e.Swap=3]="Swap",e[e.Unwrap=4]="Unwrap"}(Rs||(Rs={}));class Ds{constructor(e,t){this.poolsSource=new Fs(e,t)}updateDeltas(e,t,a){return t.forEach(((t,o)=>{e[t]||(e[t]=n.Zero),e[t]=e[t].add(a[o])})),e}async multicall(e,t=!1){const n=new Ms,a=new Cs(n),o=await this.poolsSource.poolsDictionary(t),i={};for(const t of e){let e=[],n=[];switch(t.actionType){case Rs.Join:[e,n]=await a.doJoin(t,o);break;case Rs.Exit:[e,n]=await a.doExit(t,o);break;case Rs.BatchSwap:e=t.assets,n=await a.doBatchSwap(t,o);break;case Rs.Swap:e=[t.request.assetOut,t.request.assetIn],n=await a.doSingleSwap(t,o);break;case Rs.Unwrap:[e,n]=await a.doUnwrap(t,o)}this.updateDeltas(i,e,n)}return i}static mapSwapRequest(e){return{actionType:Rs.Swap,request:e.request,funds:e.funds,outputReference:e.outputReference}}static mapBatchSwapRequest(e){return{actionType:Rs.BatchSwap,swaps:e.swaps,assets:e.assets,funds:e.funds,swapType:e.swapType,outputReferences:e.outputReferences}}static mapJoinPoolRequest(e){return{actionType:Rs.Join,poolId:e.poolId,encodedUserData:e.joinPoolRequest.userData,outputReference:e.outputReference}}static mapExitPoolRequest(e){return{actionType:Rs.Exit,poolId:e.poolId,encodedUserData:e.exitPoolRequest.userData,outputReferences:e.outputReferences}}static mapUnwrapRequest(e,t,n){return{actionType:Rs.Unwrap,poolId:n,amount:e,outputReference:t}}}const Ls=Pt.createInterface();function Us(e){z.getInstance()}class qs{constructor(t,o,i){this.poolGraph=t,this.simulationService=i,this.createCalls=async(e,t,n,a,o)=>{const{multiRequests:i,encodedCalls:s,outputIndexes:r,deltas:p}=this.createActionCalls(e,t,n,a);o&&s.unshift(this.createSetRelayerApproval(o));return{multiRequests:i,encodedCall:Ls.encodeFunctionData("multicall",[s]),outputIndexes:o?r.map((e=>e+1)):r,deltas:p}},this.amountsOutByJoinPath=async(e,t,o,i,s,r,p,l)=>{const d=await this.simulationService.simulateGeneralisedJoin(this.relayer,t,o,s,e,i,r,p,l),u=d.reduce(((e,t)=>e.add(a.BigNumber.from(t))),n.Zero).toString();return{amountsOut:d,totalAmountOut:u}},this.minAmountsOutByJoinPath=(e,t,n)=>({minAmountsOut:t.map((t=>je(a.BigNumber.from(t),a.BigNumber.from(e)).toString())),totalMinAmountOut:je(a.BigNumber.from(n),a.BigNumber.from(e)).toString()}),this.createActionCalls=(e,t,n,a)=>{const o=[],i=[],s=[],r=!a,p={};return e.forEach(((e,l)=>{const d=e[0].isLeaf,u=[];if(e.forEach(((o,s)=>{var c,y;if(o.children.length>0&&0===o.children.filter((e=>this.shouldBeConsidered(e))).length)return void(o.index="0");const m=o.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))?t:this.relayer,b=s===e.length-1,f=null!==(y=d&&(null===(c=o.parent)||void 0===c?void 0:c.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))))&&void 0!==y&&y,T=b||f?t:this.relayer,h=b&&a?a[l]:"0";switch(o.joinAction){case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:a,amounts:s}=this.createSwap(o,l,h,m,T,n,r);u.push(e),i.push(t),this.updateDeltas(p,a,s)}break;case"joinPool":{const{modelRequest:e,encodedCall:t,assets:a,amounts:s,minBptOut:d}=this.createJoinPool(o,l,h,m,T,n,r);u.push(e),i.push(t),this.updateDeltas(p,[o.address,...a],[d,...s])}break;default:return}})),r){const e=100*l,t=as.encodePeekChainedReferenceValue(as.toChainedReference(e,!1));i.push(t),s.push(i.indexOf(t))}o.push(u)})),{multiRequests:o,encodedCalls:i,outputIndexes:s,deltas:p}},this.createSetRelayerApproval=e=>as.encodeSetRelayerApproval(this.relayer,!0,e),this.createSwap=(t,o,i,s,r,p,l)=>{var d;if(1!==t.children.length)throw new Error("Unsupported swap");const u=t.children[0].address,c=this.getOutputRefValue(o,t.children[0]),y=i,m=p&&!l?this.replaceWrappedNativeAsset([u])[0]:u,b={poolId:t.id,kind:e.SwapType.SwapExactIn,assetIn:m,assetOut:t.address,amount:c.value,userData:"0x"},f={sender:s,recipient:r,fromInternalBalance:this.allImmediateChildrenSendToInternal(t),toInternalBalance:this.allSiblingsSendToInternal(t)},T=a.BigNumber.from(this.getOutputRefValue(o,t).value),h=p&&!l?Ge([m],[c.value]):n.Zero,I={request:b,funds:f,limit:y,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:h,outputReference:T},_=as.encodeSwap(I);Us(),Us(JSON.stringify(I)),Us(JSON.stringify(null===(d=I.value)||void 0===d?void 0:d.toString()));const g=Ds.mapSwapRequest(I),P=t.children.some((e=>"input"===e.joinAction))?c.value:"0",w=null!=t.parent?"0":a.BigNumber.from(i).mul(-1).toString();return{modelRequest:g,encodedCall:_,assets:[t.address,u],amounts:[w,P]}},this.createJoinPool=(t,a,o,i,s,r,p)=>{var l;const d=[],u=[];t.children.forEach((e=>{d.push(e.address),this.shouldBeConsidered(e)?u.push(this.getOutputRefValue(a,e).value):u.push("0")})),t.type===e.PoolType.ComposableStable&&(d.push(t.address),u.push("0"));const c=new Q(this.wrappedNativeAsset),[y,m]=c.sortTokens(d,u);let b=[];const f=y.map((e=>e.toLowerCase())).indexOf(t.address.toLowerCase());let T;b=-1===f?m:[...m.slice(0,f),...m.slice(f+1)],T=t.type===e.PoolType.Weighted?B.joinExactTokensInForBPTOut(b,o):k.joinExactTokensInForBPTOut(b,o);const h=r&&!p?Ge(this.replaceWrappedNativeAsset(y),m):n.Zero,I=this.allImmediateChildrenSendToInternal(t),_=as.formatJoinPoolInput({poolId:t.id,kind:0,sender:i,recipient:s,value:h,outputReference:this.getOutputRefValue(a,t).value,joinPoolRequest:{},assets:r&&!p?this.replaceWrappedNativeAsset(y):y,maxAmountsIn:m,userData:T,fromInternalBalance:I}),g=as.encodeJoinPool(_);Us(),Us(JSON.stringify(_)),Us(JSON.stringify(null===(l=_.value)||void 0===l?void 0:l.toString()));const P=Ds.mapJoinPoolRequest(_),w=m.map((e=>as.isChainedReference(e)?"0":e)),x=as.isChainedReference(o)?"0":o,E=t.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction));return{modelRequest:P,encodedCall:g,assets:E?y:[],amounts:E?w:[],minBptOut:null!=t.parent?n.Zero.toString():n.Zero.sub(x).toString()}},this.getOutputRefValue=(e,t)=>"input"===t.joinAction?{value:t.index,isRef:!1}:"0"===t.index&&t.parent?{value:"0",isRef:!0}:{value:as.toChainedReference(a.BigNumber.from(t.index).add(100*e)).toString(),isRef:!0},this.shouldBeConsidered=e=>"0"!==e.index,this.sendsToInternalBalance=e=>"input"!==e.joinAction&&"joinPool"!==e.joinAction,this.allImmediateChildrenSendToInternal=e=>{const t=e.children.filter((e=>this.shouldBeConsidered(e)));return 0!==t.length&&t.filter((e=>this.sendsToInternalBalance(e))).length===t.length},this.allSiblingsSendToInternal=e=>{if(!e.parent)return!1;const t=e.parent.children.filter((e=>this.shouldBeConsidered(e)));return t.filter((e=>this.sendsToInternalBalance(e))).length===t.length},this.replaceWrappedNativeAsset=e=>{const t=e.findIndex((e=>e.toLowerCase()===this.wrappedNativeAsset.toLowerCase()));return Ze(e,t,n.AddressZero)};const{tokens:s,contracts:r}=Mn(o.chainId);this.relayer=r.balancerRelayer,this.wrappedNativeAsset=s.wrappedNativeAsset}checkInputs(t,a){if(0===t.length)throw new Rn(e.BalancerErrorCode.MISSING_TOKENS);if(a.every((e=>"0"===e)))throw new Rn(e.BalancerErrorCode.JOIN_WITH_ZERO_AMOUNT);if(t.length!=a.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(t.some((e=>e===n.AddressZero))&&t.some((e=>e.toLowerCase()===this.wrappedNativeAsset.toLowerCase())))throw new Rn(e.BalancerErrorCode.INPUT_TOKEN_INVALID)}async joinPool(e,t,a,o,i,s,r,p){this.checkInputs(t,a);const l=await this.poolGraph.getGraphNodes(!0,e,[]),d=t.findIndex((e=>e===n.AddressZero)),u=-1!==d,c=Ze(t,d,this.wrappedNativeAsset.toLowerCase()),y=qs.getJoinPaths(l,c,a),m=qs.totalBptZeroPriceImpact(y);Us();const{multiRequests:b,encodedCall:f,outputIndexes:T}=await this.createCalls(y,o,u,void 0,p),{amountsOut:h,totalAmountOut:I}=await this.amountsOutByJoinPath(o,b,f,c,T,s,r,"0"),{minAmountsOut:_,totalMinAmountOut:g}=this.minAmountsOutByJoinPath(i,h,I),P=Nn(BigInt(I),m.toBigInt(),!0).toString();Us();const{encodedCall:w,deltas:x}=await this.createCalls(y,o,u,_,p),E=u?x[this.wrappedNativeAsset.toLowerCase()]:n.Zero;return Us(E.toString()),this.assertDeltas(e,x,c,a,g),{to:this.relayer,encodedCall:w,expectedOut:I,minOut:g,priceImpact:P,value:E}}assertDeltas(t,n,o,i,s){var r;const p=L(t);if(n[p.toLowerCase()].add(s).abs().gt(3))throw console.error("join assertDeltas, bptOut: ",p,s,null===(r=n[p.toLowerCase()])||void 0===r?void 0:r.toString()),new Rn(e.BalancerErrorCode.JOIN_DELTA_AMOUNTS);delete n[p.toLowerCase()],o.forEach(((t,o)=>{var s,r;if(!a.BigNumber.from(i[o]).eq(0)&&(null===(s=n[t.toLowerCase()])||void 0===s?void 0:s.toString())!==i[o])throw console.error("join assertDeltas, tokenIn: ",t,i[o],null===(r=n[t.toLowerCase()])||void 0===r?void 0:r.toString()),new Rn(e.BalancerErrorCode.JOIN_DELTA_AMOUNTS);delete n[t.toLowerCase()]}));for(const t in n)if("0"!==n[t].toString())throw console.error("join assertDeltas, non-input token should be 0: ",t,n[t].toString()),new Rn(e.BalancerErrorCode.JOIN_DELTA_AMOUNTS)}updateDeltas(e,t,a){return t.forEach(((t,o)=>{const i=t.toLowerCase();e[i]||(e[i]=n.Zero),e[i]=e[i].add(a[o])})),e}}Ns=qs,qs.getJoinPaths=(e,t,o)=>{const i=[],s=e.filter((e=>t.filter(((e,t)=>a.BigNumber.from(o[t]).gt(0))).map((e=>e.toLowerCase())).includes(e.address.toLowerCase())));s.some((e=>e.isLeaf))&&i.push(e);const p=s.filter((e=>!e.isLeaf));return p.forEach((e=>{const s=o.find(((n,a)=>Ye(t[a],e.address))),l=p.filter((t=>Ye(t.address,e.address))).reduce(((e,t)=>e.add(t.proportionOfParent)),a.BigNumber.from(0)),d=a.BigNumber.from(s).mul(e.proportionOfParent).div(l).toString(),[u]=As.createInputTokenNode(0,e.address,e.decimals,e.parent,n.WeiPerEther,e.balance);u.index=d,u.isLeaf=!1;const c=[u];let y=u.parent,m=u;for(;y;){const e=r.cloneDeep(y);e.children=e.children.map((e=>e.address===m.address?m:{...e,index:"0"})),c.push(e),m=e,y=e.parent}i.push(c)})),Ns.updateInputAmounts(i,t,o),i},qs.updateInputAmounts=(e,t,n)=>{const o=(e,t)=>{if(e.length>1){const n=e.reduce(((e,t)=>e.add(t.index)),a.BigNumber.from(0)),o=a.BigNumber.from(t).sub(n);e[0].index=o.add(e[0].index).toString()}},i=e.find((e=>e[0].isLeaf));if(i){const e=Ns.updateTotalProportions(i);i.forEach((a=>{"input"===a.joinAction&&(a=Ns.updateNodeAmount(a,t,n,e))})),t.forEach(((e,t)=>{const a=i.filter((t=>t.isLeaf&&Ye(t.address,e)));o(a,n[t])}))}const s=e.filter((e=>!e[0].isLeaf));s.length>1&&t.forEach(((e,t)=>{const a=s.map((e=>e[0])).filter((t=>Ye(t.address,e)));o(a,n[t])}))},qs.totalBptZeroPriceImpact=e=>{let t=a.BigNumber.from("0");return e.forEach((e=>{if(e[0].isLeaf){e.filter((e=>e.isLeaf)).forEach((e=>{const n=Ns.bptOutZeroPiForInputNode(e);t=t.add(n)}))}else{const n=Ns.bptOutZeroPiForInputNode(e[0]);t=t.add(n)}})),t},qs.bptOutZeroPiForInputNode=e=>{if("0"===e.index||"input"!==e.joinAction)return BigInt(0);let t=1,n=e.parent,o=e.address;for(;void 0!==n;){if("batchSwap"===n.joinAction||"joinPool"===n.joinAction){const e=n.spotPrices[o.toLowerCase()];t*=parseFloat(e),o=n.address}n=n.parent}const i=a.parseFixed(t.toFixed(18),18),s=de(BigInt(e.decimals)),r=ue(BigInt(e.index),s);return be.divDownFixed(r,i.toBigInt())},qs.updateTotalProportions=e=>{const t={};return e.forEach((e=>{t[e.address]?t[e.address]=t[e.address].add(e.proportionOfParent):t[e.address]=e.proportionOfParent})),t},qs.updateNodeAmount=(e,t,n,a)=>{const o=t.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());if(-1===o)return e.index="0",e;const i=a[e.address],s=e.proportionOfParent.mul(1e18.toString()).div(i).mul(n[o]).div(1e18.toString());return e.index=s.toString(),e};class Vs{constructor(e,t){this.chainId=e,this.simulateMulticall=async(e,t,n,a,o="0")=>{const i={...await this.encodeBalanceAndAllowanceOverrides(n,a),...await this.encodeRelayerApprovalOverride(n,e)};return this.simulateTransaction(e,t,n,i,o)},this.simulateTransaction=async(e,t,n,o,i)=>{const s=Object.fromEntries(Object.keys(o).map((e=>[e,{storage:o[e].value}]))),r={...s,[n]:{balance:a.parseFixed("100",18).toHexString()}},p={network_id:this.chainId.toString(),block_number:this.blockNumber,from:n,to:e,input:t,value:i,save_if_fails:!0,simulation_type:"quick",state_objects:r},l=this.tenderlyUrl+"simulate";return(await S.default.post(l,p,this.opts)).data.transaction.transaction_info.call_trace.output},this.encodeRelayerApprovalOverride=async(e,t)=>{const n={[`${this.vaultAddress}`]:{value:{[`_approvedRelayers[${e}][${t}]`]:(!0).toString()}}};return await this.requestStateOverrides(n)},this.encodeBalanceAndAllowanceOverrides=async(e,t)=>{const a=t.filter((e=>e!==n.AddressZero));if(0===a.length)return{};let o={};a.forEach((t=>o={...o,[`${t}`]:{value:{[`_balances[${e}]`]:n.MaxInt256.toString(),[`_allowances[${e}][${this.vaultAddress}]`]:n.MaxInt256.toString(),[`balanceOf[${e}]`]:n.MaxInt256.toString(),[`allowance[${e}][${this.vaultAddress}]`]:n.MaxInt256.toString(),[`balances[${e}]`]:n.MaxInt256.toString(),[`allowed[${e}][${this.vaultAddress}]`]:n.MaxInt256.toString()}}}));const i=await this.requestStateOverrides(o);if(Object.keys(i).some((e=>2!==Object.keys(i[e].value).length)))throw new Error("Couldn't encode state overrides - states should match the ones in the contracts");return i},this.requestStateOverrides=async e=>{const t=this.tenderlyUrl+"contracts/encode-states",n={networkID:this.chainId.toString(),stateOverrides:e},a=(await S.default.post(t,n,this.opts)).data.stateOverrides;if(!a||Object.keys(a).length!==Object.keys(e).length)throw new Error("Couldn't encode state overrides - contracts should be verified and whitelisted on Tenderly");return a};const{contracts:o}=Mn(this.chainId);this.vaultAddress=o.vault,this.tenderlyUrl=`https://api.tenderly.co/api/v1/account/${t.user}/project/${t.project}/`,this.opts={headers:{"X-Access-Key":t.accessKey}},this.blockNumber=t.blockNumber}}var Gs;e.SimulationType=void 0,(Gs=e.SimulationType||(e.SimulationType={}))[Gs.Tenderly=0]="Tenderly",Gs[Gs.VaultModel=1]="VaultModel",Gs[Gs.Static=2]="Static";class Ws{constructor(n,a){this.simulateGeneralisedJoin=async(t,n,a,o,i,s,r,p,l)=>{const d=[];switch(p){case e.SimulationType.Tenderly:{if(!this.tenderlyHelper)throw new Error("Missing Tenderly config");const e=await this.tenderlyHelper.simulateMulticall(t,a,i,s,l);d.push(...this.decodeResult(e,o));break}case e.SimulationType.VaultModel:{const e=await this.simulateRequests(n);d.push(...e);break}case e.SimulationType.Static:{const e=await r.call({to:t,data:a,value:l});try{d.push(...this.decodeResult(e,o))}catch(t){const n=Buffer.from(e.split("x")[1],"hex").toString("utf8");throw new Error(`Transaction reverted with error: ${n}`)}break}default:throw new Error("Simulation type not supported")}return d},this.simulateGeneralisedExit=async(t,n,a,o,i,s,r,p)=>{const l=[];switch(p){case e.SimulationType.Tenderly:{if(!this.tenderlyHelper)throw new Error("Missing Tenderly config");const e=await this.tenderlyHelper.simulateMulticall(t,a,i,[s]);l.push(...this.decodeResult(e,o));break}case e.SimulationType.VaultModel:{const e=await this.simulateRequests(n);l.push(...e);break}case e.SimulationType.Static:{const e=await r.call({to:t,data:a});try{l.push(...this.decodeResult(e,o))}catch(t){const n=Buffer.from(e.split("x")[1],"hex").toString("utf8");throw new Error(`Transaction reverted with error: ${n}`)}break}default:throw new Error("Simulation type not supported")}return l},this.decodeResult=(e,n)=>{const a=t.defaultAbiCoder.decode(["bytes[]"],e)[0];return n.map((e=>t.defaultAbiCoder.decode(["uint256"],a[e]).toString()))},this.simulateRequests=async e=>{if(void 0===this.vaultModel)throw new Error("Missing Vault Model Config.");const t=[];for(const[n,a]of e.entries()){const e=await this.vaultModel.multicall(a,0===n),o=Object.values(e).filter((e=>e.lt(0)));if(0===o.length)throw new Error("No delta found for token out.");t.push(...o.map((e=>e.mul(-1).toString())))}return t},n.tenderly&&(this.tenderlyHelper=new Vs(n.chainId,n.tenderly)),this.vaultModel=a?new Ds(a,n.addresses.tokens.wrappedNativeAsset):void 0}}const $s=Pt.createInterface();function Ks(e){z.getInstance()}class Hs{constructor(e,t,o){this.poolGraph=e,this.simulationService=o,this.amountsOutByExitPath=async(e,t,n,a,o,i,s)=>await this.simulationService.simulateGeneralisedExit(this.relayer,t,n,o,e,a,i,s),this.amountsOutByTokenOut=(e,t,a)=>{const o={};t.forEach(((e,t)=>{var i;return o[e]=(null!==(i=o[e])&&void 0!==i?i:n.Zero).add(a[t])}));return e.map((e=>o[e].toString()))},this.minAmountsOut=(e,t,n)=>({minAmountsOutByExitPath:e.map((e=>je(a.BigNumber.from(e),a.BigNumber.from(n)).toString())),minAmountsOutByTokenOut:t.map((e=>je(a.BigNumber.from(e),a.BigNumber.from(n)).toString()))}),this.getExitPaths=(e,t)=>{const o=e.map((e=>{const a=[e];for(;a[0].parent;)a.unshift(r.cloneDeep(a[0].parent));return a[0].index=a[a.length-1].proportionOfParent.mul(t).div(n.WeiPerEther).toString(),a})),i=o.reduce(((e,t)=>{const n=t[0].index;return a.BigNumber.from(n).add(e)}),n.Zero),s=a.BigNumber.from(t).sub(i);return o[o.length-1][0].index=s.add(o[o.length-1][0].index).toString(),o},this.createUnwrap=(e,t,a,o,i,s)=>{var r,p;const l=as.toChainedReference(this.getOutputRef(a,e.index)).toString(),d=as.toChainedReference(this.getOutputRef(a,t.index)),u=null===(r=e.parent)||void 0===r?void 0:r.type,c={wrappedToken:e.address,sender:i,recipient:s,amount:l,outputReference:d},y=as.encodeUnwrap(c,u);Ks(),Ks(),Ks(JSON.stringify(c));return{modelRequest:Ds.mapUnwrapRequest(l,d,null===(p=e.parent)||void 0===p?void 0:p.id),encodedCall:y,assets:[t.address],amounts:[n.Zero.sub(o).toString()]}},this.getOutputRef=(e,t)=>100*e+parseInt(t),this.receivesFromInternal=e=>!!e.parent&&("output"!==e.exitAction&&"unwrap"!==e.exitAction&&"exitPool"!==e.exitAction);const{tokens:i,contracts:s}=Mn(t.chainId);this.wrappedNativeAsset=i.wrappedNativeAsset,this.relayer=s.balancerRelayer}async getExitInfo(t,n,a,o){Ks();const i=await this.getExit(t,n,a,o,[],e.SimulationType.VaultModel);return{tokensOut:i.tokensOut,estimatedAmountsOut:i.expectedAmountsOut,priceImpact:i.priceImpact,tokensToUnwrap:i.tokensToUnwrap}}async buildExitCall(e,t,n,a,o,i,s,r){Ks();const p=await this.getExit(e,t,n,o,null!=r?r:[],i,s),{minAmountsOutByExitPath:l,minAmountsOutByTokenOut:d}=this.minAmountsOut(p.expectedAmountsOutByExitPath,p.expectedAmountsOut,a);Ks();const{encodedCall:u,deltas:c}=await this.createCalls(p.exitPaths,n,p.isProportional,l,s);return this.assertDeltas(e,c,t,p.tokensOut,d),{to:this.relayer,encodedCall:u,tokensOut:p.tokensOut,expectedAmountsOut:p.expectedAmountsOut,minAmountsOut:d,priceImpact:p.priceImpact}}async getExit(e,t,n,o,i,s,r){const p=await this.poolGraph.getGraphNodes(!1,e,i),l=As.isProportionalPools(p);Ks();let d=[],u=[],c=[];const y=p.filter((e=>"output"===e.exitAction));if(u=y.map((e=>e.address.toLowerCase())),c=[...new Set(u)].sort(),l){const e=p.map(((e,n)=>(0===n&&(e.index=t),e)));d[0]=e}else d=this.getExitPaths(y,t);const{multiRequests:m,encodedCall:b,outputIndexes:f}=await this.createCalls(d,n,l,void 0,r),T=await this.amountsOutByExitPath(n,m,b,p[0].address,f,o,s),h=y.filter(((e,t)=>a.BigNumber.from(T[t]).gt(e.balance))).map((e=>e.address.toLowerCase()));if(i.some((e=>h.includes(e.toLowerCase()))))throw new Error("Insufficient pool balance to perform generalised exit - try exitting with smaller amounts");if(h.length>0)return await this.getExit(e,t,n,o,[...new Set(h)].sort(),s,r);{const n=this.amountsOutByTokenOut(c,u,T),a=await this.calculatePriceImpact(e,this.poolGraph,c,n,t);return{tokensToUnwrap:i,tokensOut:c,exitPaths:d,isProportional:l,expectedAmountsOut:n,expectedAmountsOutByExitPath:T,priceImpact:a}}}async calculatePriceImpact(e,t,n,a,o){const i=await t.getGraphNodes(!0,e,[]),s=qs.getJoinPaths(i,n,a),r=qs.totalBptZeroPriceImpact(s);return Nn(BigInt(o),r.toBigInt(),!1).toString()}assertDeltas(t,n,a,o,i){var s;const r=L(t);if(n[r.toLowerCase()].sub(a).abs().gt(3))throw console.error("exit assertDeltas, bptIn: ",r,a,null===(s=n[r.toLowerCase()])||void 0===s?void 0:s.toString()),new Rn(e.BalancerErrorCode.EXIT_DELTA_AMOUNTS);delete n[r.toLowerCase()],o.forEach(((t,a)=>{var o;if(n[t.toLowerCase()].add(i[a]).abs().gt(1))throw console.error("exit assertDeltas, tokenOut: ",t,i[a],null===(o=n[t.toLowerCase()])||void 0===o?void 0:o.toString()),new Rn(e.BalancerErrorCode.EXIT_DELTA_AMOUNTS);delete n[t.toLowerCase()]}));for(const t in n)if("0"!==n[t].toString())throw console.error("exit assertDeltas, non-input token should be 0: ",t,n[t].toString()),new Rn(e.BalancerErrorCode.EXIT_DELTA_AMOUNTS)}async createCalls(e,t,n,a,o){const{multiRequests:i,calls:s,outputIndexes:p,deltas:l}=this.createActionCalls(r.cloneDeep(e),t,n,a);o&&s.unshift(as.encodeSetRelayerApproval(this.relayer,!0,o));return{multiRequests:i,encodedCall:$s.encodeFunctionData("multicall",[s]),outputIndexes:o?p.map((e=>e+1)):p,deltas:l}}updateDeltas(e,t,a){return t.forEach(((t,o)=>{const i=t.toLowerCase();e[i]||(e[i]=n.Zero),e[i]=e[i].add(a[o])})),e}createActionCalls(e,t,a,o){const i=[],s=[],r=[],p=!o,l={},d=(e,n)=>n.children.filter((t=>e.map((e=>e.index)).includes(t.index))).some((e=>"output"===e.exitAction))?t:this.relayer;return e.forEach(((e,u)=>{const c=[],y=e.filter((e=>"output"===e.exitAction));e.forEach((i=>{const m=i.children.find((t=>e.map((e=>e.index)).includes(t.index))),b=((e,n)=>n.parent?d(e,n.parent):t)(e,i),f=d(e,i),T=i.children.filter((t=>e.map((e=>e.index)).includes(t.index))).some((e=>"output"===e.exitAction||"unwrap"===e.exitAction));let h="0";const I=Array(i.children.length).fill("0");switch(o&&T&&(a?i.children.forEach(((e,t)=>{let a;"unwrap"===e.exitAction?(a=y.indexOf(e.children[0]),h=n.WeiPerEther.mul(o[a]).div(e.priceRate).toString()):"output"===e.exitAction?(a=y.indexOf(e),h=o[a]):h="0",I[t]=h})):h="unwrap"===(null==m?void 0:m.exitAction)?n.WeiPerEther.mul(o[u]).div(m.priceRate).toString():o[u]),i.exitAction){case"unwrap":{const{modelRequest:e,encodedCall:t,assets:n,amounts:a}=this.createUnwrap(i,m,u,h,b,f);c.push(e),s.push(t),this.updateDeltas(l,n,a);break}case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:n,amounts:a}=this.createSwap(i,m,u,h,b,f);c.push(e),s.push(t),this.updateDeltas(l,n,a);break}case"exitPool":{let e;e=a?this.createExitPoolProportional(i,I,b,f):this.createExitPool(i,m,u,h,b,f);const{modelRequest:t,encodedCall:n,bptIn:o,tokensOut:r,amountsOut:p}=e;c.push(t),s.push(n),this.updateDeltas(l,[i.address,...r],[o,...p]);break}case"output":p&&(s.push(as.encodePeekChainedReferenceValue(as.toChainedReference(this.getOutputRef(u,i.index),!1))),r.push(s.length-1));break;default:return}})),i.push(c)})),{multiRequests:i,calls:s,outputIndexes:r,deltas:l}}createSwap(t,n,o,i,s,r){const p=!t.parent,l=p?t.index:as.toChainedReference(this.getOutputRef(o,t.index)).toString(),d=n.address,u=[d,t.address],c=i,y={poolId:t.id,kind:e.SwapType.SwapExactIn,assetIn:t.address,assetOut:d,amount:l,userData:"0x"},m={sender:s,recipient:r,fromInternalBalance:this.receivesFromInternal(t),toInternalBalance:this.receivesFromInternal(n)},b=as.toChainedReference(this.getOutputRef(o,n.index)),f={request:y,funds:m,limit:c,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReference:b};Ks(),Ks(JSON.stringify(f));const T=as.encodeSwap(f),h=p?l:"0";return{modelRequest:Ds.mapSwapRequest(f),encodedCall:T,assets:u,amounts:["output"!==n.exitAction?"0":a.BigNumber.from(i).mul(-1).toString(),h]}}createBatchSwap(t,o,i,s,r,p){const l=!t.parent,d=l?t.index:as.toChainedReference(this.getOutputRef(i,t.index)).toString(),u=[...o.map((e=>e.address)),t.address],c=[...s];c.push(d);const y=[],m=[];o.forEach(((e,a)=>{const o=e.proportionOfParent.mul(d).div(n.WeiPerEther).toString(),i={poolId:t.id,assetInIndex:u.length-1,assetOutIndex:a,amount:o,userData:"0x"};y.push(i),m.push({index:a,key:as.toChainedReference(this.getOutputRef(0,e.index))})}));const b=y.reduce(((e,t)=>e.add(t.amount)),a.BigNumber.from(0)),f=a.BigNumber.from(d).sub(b);y[0].amount=f.add(y[0].amount).toString();const T={sender:r,recipient:p,fromInternalBalance:this.receivesFromInternal(t),toInternalBalance:this.receivesFromInternal(o[0])},h={swapType:e.SwapType.SwapExactIn,swaps:y,assets:u,funds:T,limits:c,deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:m};Ks(),Ks(JSON.stringify(h));const I=as.encodeBatchSwap(h),_=Ds.mapBatchSwapRequest(h),g=l?d:"0",P=[...o.map(((e,t)=>"output"!==e.exitAction?"0":a.BigNumber.from(s[t]).mul(-1).toString())),g];return{modelRequest:_,encodedCall:I,assets:u,amounts:P}}createExitPool(t,a,o,i,s,r){const p=a.address,l=!t.parent,d=l?t.index:as.toChainedReference(this.getOutputRef(o,t.index)).toString(),u=[],c=[];t.children.forEach((e=>{u.push(e.address),c.push(e.address===p?i:"0")})),t.type===e.PoolType.ComposableStable&&(u.push(t.address),c.push("0"));const y=new Q(this.wrappedNativeAsset),[m,b]=y.sortTokens(u,c);let f=[];const T=m.map((e=>e.toLowerCase())).indexOf(t.address.toLowerCase());let h;f=-1===T?m:[...m.slice(0,T),...m.slice(T+1)],h=t.type===e.PoolType.Weighted?B.exitExactBPTInForOneTokenOut(d,f.indexOf(p)):k.exitExactBPTInForOneTokenOut(d,f.indexOf(p));const I=[{index:m.map((e=>e.toLowerCase())).indexOf(p.toLowerCase()),key:as.toChainedReference(this.getOutputRef(o,a.index))}],_=this.receivesFromInternal(a),g=as.formatExitPoolInput({poolId:t.id,poolKind:0,sender:s,recipient:r,outputReferences:I,exitPoolRequest:{},assets:m,minAmountsOut:b,userData:h,toInternalBalance:_});Ks(),Ks(JSON.stringify(g));const P=as.encodeExitPool(g),w=Ds.mapExitPoolRequest(g),x=b.map((e=>as.isChainedReference(e)?"0":n.Zero.sub(e).toString())),E=as.isChainedReference(d)?"0":d;return{modelRequest:w,encodedCall:P,bptIn:l?E:n.Zero.toString(),tokensOut:"output"!==a.exitAction?[]:m,amountsOut:"output"!==a.exitAction?[]:x}}createExitPoolProportional(t,a,o,i){const s=!t.parent,r=s?t.index:as.toChainedReference(this.getOutputRef(0,t.index)).toString(),p=t.children.map((e=>e.address)),l=[...a];t.type===e.PoolType.ComposableStable&&(p.push(t.address),l.push("0"));const d=new Q(this.wrappedNativeAsset),[u,c]=d.sortTokens(p,l);let y;y=t.type===e.PoolType.Weighted?B.exitExactBPTInForTokensOut(r):t.type===e.PoolType.ComposableStable?F.exitExactBPTInForAllTokensOut(r):k.exitExactBPTInForTokensOut(r);const m=t.children.map((e=>({index:u.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase()),key:as.toChainedReference(this.getOutputRef(0,e.index))})));let b=0;t.type===e.PoolType.ComposableStable&&(b=3);const f=t.children.every((e=>this.receivesFromInternal(e))),T=as.formatExitPoolInput({poolId:t.id,poolKind:b,sender:o,recipient:i,outputReferences:m,exitPoolRequest:{},assets:u,minAmountsOut:c,userData:y,toInternalBalance:f});Ks(),Ks(JSON.stringify(T));const h=as.encodeExitPool(T),I=Ds.mapExitPoolRequest(T),_=c.map((e=>as.isChainedReference(e)?"0":n.Zero.sub(e).toString())),g=as.isChainedReference(r)?"0":r,P=s?g:n.Zero.toString(),w=u.filter((e=>t.children.filter((e=>"output"===e.exitAction)).map((e=>e.address)).includes(e))),x=_.filter(((e,t)=>w.includes(u[t])));return{modelRequest:I,encodedCall:h,bptIn:P,tokensOut:w,amountsOut:x}}}class Js{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapVolume?(null==t?void 0:t.totalSwapVolume)?parseFloat(e.totalSwapVolume)-parseFloat(t.totalSwapVolume):e.createTime&&ps(e.createTime)?parseFloat(e.totalSwapVolume):0:0}}class js{constructor(t,n){this.checkCreateInputs=({tokenAddresses:t,tokenRateCacheDurations:n,exemptFromYieldProtocolFeeFlags:a,rateProviders:o,swapFeeEvm:i})=>{if(t.length!==n.length||n.length!==a.length||a.length!==o.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(BigInt(i)<=BigInt(0)||BigInt(i)>BigInt(1e17))throw new Rn(e.BalancerErrorCode.INVALID_SWAP_FEE_PERCENTAGE)},this.parseCreateParamsForEncoding=({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:l})=>{const d=new Q(this.wrappedNativeAsset),[u,c,y,m]=d.sortTokens(n,o,i,s);return[e,t,u,a,c,y,m,r.toString(),p,l||at()]},this.encodeCreateFunctionData=e=>vt.createInterface().encodeFunctionData("create",e),this.checkInitJoinInputs=({poolId:t,poolAddress:n,tokensIn:a,amountsIn:o})=>{if(!t||!n)throw new Rn(e.BalancerErrorCode.NO_POOL_DATA);if(a.length!==o.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH)},this.parseParamsForInitJoin=({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o})=>{const i=new Q(this.wrappedNativeAsset),s=[...a,n],r=[...o,"0"],p=[...o,BigInt.asUintN(256,BigInt(-1)).toString()],[l,d,u]=i.sortTokens(s,r,p),c={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:l,maxAmountsIn:u,userData:F.joinInit(d),fromInternalBalance:!1}};return{attributes:c,params:[c.poolId,c.sender,c.recipient,c.joinPoolRequest]}},this.encodeInitJoinFunctionData=e=>{const t="joinPool";return{functionName:t,data:yn.createInterface().encodeFunctionData(t,e)}},this.getPoolAddressAndIdWithReceipt=async(e,t)=>{var n;const a=nt({receipt:t,to:(null===(n=this.contracts.composableStablePoolFactory)||void 0===n?void 0:n.address)||"",contractInterface:vt.createInterface(),logName:"PoolCreated"}).args.pool,o=this.getPoolInterface(),i=new m.Contract(a,o,e);return{poolAddress:a,poolId:await i.getPoolId()}};const{tokens:a}=Mn(t.chainId);this.wrappedNativeAsset=a.wrappedNativeAsset,this.contracts=n}create({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:l}){var d;this.checkCreateInputs({rateProviders:o,tokenAddresses:n,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r});const u=this.parseCreateParamsForEncoding({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:l}),c=this.encodeCreateFunctionData(u);return{to:null===(d=this.contracts.composableStablePoolFactory)||void 0===d?void 0:d.address,data:c}}buildInitJoin({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o}){this.checkInitJoinInputs({tokensIn:a,amountsIn:o,poolId:t,poolAddress:n});const{attributes:i,params:s}=this.parseParamsForInitJoin({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o}),{functionName:r,data:p}=this.encodeInitJoinFunctionData(s);return{to:On,functionName:r,data:p,attributes:i}}getPoolInterface(){return At.createInterface()}}class Xs{constructor(t,n){this.parseCreateParamsForEncoding=({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r})=>{const p=new Q(this.wrappedNativeAsset),[l,d,u]=p.sortTokens(n,a,o);return[e,t,l,d,u,i.toString(),s,r||at()]},this.encodeCreateFunctionData=e=>Tn.createInterface().encodeFunctionData("create",e),this.parseParamsForInitJoin=({joiner:e,poolId:t,tokensIn:n,amountsIn:a})=>{const o=new Q(this.wrappedNativeAsset),[i,s]=o.sortTokens(n,a),r={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:i,maxAmountsIn:s,userData:B.joinInit(s),fromInternalBalance:!1}};return{attributes:r,params:[r.poolId,r.sender,r.recipient,r.joinPoolRequest]}},this.encodeInitJoinFunctionData=e=>{const t="joinPool";return{functionName:t,data:yn.createInterface().encodeFunctionData(t,e)}},this.checkInitJoinInputs=({poolId:t,tokensIn:n,amountsIn:a})=>{if(!t)throw new Rn(e.BalancerErrorCode.NO_POOL_DATA);if(n.length!==a.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH)};const{tokens:a}=Mn(t.chainId);this.wrappedNativeAsset=a.wrappedNativeAsset,this.contracts=n}create({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r}){var p;this.checkCreateInputs({tokenAddresses:n,normalizedWeights:a,swapFeeEvm:i,rateProviders:o});const l=this.parseCreateParamsForEncoding({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r}),d=this.encodeCreateFunctionData(l);return{to:null===(p=this.contracts.weightedPoolFactory)||void 0===p?void 0:p.address,data:d}}checkCreateInputs({tokenAddresses:t,normalizedWeights:n,swapFeeEvm:a,rateProviders:o}){if(t.length!==n.length||n.length!==o.length)throw new Rn(e.BalancerErrorCode.INPUT_LENGTH_MISMATCH);if(t.length<2)throw new Rn(e.BalancerErrorCode.BELOW_MIN_TOKENS);if(t.length>8)throw new Rn(e.BalancerErrorCode.ABOVE_MAX_TOKENS);if(BigInt(a)<=BigInt(0)||BigInt(a)>BigInt(1e17))throw new Rn(e.BalancerErrorCode.INVALID_SWAP_FEE_PERCENTAGE);if(n.reduce(((e,t)=>be.add(e,BigInt(t))),BigInt(0))!==BigInt(1e18))throw new Rn(e.BalancerErrorCode.INVALID_WEIGHTS)}buildInitJoin({joiner:e,poolId:t,tokensIn:n,amountsIn:a}){this.checkInitJoinInputs({poolId:t,tokensIn:n,amountsIn:a});const{attributes:o,params:i}=this.parseParamsForInitJoin({joiner:e,poolId:t,tokensIn:n,amountsIn:a}),{functionName:s,data:r}=this.encodeInitJoinFunctionData(i);return{to:On,functionName:s,data:r,attributes:o}}async getPoolAddressAndIdWithReceipt(e,t){var n;const a=nt({receipt:t,to:(null===(n=this.contracts.weightedPoolFactory)||void 0===n?void 0:n.address)||"",contractInterface:Tn.createInterface(),logName:"PoolCreated"}).args.pool,o=this.getPoolInterface(),i=new m.Contract(a,o,e);return{poolAddress:a,poolId:await i.getPoolId()}}getPoolInterface(){return bn.createInterface()}}var Ys;e.ProtocolId=void 0,(Ys=e.ProtocolId||(e.ProtocolId={}))[Ys.AAVE_V1=0]="AAVE_V1",Ys[Ys.AAVE_V2=1]="AAVE_V2",Ys[Ys.AAVE_V3=2]="AAVE_V3",Ys[Ys.AMPLEFORTH=3]="AMPLEFORTH",Ys[Ys.BEEFY=4]="BEEFY",Ys[Ys.EULER=5]="EULER",Ys[Ys.GEARBOX=6]="GEARBOX",Ys[Ys.IDLE=7]="IDLE",Ys[Ys.MORPHO=8]="MORPHO",Ys[Ys.RADIANT=9]="RADIANT",Ys[Ys.REAPER=10]="REAPER",Ys[Ys.SILO=11]="SILO",Ys[Ys.STARGATE=12]="STARGATE",Ys[Ys.STURDY=13]="STURDY",Ys[Ys.TESSERA=14]="TESSERA",Ys[Ys.TETU=15]="TETU",Ys[Ys.YEARN=16]="YEARN",Ys[Ys.MIDAS=17]="MIDAS",Ys[Ys.AGAVE=18]="AGAVE";class zs{constructor(t,n){this.getPoolFactoryInterface=()=>{switch(this.poolType){case e.PoolType.AaveLinear:return dt.createInterface();case e.PoolType.Linear:case e.PoolType.ERC4626Linear:return Nt.createInterface();case e.PoolType.EulerLinear:return qt.createInterface();case e.PoolType.GearboxLinear:return jt.createInterface();case e.PoolType.YearnLinear:return gn.createInterface();default:throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}},this.getPoolInterface=()=>{switch(this.poolType){case e.PoolType.AaveLinear:return pt.createInterface();case e.PoolType.Linear:case e.PoolType.ERC4626Linear:return Ft.createInterface();case e.PoolType.EulerLinear:return Lt.createInterface();case e.PoolType.GearboxLinear:return Ht.createInterface();case e.PoolType.YearnLinear:return In.createInterface();default:throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}},this.checkCreateInputs=({swapFeeEvm:t,protocolId:n})=>{if(!e.ProtocolId[n])throw new Rn(e.BalancerErrorCode.INVALID_PROTOCOL_ID);if(BigInt(t)<=BigInt(0)||BigInt(t)>BigInt(1e17))throw new Rn(e.BalancerErrorCode.INVALID_SWAP_FEE_PERCENTAGE);this.getFactoryAddress()},this.parseCreateParamsForEncoding=({name:t,symbol:n,mainToken:a,wrappedToken:o,upperTargetEvm:i,swapFeeEvm:s,owner:r,protocolId:p,salt:l})=>this.poolType===e.PoolType.EulerLinear?[t,n,a,o,i,s,r,p.toString()]:[t,n,a,o,i,s,r,p.toString(),l||at()],this.encodeCreateFunctionData=t=>{const n=this.getPoolFactoryInterface();return this.poolType,e.PoolType.EulerLinear,n.encodeFunctionData("create",t)},this.getFactoryAddress=()=>{switch(this.poolType){case e.PoolType.AaveLinear:if(this.contracts.aaveLinearPoolFactory)return this.contracts.aaveLinearPoolFactory.address;throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case e.PoolType.Linear:case e.PoolType.ERC4626Linear:if(this.contracts.erc4626LinearPoolFactory)return this.contracts.erc4626LinearPoolFactory.address;throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case e.PoolType.EulerLinear:if(this.contracts.eulerLinearPoolFactory)return this.contracts.eulerLinearPoolFactory.address;throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case e.PoolType.GearboxLinear:if(this.contracts.gearboxLinearPoolFactory)return this.contracts.gearboxLinearPoolFactory.address;throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case e.PoolType.YearnLinear:if(this.contracts.yearnLinearPoolFactory)return this.contracts.yearnLinearPoolFactory.address;throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);default:throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}},this.getPoolAddressAndIdWithReceipt=async(e,t)=>{const n=nt({receipt:t,to:this.getFactoryAddress()||"",contractInterface:this.getPoolFactoryInterface(),logName:"PoolCreated"}).args.pool,a=this.getPoolInterface(),o=new m.Contract(n,a,e);return{poolAddress:n,poolId:await o.getPoolId()}},this.contracts=t,this.poolType=n}buildInitJoin(){throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE)}create({name:e,symbol:t,mainToken:n,wrappedToken:a,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r,salt:p}){this.checkCreateInputs({swapFeeEvm:i,protocolId:r});const l=this.parseCreateParamsForEncoding({name:e,symbol:t,mainToken:n,wrappedToken:a,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r,salt:p}),d=this.encodeCreateFunctionData(l);return{to:this.getFactoryAddress(),data:d}}}class Zs{constructor(e,t){this.networkConfig=e,this.contracts=t.contracts}of(t){switch(t){case"Weighted":return new Xs(this.networkConfig,this.contracts);case"Investment":case"LiquidityBootstrapping":case"Stable":case"MetaStable":case"StablePhantom":default:throw new Rn(e.BalancerErrorCode.UNSUPPORTED_POOL_TYPE);case"ComposableStable":return new js(this.networkConfig,this.contracts);case"Linear":case"AaveLinear":case"ERC4626Linear":case"EulerLinear":case"GearboxLinear":case"YearnLinear":return new zs(this.contracts,t)}}}class Qs{constructor(t){this.pool=t;const n=(t=>{switch(t){case e.PoolType.Weighted:return B;case e.PoolType.Stable:case e.PoolType.MetaStable:case e.PoolType.StablePhantom:case e.PoolType.Element:case e.PoolType.Gyro2:case e.PoolType.Gyro3:return k;case e.PoolType.ComposableStable:return F;default:if(tt(t))return k}})(t.poolType);if(!n)throw"Pool type not supported";this.encoder=n}buildQueryJoinExactIn({maxAmountsInByToken:e,minimumBPT:t=n.Zero}){const o=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e))),i=[...this.pool.tokensList],s=this.pool.tokensList.map((t=>{var n;return null!==(n=e.get(t))&&void 0!==n?n:a.BigNumber.from("0")}));let r;r=o>-1?Qe(s,o):s;const p=this.encoder.joinExactTokensInForBPTOut(r,t);return[this.pool.id,n.AddressZero,n.AddressZero,{assets:i,maxAmountsIn:s,userData:p,fromInternalBalance:!1}]}buildQueryJoinExactOut({maxAmountIn:e,bptOut:t,tokenIn:a}){const o=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let i=[...this.pool.tokensList];o>-1&&(i=Qe(this.pool.tokensList,o));const s=i.indexOf(a),r=this.encoder.joinTokenInForExactBPTOut(t,s),p=e?this.pool.tokensList.map((t=>t===a?e:"0")):[];return[this.pool.id,n.AddressZero,n.AddressZero,{assets:this.pool.tokensList,maxAmountsIn:p,userData:r,fromInternalBalance:!1}]}buildQueryExitToSingleToken({minAmountOut:e,bptIn:t,tokenOut:a}){const o=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let i=[...this.pool.tokensList];o>-1&&(i=Qe(this.pool.tokensList,o));const s=i.indexOf(a),r=this.encoder.exitExactBPTInForOneTokenOut(t,s),p=e?this.pool.tokensList.map((t=>t===a?e:"0")):[];return[this.pool.id,n.AddressZero,n.AddressZero,{assets:this.pool.tokensList,minAmountsOut:p,userData:r,toInternalBalance:!1}]}buildQueryExitProportionally({minAmountsOut:e=[],bptIn:t}){if(!this.encoder.exitExactBPTInForTokensOut)throw"Proportional exit not implemented";const a=this.encoder.exitExactBPTInForTokensOut(t);return[this.pool.id,n.AddressZero,n.AddressZero,{assets:this.pool.tokensList,minAmountsOut:e,userData:a,toInternalBalance:!1}]}buildQueryExitExactOut({minAmountsOut:e,maxBptIn:t=n.MaxUint256}){const a=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let o=[...e];a>-1&&(o=Qe(e,a));const i=this.encoder.exitBPTInForExactTokensOut(o,t);return[this.pool.id,n.AddressZero,n.AddressZero,{assets:this.pool.tokensList,minAmountsOut:e,userData:i,toInternalBalance:!1}]}}class er{constructor(e){this.liquidityGaugesRepository=e}async relativeWeight(e){const t=await this.liquidityGaugesRepository.findBy("poolId",e);return t?t.relativeWeight:0}async weekly(e){return Ts()*await this.relativeWeight(e)}}const tr=(e,t,n)=>{const o=e.tokens.filter((t=>!e.id.toLowerCase().includes(t.address.toLowerCase()))),i=o.findIndex((e=>e.address.toLowerCase()===t.toLowerCase()));if(-1==i)throw new Error("Token not found in pool");const s=o.map((e=>Fe(e.balance,e.decimals))),r=a.BigNumber.from(n),p=s.map((e=>e.mul(r).div(s[i])));return{tokens:o.map((e=>e.address)),amounts:p.map((e=>e.toString()))}},nr=(e,t)=>()=>{throw`${t} for poolType ${e} not implemented`};class ar{constructor(e,t,n){this.networkConfig=e,this.repositories=t,this.balancerContracts=n,this.aprService=new Ps(this.repositories.pools,this.repositories.tokenPrices,this.repositories.tokenMeta,this.repositories.tokenYields,this.repositories.feeCollector,this.repositories.yesterdaysPools,this.repositories.liquidityGauges,this.repositories.feeDistributor,this.repositories.gyroConfigRepository),this.liquidityService=new va(t.pools,t.tokenPrices),this.simulationService=new Ws(e,this.repositories.poolsForSimulations),this.graphService=new As(this.repositories.poolsOnChain),this.joinService=new qs(this.graphService,e,this.simulationService),this.exitService=new Hs(this.graphService,e,this.simulationService),this.feesService=new gs(t.yesterdaysPools),this.volumeService=new Js(t.yesterdaysPools),this.poolFactory=new Zs(e,n),this.impermanentLossService=new cs(t.tokenPrices,t.tokenHistoricalPrices),t.liquidityGauges&&(this.emissionsService=new er(t.liquidityGauges)),this.proportionalAmounts=tr}static wrap(e,t){let n,a,o;try{n=Sa.from(e.poolType),o={buildJoin:(t,a,o,s)=>n.join.buildJoin({joiner:t,pool:e,tokensIn:a,amountsIn:o,slippage:s,wrappedNativeAsset:i}),calcPriceImpact:async(t,a,o)=>n.priceImpactCalculator.calcPriceImpact(e,t.map(BigInt),BigInt(a),o),buildExitExactBPTIn:(t,a,o,s=!1,r,p=!1)=>{if(n.exit.buildExitExactBPTIn)return n.exit.buildExitExactBPTIn({exiter:t,pool:e,bptIn:a,slippage:o,shouldUnwrapNativeAsset:s,wrappedNativeAsset:i,singleTokenOut:r,toInternalBalance:p});throw"ExitExactBPTIn not supported"},buildExitExactTokensOut:(t,a,o,s,r=!1)=>n.exit.buildExitExactTokensOut({exiter:t,pool:e,tokensOut:a,amountsOut:o,slippage:s,wrappedNativeAsset:i,toInternalBalance:r}),buildRecoveryExit:(t,a,o,i=!1)=>n.exit.buildRecoveryExit({exiter:t,pool:e,bptIn:a,slippage:o,toInternalBalance:i}),calcSpotPrice:(t,a)=>n.spotPriceCalculator.calcPoolSpotPrice(t,a,e),calcProportionalAmounts:(t,n)=>tr(e,t,n)}}catch(t){if("UNSUPPORTED_POOL_TYPE"!=t.code){z.getInstance().warn(t)}o={buildJoin:nr(e.poolType,"buildJoin"),calcPriceImpact:nr(e.poolType,"calcPriceImpact"),buildExitExactBPTIn:nr(e.poolType,"buildExitExactBPTIn"),buildExitExactTokensOut:nr(e.poolType,"buildExitExactTokensOut"),calcSpotPrice:nr(e.poolType,"calcSpotPrice"),buildRecoveryExit:nr(e.poolType,"buildRecoveryExit")}}try{a=new Qs(e),o={...o,buildQueryJoinExactIn:a.buildQueryJoinExactIn.bind(a),buildQueryJoinExactOut:a.buildQueryJoinExactOut.bind(a),buildQueryExitExactOut:a.buildQueryExitExactOut.bind(a),buildQueryExitToSingleToken:a.buildQueryExitToSingleToken.bind(a),buildQueryExitProportionally:a.buildQueryExitProportionally.bind(a)}}catch(t){o={...o,buildQueryJoinExactIn:nr(e.poolType,"buildQueryJoinExactIn"),buildQueryJoinExactOut:nr(e.poolType,"buildQueryJoinExactOut"),buildQueryExitExactOut:nr(e.poolType,"buildQueryExitExactOut"),buildQueryExitToSingleToken:nr(e.poolType,"buildQueryExitToSingleToken"),buildQueryExitProportionally:nr(e.poolType,"buildQueryExitProportionally")}}const i=t.addresses.tokens.wrappedNativeAsset.toLowerCase(),s=e.tokensList.indexOf(e.address);return{...e,...o,bptIndex:s}}dataSource(){return this.repositories.pools}async refresh(e){const t=await this.repositories.pools.find(e,!0);return t?ar.wrap(t,this.networkConfig):t}async apr(e){return this.aprService.apr(e)}async impermanentLoss(e,t){return this.impermanentLossService.calcImpLoss(e,t)}async liquidity(e){return this.liquidityService.getLiquidity(e)}async bptPrice(e){return this.liquidityService.getBptPrice(e)}buildJoin({pool:e,tokensIn:t,amountsIn:n,userAddress:a,slippage:o}){const i=Sa.from(e.poolType);if(!i)throw`buildJoin for poolType ${e.poolType} not implemented`;return i.join.buildJoin({joiner:a,pool:e,tokensIn:t,amountsIn:n,slippage:o,wrappedNativeAsset:this.networkConfig.addresses.tokens.wrappedNativeAsset.toLowerCase()})}buildExitExactBPTIn({pool:e,bptAmount:t,userAddress:n,slippage:a,shouldUnwrapNativeAsset:o,singleTokenOut:i}){const s=Sa.from(e.poolType);if(!s||!s.exit.buildExitExactBPTIn)throw`buildExit for poolType ${e.poolType} not implemented`;return s.exit.buildExitExactBPTIn({pool:e,exiter:n,bptIn:t,slippage:a,wrappedNativeAsset:this.networkConfig.addresses.tokens.wrappedNativeAsset.toLowerCase(),shouldUnwrapNativeAsset:null!=o&&o,singleTokenOut:null!=i?i:void 0,toInternalBalance:!1})}buildRecoveryExit({pool:e,bptAmount:t,userAddress:n,slippage:a,toInternalBalance:o}){const i=Sa.from(e.poolType);if(!i||!i.exit.buildRecoveryExit)throw`buildRecoveryExit for poolType ${e.poolType} not implemented`;return i.exit.buildRecoveryExit({exiter:n,pool:e,bptIn:t,slippage:a,toInternalBalance:!!o})}async generalisedJoin(e,t,n,a,o,i,s,r){return this.joinService.joinPool(e,t,n,a,o,i,s,r)}async generalisedExit(e,t,n,a,o,i,s,r){return this.exitService.buildExitCall(e,t,n,a,o,i,s,r)}calcPriceImpact({pool:e,tokenAmounts:t,bptAmount:n,isJoin:a}){return Sa.from(e.poolType).priceImpactCalculator.calcPriceImpact(e,t.map(BigInt),BigInt(n),a)}async getExitInfo(e,t,n,a){return this.exitService.getExitInfo(e,t,n,a)}async fees(e){return this.feesService.last24h(e)}async volume(e){return this.volumeService.last24h(e)}async find(e){const t=await this.dataSource().find(e);if(t)return ar.wrap(t,this.networkConfig)}async findBy(e,t){if("id"==e)return this.find(t);if("address"==e){const e=await this.dataSource().findBy("address",t);if(!e)return;return ar.wrap(e,this.networkConfig)}throw`search by ${e} not implemented`}async all(){const e=await this.dataSource().all();return e?e.map((e=>ar.wrap(e,this.networkConfig))).filter((e=>e)):[]}async where(e){const t=await this.dataSource().where(e);if(!t)return[];return t.map((e=>ar.wrap(e,this.networkConfig))).filter((e=>e))}}var or="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},ir={exports:{}};!function(e){!function(){var t="input is invalid type",n="object"==typeof window,a=n?window:{};a.JS_SHA3_NO_WINDOW&&(n=!1);var o=!n&&"object"==typeof self;!a.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?a=or:o&&(a=self);var i=!a.JS_SHA3_NO_COMMON_JS&&e.exports,s=!a.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,r="0123456789abcdef".split(""),p=[4,1024,262144,67108864],l=[0,8,16,24],d=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],u=[224,256,384,512],c=[128,256],y=["hex","buffer","arrayBuffer","array","digest"],m={128:168,256:136};!a.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!s||!a.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var b=function(e,t,n){return function(a){return new B(e,t,e).update(a)[n]()}},f=function(e,t,n){return function(a,o){return new B(e,t,o).update(a)[n]()}},T=function(e,t,n){return function(t,a,o,i){return P["cshake"+e].update(t,a,o,i)[n]()}},h=function(e,t,n){return function(t,a,o,i){return P["kmac"+e].update(t,a,o,i)[n]()}},I=function(e,t,n,a){for(var o=0;o<y.length;++o){var i=y[o];e[i]=t(n,a,i)}return e},_=function(e,t){var n=b(e,t,"hex");return n.create=function(){return new B(e,t,e)},n.update=function(e){return n.create().update(e)},I(n,b,e,t)},g=[{name:"keccak",padding:[1,256,65536,16777216],bits:u,createMethod:_},{name:"sha3",padding:[6,1536,393216,100663296],bits:u,createMethod:_},{name:"shake",padding:[31,7936,2031616,520093696],bits:c,createMethod:function(e,t){var n=f(e,t,"hex");return n.create=function(n){return new B(e,t,n)},n.update=function(e,t){return n.create(t).update(e)},I(n,f,e,t)}},{name:"cshake",padding:p,bits:c,createMethod:function(e,t){var n=m[e],a=T(e,0,"hex");return a.create=function(a,o,i){return o||i?new B(e,t,a).bytepad([o,i],n):P["shake"+e].create(a)},a.update=function(e,t,n,o){return a.create(t,n,o).update(e)},I(a,T,e,t)}},{name:"kmac",padding:p,bits:c,createMethod:function(e,t){var n=m[e],a=h(e,0,"hex");return a.create=function(a,o,i){return new O(e,t,o).bytepad(["KMAC",i],n).bytepad([a],n)},a.update=function(e,t,n,o){return a.create(e,n,o).update(t)},I(a,h,e,t)}}],P={},w=[],x=0;x<g.length;++x)for(var E=g[x],A=E.bits,S=0;S<A.length;++S){var v=E.name+"_"+A[S];if(w.push(v),P[v]=E.createMethod(A[S],E.padding),"sha3"!==E.name){var k=E.name+A[S];w.push(k),P[k]=P[v]}}function B(e,t,n){this.blocks=[],this.s=[],this.padding=t,this.outputBits=n,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=n>>5,this.extraBytes=(31&n)>>3;for(var a=0;a<50;++a)this.s[a]=0}function O(e,t,n){B.call(this,e,t,n)}B.prototype.update=function(e){if(this.finalized)throw new Error("finalize already called");var n,a=typeof e;if("string"!==a){if("object"!==a)throw new Error(t);if(null===e)throw new Error(t);if(s&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||s&&ArrayBuffer.isView(e)))throw new Error(t);n=!0}for(var o,i,r=this.blocks,p=this.byteCount,d=e.length,u=this.blockCount,c=0,y=this.s;c<d;){if(this.reset)for(this.reset=!1,r[0]=this.block,o=1;o<u+1;++o)r[o]=0;if(n)for(o=this.start;c<d&&o<p;++c)r[o>>2]|=e[c]<<l[3&o++];else for(o=this.start;c<d&&o<p;++c)(i=e.charCodeAt(c))<128?r[o>>2]|=i<<l[3&o++]:i<2048?(r[o>>2]|=(192|i>>6)<<l[3&o++],r[o>>2]|=(128|63&i)<<l[3&o++]):i<55296||i>=57344?(r[o>>2]|=(224|i>>12)<<l[3&o++],r[o>>2]|=(128|i>>6&63)<<l[3&o++],r[o>>2]|=(128|63&i)<<l[3&o++]):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++c)),r[o>>2]|=(240|i>>18)<<l[3&o++],r[o>>2]|=(128|i>>12&63)<<l[3&o++],r[o>>2]|=(128|i>>6&63)<<l[3&o++],r[o>>2]|=(128|63&i)<<l[3&o++]);if(this.lastByteIndex=o,o>=p){for(this.start=o-p,this.block=r[u],o=0;o<u;++o)y[o]^=r[o];C(y),this.reset=!0}else this.start=o}return this},B.prototype.encode=function(e,t){var n=255&e,a=1,o=[n];for(n=255&(e>>=8);n>0;)o.unshift(n),n=255&(e>>=8),++a;return t?o.push(a):o.unshift(a),this.update(o),o.length},B.prototype.encodeString=function(e){var n,a=typeof e;if("string"!==a){if("object"!==a)throw new Error(t);if(null===e)throw new Error(t);if(s&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||s&&ArrayBuffer.isView(e)))throw new Error(t);n=!0}var o=0,i=e.length;if(n)o=i;else for(var r=0;r<e.length;++r){var p=e.charCodeAt(r);p<128?o+=1:p<2048?o+=2:p<55296||p>=57344?o+=3:(p=65536+((1023&p)<<10|1023&e.charCodeAt(++r)),o+=4)}return o+=this.encode(8*o),this.update(e),o},B.prototype.bytepad=function(e,t){for(var n=this.encode(t),a=0;a<e.length;++a)n+=this.encodeString(e[a]);var o=t-n%t,i=[];return i.length=o,this.update(i),this},B.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,n=this.blockCount,a=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[n],t=1;t<n+1;++t)e[t]=0;for(e[n-1]|=2147483648,t=0;t<n;++t)a[t]^=e[t];C(a)}},B.prototype.toString=B.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,n=this.s,a=this.outputBlocks,o=this.extraBytes,i=0,s=0,p="";s<a;){for(i=0;i<t&&s<a;++i,++s)e=n[i],p+=r[e>>4&15]+r[15&e]+r[e>>12&15]+r[e>>8&15]+r[e>>20&15]+r[e>>16&15]+r[e>>28&15]+r[e>>24&15];s%t==0&&(C(n),i=0)}return o&&(e=n[i],p+=r[e>>4&15]+r[15&e],o>1&&(p+=r[e>>12&15]+r[e>>8&15]),o>2&&(p+=r[e>>20&15]+r[e>>16&15])),p},B.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,n=this.s,a=this.outputBlocks,o=this.extraBytes,i=0,s=0,r=this.outputBits>>3;e=o?new ArrayBuffer(a+1<<2):new ArrayBuffer(r);for(var p=new Uint32Array(e);s<a;){for(i=0;i<t&&s<a;++i,++s)p[s]=n[i];s%t==0&&C(n)}return o&&(p[i]=n[i],e=e.slice(0,r)),e},B.prototype.buffer=B.prototype.arrayBuffer,B.prototype.digest=B.prototype.array=function(){this.finalize();for(var e,t,n=this.blockCount,a=this.s,o=this.outputBlocks,i=this.extraBytes,s=0,r=0,p=[];r<o;){for(s=0;s<n&&r<o;++s,++r)e=r<<2,t=a[s],p[e]=255&t,p[e+1]=t>>8&255,p[e+2]=t>>16&255,p[e+3]=t>>24&255;r%n==0&&C(a)}return i&&(e=r<<2,t=a[s],p[e]=255&t,i>1&&(p[e+1]=t>>8&255),i>2&&(p[e+2]=t>>16&255)),p},O.prototype=new B,O.prototype.finalize=function(){return this.encode(this.outputBits,!0),B.prototype.finalize.call(this)};var C=function(e){var t,n,a,o,i,s,r,p,l,u,c,y,m,b,f,T,h,I,_,g,P,w,x,E,A,S,v,k,B,O,C,M,F,R,N,D,L,U,q,V,G,W,$,K,H,J,j,X,Y,z,Z,Q,ee,te,ne,ae,oe,ie,se,re,pe,le,de;for(a=0;a<48;a+=2)o=e[0]^e[10]^e[20]^e[30]^e[40],i=e[1]^e[11]^e[21]^e[31]^e[41],s=e[2]^e[12]^e[22]^e[32]^e[42],r=e[3]^e[13]^e[23]^e[33]^e[43],p=e[4]^e[14]^e[24]^e[34]^e[44],l=e[5]^e[15]^e[25]^e[35]^e[45],u=e[6]^e[16]^e[26]^e[36]^e[46],c=e[7]^e[17]^e[27]^e[37]^e[47],t=(y=e[8]^e[18]^e[28]^e[38]^e[48])^(s<<1|r>>>31),n=(m=e[9]^e[19]^e[29]^e[39]^e[49])^(r<<1|s>>>31),e[0]^=t,e[1]^=n,e[10]^=t,e[11]^=n,e[20]^=t,e[21]^=n,e[30]^=t,e[31]^=n,e[40]^=t,e[41]^=n,t=o^(p<<1|l>>>31),n=i^(l<<1|p>>>31),e[2]^=t,e[3]^=n,e[12]^=t,e[13]^=n,e[22]^=t,e[23]^=n,e[32]^=t,e[33]^=n,e[42]^=t,e[43]^=n,t=s^(u<<1|c>>>31),n=r^(c<<1|u>>>31),e[4]^=t,e[5]^=n,e[14]^=t,e[15]^=n,e[24]^=t,e[25]^=n,e[34]^=t,e[35]^=n,e[44]^=t,e[45]^=n,t=p^(y<<1|m>>>31),n=l^(m<<1|y>>>31),e[6]^=t,e[7]^=n,e[16]^=t,e[17]^=n,e[26]^=t,e[27]^=n,e[36]^=t,e[37]^=n,e[46]^=t,e[47]^=n,t=u^(o<<1|i>>>31),n=c^(i<<1|o>>>31),e[8]^=t,e[9]^=n,e[18]^=t,e[19]^=n,e[28]^=t,e[29]^=n,e[38]^=t,e[39]^=n,e[48]^=t,e[49]^=n,b=e[0],f=e[1],J=e[11]<<4|e[10]>>>28,j=e[10]<<4|e[11]>>>28,k=e[20]<<3|e[21]>>>29,B=e[21]<<3|e[20]>>>29,re=e[31]<<9|e[30]>>>23,pe=e[30]<<9|e[31]>>>23,W=e[40]<<18|e[41]>>>14,$=e[41]<<18|e[40]>>>14,R=e[2]<<1|e[3]>>>31,N=e[3]<<1|e[2]>>>31,T=e[13]<<12|e[12]>>>20,h=e[12]<<12|e[13]>>>20,X=e[22]<<10|e[23]>>>22,Y=e[23]<<10|e[22]>>>22,O=e[33]<<13|e[32]>>>19,C=e[32]<<13|e[33]>>>19,le=e[42]<<2|e[43]>>>30,de=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,ne=e[4]<<30|e[5]>>>2,D=e[14]<<6|e[15]>>>26,L=e[15]<<6|e[14]>>>26,I=e[25]<<11|e[24]>>>21,_=e[24]<<11|e[25]>>>21,z=e[34]<<15|e[35]>>>17,Z=e[35]<<15|e[34]>>>17,M=e[45]<<29|e[44]>>>3,F=e[44]<<29|e[45]>>>3,E=e[6]<<28|e[7]>>>4,A=e[7]<<28|e[6]>>>4,ae=e[17]<<23|e[16]>>>9,oe=e[16]<<23|e[17]>>>9,U=e[26]<<25|e[27]>>>7,q=e[27]<<25|e[26]>>>7,g=e[36]<<21|e[37]>>>11,P=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,K=e[8]<<27|e[9]>>>5,H=e[9]<<27|e[8]>>>5,S=e[18]<<20|e[19]>>>12,v=e[19]<<20|e[18]>>>12,ie=e[29]<<7|e[28]>>>25,se=e[28]<<7|e[29]>>>25,V=e[38]<<8|e[39]>>>24,G=e[39]<<8|e[38]>>>24,w=e[48]<<14|e[49]>>>18,x=e[49]<<14|e[48]>>>18,e[0]=b^~T&I,e[1]=f^~h&_,e[10]=E^~S&k,e[11]=A^~v&B,e[20]=R^~D&U,e[21]=N^~L&q,e[30]=K^~J&X,e[31]=H^~j&Y,e[40]=te^~ae&ie,e[41]=ne^~oe&se,e[2]=T^~I&g,e[3]=h^~_&P,e[12]=S^~k&O,e[13]=v^~B&C,e[22]=D^~U&V,e[23]=L^~q&G,e[32]=J^~X&z,e[33]=j^~Y&Z,e[42]=ae^~ie&re,e[43]=oe^~se&pe,e[4]=I^~g&w,e[5]=_^~P&x,e[14]=k^~O&M,e[15]=B^~C&F,e[24]=U^~V&W,e[25]=q^~G&$,e[34]=X^~z&Q,e[35]=Y^~Z&ee,e[44]=ie^~re&le,e[45]=se^~pe&de,e[6]=g^~w&b,e[7]=P^~x&f,e[16]=O^~M&E,e[17]=C^~F&A,e[26]=V^~W&R,e[27]=G^~$&N,e[36]=z^~Q&K,e[37]=Z^~ee&H,e[46]=re^~le&te,e[47]=pe^~de&ne,e[8]=w^~b&T,e[9]=x^~f&h,e[18]=M^~E&S,e[19]=F^~A&v,e[28]=W^~R&D,e[29]=$^~N&L,e[38]=Q^~K&J,e[39]=ee^~H&j,e[48]=le^~te&ae,e[49]=de^~ne&oe,e[0]^=d[a],e[1]^=d[a+1]};if(i)e.exports=P;else for(x=0;x<w.length;++x)a[w[x]]=P[w[x]]}()}(ir);var sr=ir.exports;const rr=new RegExp("^bytes([0-9]+)$"),pr=new RegExp("^(u?int)([0-9]*)$"),lr=new RegExp("^(.*)\\[([0-9]*)\\]$"),dr=new Be("solidity/5.7.0");function ur(e,t,n){switch(e){case"address":return n?i.zeroPad(t,32):i.arrayify(t);case"string":return b.toUtf8Bytes(t);case"bytes":return i.arrayify(t);case"bool":return t=t?"0x01":"0x00",n?i.zeroPad(t,32):i.arrayify(t)}let o=e.match(pr);if(o){let s=parseInt(o[2]||"256");return(o[2]&&String(s)!==o[2]||s%8!=0||0===s||s>256)&&dr.throwArgumentError("invalid number type","type",e),n&&(s=256),t=a.BigNumber.from(t).toTwos(s),i.zeroPad(t,s/8)}if(o=e.match(rr),o){const a=parseInt(o[1]);return(String(a)!==o[1]||0===a||a>32)&&dr.throwArgumentError("invalid bytes type","type",e),i.arrayify(t).byteLength!==a&&dr.throwArgumentError(`invalid value for ${e}`,"value",t),n?i.arrayify((t+"0000000000000000000000000000000000000000000000000000000000000000").substring(0,66)):t}if(o=e.match(lr),o&&Array.isArray(t)){const n=o[1];parseInt(o[2]||String(t.length))!=t.length&&dr.throwArgumentError(`invalid array length for ${e}`,"value",t);const a=[];return t.forEach((function(e){a.push(ur(n,e,!0))})),i.concat(a)}return dr.throwArgumentError("invalid type","type",e)}function cr(e,t){e.length!=t.length&&dr.throwArgumentError("wrong number of values; expected ${ types.length }","values",t);const n=[];return e.forEach((function(e,a){n.push(ur(e,t[a]))})),i.hexlify(i.concat(n))}function yr(e,t){return n=cr(e,t),"0x"+sr.keccak_256(i.arrayify(n));var n}const mr=b.formatBytes32String("PROTOCOL_SWAP_FEE_PERC"),br=b.formatBytes32String("E-CLP"),fr=yr(["bytes"],[t.defaultAbiCoder.encode(["bytes32","bytes32"],[mr,br])]);class Tr{constructor(e,t,n){this.gyroConfigAddress=e,this.multicall=t,this.gyroConfigInterface=Yt.createInterface(),this.gyroConfig=Yt.connect(e,n)}async getGyroProtocolFee(e){let n;const o=yr(["bytes"],[t.defaultAbiCoder.encode(["bytes32","uint256"],[mr,e])]),i=[{target:this.gyroConfigAddress,callData:this.gyroConfigInterface.encodeFunctionData("hasKey",[o])},{target:this.gyroConfigAddress,callData:this.gyroConfigInterface.encodeFunctionData("hasKey",[fr])},{target:this.gyroConfigAddress,callData:this.gyroConfigInterface.encodeFunctionData("hasKey",[mr])}],[,[s,r,p]]=await this.multicall.callStatic.aggregate(i),l=a.BigNumber.from(s).eq(1),d=a.BigNumber.from(r).eq(1),u=a.BigNumber.from(p).eq(1);return n=l?parseFloat(a.formatFixed(await this.gyroConfig.getUint(o),18)):d?parseFloat(a.formatFixed(await this.gyroConfig.getUint(fr),18)):u?parseFloat(a.formatFixed(await this.gyroConfig.getUint(mr),18)):0,n}}const hr=new t.Interface(["function gauge_relative_weight(address gauge, uint timestamp) view returns (uint)"]),Ir=new t.Interface(["function gauge_relative_weight(address gauge) view returns (uint)"]);class _r{constructor(e,t,n){this.multicall=e,this.gaugeControllerAddress=t,this.gaugeControllerCheckpointerAddress=n}async getRelativeWeights(e,t){const n=e.map((e=>this.gaugeControllerCheckpointerAddress&&!t?{target:this.gaugeControllerCheckpointerAddress,callData:Ir.encodeFunctionData("gauge_relative_weight",[o.getAddress(e)])}:{target:this.gaugeControllerAddress,callData:hr.encodeFunctionData("gauge_relative_weight",[o.getAddress(e),t||Math.floor(Date.now()/1e3)])})),[,a]=await this.multicall.callStatic.aggregate(n);return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(Me(a[n],18))),e)),{})}}class gr{async get(e){const t=await this.query(e);return(null==t?void 0:t.length)>0?t[0]:void 0}async find(e){return this.get({where:{id:e}})}async findBy(e,t){return this.get({where:{[String(e)]:t}})}async findAllBy(e,t,n=1e3,a=0){const o={where:{[String(e)]:t},first:n,skip:a};return this.query(o)}}class Pr extends gr{constructor(e,t,n){super(),this.chainId=t,this.blockHeight=n,this.client=_i(e)}}class wr extends gr{constructor(e,t,n){super(),this.chainId=t,this.blockHeight=n,this.client=gi(e)}}class xr extends wr{async query(e){e.orderBy||(e.orderBy=Xo.balance),e.orderDirection||(e.orderDirection=ni.desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{gaugeShares:t}=await this.client.GaugeShares(e);return t.map(this.mapType)}mapType(e){var t;return{id:e.id,balance:e.balance,userAddress:null===(t=e.user)||void 0===t?void 0:t.id,gauge:{id:e.gauge.id,poolId:e.gauge.poolId||void 0,isKilled:e.gauge.isKilled,totalSupply:e.gauge.totalSupply}}}async findByUser(t,n,a){return this.findAllBy(e.GaugeShareAttributes.UserAddress,t,n,a)}async findByGauge(t,n,a){return this.findAllBy(e.GaugeShareAttributes.GaugeId,t,n,a)}}const Er=new t.Interface(["function totalSupply() view returns (uint)","function working_supply() view returns (uint)","function reward_count() view returns (uint)","function reward_tokens(uint rewardIndex) view returns (address)","function reward_data(address rewardToken) view returns (tuple(address token, address distributor, uint period_finish, uint rate, uint last_update, uint integral) data)"]),Ar=new t.Interface(["function inflation_rate(uint currentWeekTimestamp) view returns (uint)"]);class Sr{constructor(e,t){this.multicall=e,this.chainId=t}async getTotalSupplies(e){const t=e.map((e=>({target:e,callData:Er.encodeFunctionData("totalSupply",[])}))),[,n]=await this.multicall.callStatic.aggregate(t),a=n.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(Me(a[n],18))),e)),{})}async getWorkingSupplies(e){const t=e.map((e=>({target:e,callData:Er.encodeFunctionData("working_supply",[])}))),[,n]=await this.multicall.callStatic.aggregate(t),a=n.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(Me(a[n],18))),e)),{})}async getInflationRates(e){const t=Math.floor(Date.now()/1e3/604800),n=e.map((e=>({target:e,callData:Ar.encodeFunctionData("inflation_rate",[t])}))),[,a]=await this.multicall.callStatic.aggregate(n),o=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(Me(o[n],18))),e)),{})}async getRewardCounts(e){let t;if(1==this.chainId){const n=e.map((e=>({target:e,callData:Er.encodeFunctionData("reward_count",[])}))),[,a]=await this.multicall.callStatic.aggregate(n),o=a.map((e=>"0x"==e?"0x0":e));t=e.reduce(((e,t,n)=>(e[t]||(e[t]=parseInt(o[n])),e)),{})}else t=e.reduce(((e,t)=>(e[t]||(e[t]=1),e)),{});return t}async getRewardTokens(e,t){const n=t||await this.getRewardCounts(e),a=e.filter((e=>n[e]>0)),o=[0],i=a.map(((e,t)=>{const a=[];for(let t=0;t<n[e];t++)a.push({target:e,callData:Er.encodeFunctionData("reward_tokens",[t])});return o[t+1]=o[t]+n[e],a})).flat(),[,s]=await this.multicall.callStatic.aggregate(i);return a.reduce(((e,t,n)=>{const a=o[n],i=o[n+1],r=[];for(let e=a;e<i;e++)r.push(Er.decodeFunctionResult("reward_tokens",s[e])[0]);return e[t]||(e[t]=r),e}),{})}async getRewardData(e,t){const n=t||await this.getRewardTokens(e),a=[0],o=Object.keys(n).map(((e,t)=>{const o=[];for(let t=0;t<n[e].length;t++)o.push({target:e,callData:Er.encodeFunctionData("reward_data",[n[e][t]])});return a[t+1]=a[t]+n[e].length,o})).flat(),[,i]=await this.multicall.callStatic.aggregate(o),s=i.map((e=>Er.decodeFunctionResult("reward_data",e)[0]));return Object.keys(n).reduce(((e,t,o)=>{const i=a[o],r=n[t].reduce(((e,t,n)=>(e[t]||(e[t]=s[i+n]),e)),{});return e[t]||(e[t]=r),e}),{})}}class vr{constructor(e){this.gauges=[],this.client=gi(e)}async fetch(){const e=(await this.client.Pools({first:1e3,where:{preferentialGauge_not:null}})).pools.map((e=>e.preferentialGauge));return this.gauges=e,this.gauges}async find(e){return 0==this.gauges.length&&await this.fetch(),this.gauges.find((t=>t.id==e))}async findBy(e,t){if(0==this.gauges.length&&await this.fetch(),"id"==e)return this.find(t);if("poolId"==e)return this.gauges.find((e=>e.poolId==t));if("poolAddress"==e)return this.gauges.find((e=>e.poolAddress==t));throw`search by ${e} not implemented`}}class kr{constructor(e,t,n,a,o){this.chainId=a,this.workingSupplies={},this.relativeWeights={},this.inflationRates={},this.rewardData={},n&&(this.gaugeController=new _r(t,n,o)),this.multicall=new Sr(t,a),this.subgraph=new vr(e)}async fetch(){const e=await this.subgraph.fetch(),t=e.map((e=>e.id));if(1==this.chainId)this.workingSupplies=await this.multicall.getWorkingSupplies(t);else{const t=["0x3b8ca519122cdd8efb272b0d3085453404b25bd0","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2","0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647","0x809b79b53f18e9bc08a961ed4678b901ac93213a"],n=e.filter((e=>!t.includes(e.factory.id.toLowerCase()))).map((e=>e.id));n.length>0&&(this.inflationRates=await this.multicall.getInflationRates(n),this.workingSupplies=await this.multicall.getWorkingSupplies(n))}return this.gaugeController&&(this.relativeWeights=await this.gaugeController.getRelativeWeights(t)),this.rewardData=e.reduce(((e,t)=>{var n;return e[n=t.id]||(e[n]=t.tokens?Object.fromEntries(t.tokens.map((e=>[e.id.split("-")[0],{distributor:"",last_update:a.BigNumber.from(0),integral:a.BigNumber.from(0),token:e.id.split("-")[0],decimals:e.decimals,rate:Fe(e.rate||"0",e.decimals),period_finish:a.BigNumber.from(e.periodFinish||"0")}]))):{}),e}),{}),e.map(this.compose.bind(this))}async find(e){return this.gauges||(this.gauges=this.fetch()),(await this.gauges).find((t=>t.id==e))}async findBy(e,t){let n;if(this.gauges||(this.gauges=this.fetch()),"id"==e)return this.find(t);if("address"==e)return this.find(t);if("poolId"==e)n=(await this.gauges).find((e=>e.poolId==t));else{if("poolAddress"!=e)throw`search by ${e} not implemented`;n=(await this.gauges).find((e=>e.poolAddress==t))}return n}compose(e){return{id:e.id,address:e.id,name:e.symbol,poolId:e.poolId,poolAddress:e.poolAddress,totalSupply:parseFloat(e.totalSupply),workingSupply:this.workingSupplies[e.id],relativeWeight:this.relativeWeights[e.id],rewardTokens:this.rewardData[e.id],balInflationRate:this.inflationRates[e.id]}}}class Br{constructor(e,t){this.url=e,this.apiKey=t}async get(e){try{const t=this.toPayload(e),{data:n}=await S.default.post(this.url,t,{headers:{"x-api-key":this.apiKey}});if(n.errors)throw new Error(n.errors.map((e=>e.message)).join(","));return n.data}catch(e){throw console.error(e),e}return[]}toPayload(e){return JSON.stringify({query:f.jsonToGraphQLQuery({query:e})})}}function Or(e){return new Promise((t=>setTimeout(t,e)))}const Cr=(e,t)=>{var n,a,o,i,s,r,p,l,d,u,c;return{id:e.id,name:e.name||"",address:e.address,chainId:t,poolType:e.poolType,poolTypeVersion:e.poolTypeVersion||1,swapFee:e.swapFee,swapEnabled:e.swapEnabled,protocolYieldFeeCache:e.protocolYieldFeeCache||"0.5",protocolSwapFeeCache:e.protocolSwapFeeCache||"0.5",amp:null!==(n=e.amp)&&void 0!==n?n:void 0,owner:null!==(a=e.owner)&&void 0!==a?a:void 0,factory:null!==(o=e.factory)&&void 0!==o?o:void 0,symbol:null!==(i=e.symbol)&&void 0!==i?i:void 0,tokens:(e.tokens||[]).map(Mr),tokensList:e.tokensList,tokenAddresses:(e.tokens||[]).map((e=>e.address)),totalLiquidity:e.totalLiquidity,totalShares:e.totalShares,totalSwapFee:e.totalSwapFee,totalSwapVolume:e.totalSwapVolume,priceRateProviders:null!==(s=e.priceRateProviders)&&void 0!==s?s:void 0,createTime:e.createTime,mainIndex:null!==(r=e.mainIndex)&&void 0!==r?r:void 0,wrappedIndex:null!==(p=e.wrappedIndex)&&void 0!==p?p:void 0,totalWeight:e.totalWeight||"1",lowerTarget:null!==(l=e.lowerTarget)&&void 0!==l?l:"0",upperTarget:null!==(d=e.upperTarget)&&void 0!==d?d:"0",isInRecoveryMode:null!==(u=e.isInRecoveryMode)&&void 0!==u&&u,isPaused:null!==(c=e.isPaused)&&void 0!==c&&c}},Mr=e=>{const t=Fr(e.token);return{...e,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||!1,token:t}},Fr=e=>{let t=null;return e.pool&&(t={id:e.pool.id,address:e.pool.address,totalShares:e.pool.totalShares,poolType:e.pool.poolType,mainIndex:e.pool.mainIndex||0},(null==e?void 0:e.pool.tokens)&&(t.tokens=e.pool.tokens.map(Rr))),{pool:t,latestUSDPrice:e.latestUSDPrice||void 0}},Rr=e=>({address:e.address,decimals:e.decimals,symbol:e.symbol,balance:e.balance,priceRate:e.priceRate,weight:e.weight,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||void 0,token:e.token?Fr(e.token):void 0});class Nr{constructor(e){var t,n;this.skip=0,this.client=_i(e.url),this.blockHeight=e.blockHeight,this.chainId=e.chainId;const a={orderBy:no.TotalLiquidity,orderDirection:Ya.Desc,where:{totalShares:{gt:1e-12}}};this.isCustomQuery=!!e.query;const o=Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||a),i=Object.assign({},(null===(n=e.query)||void 0===n?void 0:n.attrs)||{});this.query={args:o,attrs:i}}async fetchAllPools(){const e=z.getInstance();e.time("fetching pools"),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()});const t=new st(this.query.args).format(new it),{pool0:n,pool1000:a,pool2000:o}=await this.client.AllPools(t);return e.timeEnd("fetching pools"),[...n,...a,...o].map((e=>Cr(e,this.chainId)))}async fetch(e){const t=z.getInstance();t.time("fetching pools"),(null==e?void 0:e.skip)&&(this.query.args.skip=e.skip),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()}),this.query.args.first=(null==e?void 0:e.first)||this.query.args.first||1e3;const n=new st(this.query.args).format(new it),{pools:a}=await this.client.Pools(n);return this.skip=((null==e?void 0:e.skip)||0)+a.length,t.timeEnd("fetching pools"),a.map((e=>Cr(e,this.chainId)))}async find(e,t=!1){if(this.isCustomQuery)return await this.findBy("id",e);if(!t&&this.pools){const t=(await this.pools).find((t=>t.id===e));if(t)return t}const n=z.getInstance();n.time(`fetching pool ${e}`);const a=await this.client.Pool({id:e});if(n.timeEnd(`fetching pool ${e}`),!a.pool)return;const o=Cr(a.pool,this.chainId);n.time("updating cache");const i=await this.pools;if(i){const e=i.findIndex((e=>e.address===o.address));this.pools=-1!==e?Promise.resolve([...i.splice(e,1),o]):Promise.resolve([...i,o])}else this.pools=Promise.resolve([o]);return n.timeEnd("updating cache"),o}async findBy(e,t){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).find((n=>n[e]==t))}async all(){return this.pools||(this.pools=this.fetchAllPools()),this.pools}async block(){return this.blockHeight?{number:await this.blockHeight()}:void 0}async where(e){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).filter(e)}}class Dr{constructor(e,t,n,a){this.poolsSubgraph=e,this.poolsToIgnore=n,this.batchSize=a,this.skip=0,this.provider=t.provider,this.multicall=t.multicall,this.vault=t.vault}filterPools(e){return e.filter((e=>{if(!1===e.swapEnabled)return!1;if(!this.poolsToIgnore)return!0;return-1===this.poolsToIgnore.findIndex((t=>t.toLowerCase()===e.id.toLowerCase()))}))}async fetchDefault(){const e=await this.poolsSubgraph.all(),t=this.filterPools(e),n=z.getInstance();n.time(`fetching onchain ${t.length} pools`);const a=await ki(t,this.multicall,this.vault,this.provider,this.batchSize);return n.timeEnd(`fetching onchain ${t.length} pools`),a}async fetch(e){const t=await this.poolsSubgraph.fetch(e),n=this.filterPools(t),a=z.getInstance();a.time(`fetching onchain ${n.length} pools`);const o=await ki(n,this.multicall,this.vault,this.provider,this.batchSize);return a.timeEnd(`fetching onchain ${n.length} pools`),o}async find(e,t=!1){return await this.findBy("id",e,t)}async findBy(e,t,n=!1){return this.pools&&!n||(this.pools=this.fetchDefault()),(await this.pools).find((n=>n[e]==t))}async all(){return this.pools||(this.pools=this.fetchDefault()),this.pools}async where(e){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).filter(e)}async refresh(e){const t=await ki([e],this.multicall,this.vault,this.provider);if(this.pools){const n=(await this.pools).findIndex((t=>t.address===e.address));-1!==n&&(this.pools=Promise.resolve([...(await this.pools).splice(n,1),t[0]]))}return t[0]}}class Lr extends wr{async query(e){!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{pools:t}=await this.client.PoolGauges(e);return t.map(this.mapType)}mapType(e){return e}}var Ur;e.PoolJoinExitAttributes=void 0,(Ur=e.PoolJoinExitAttributes||(e.PoolJoinExitAttributes={})).Pool="pool",Ur.Sender="sender";class qr extends Pr{async query(e){e.orderBy||(e.orderBy=Ha.Timestamp),e.orderDirection||(e.orderDirection=Ya.Asc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{joinExits:t}=await this.client.JoinExits(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.user.id,poolId:e.pool.id,timestamp:e.timestamp,type:e.type,amounts:e.amounts,tokens:e.pool.tokensList}}async findByUser(t,n,a){return this.findAllBy(e.PoolJoinExitAttributes.Sender,t,n,a)}async findJoins(e,t){return this.query({where:{sender:e,pool:t,type:"Join"}})}async findExits(e,t){return this.query({where:{sender:e,pool:t,type:"Exit"}})}async findByPool(t,n,a){return this.findAllBy(e.PoolJoinExitAttributes.Pool,t,n,a)}}class Vr extends Pr{async query(e){e.orderBy||(e.orderBy=Qa.Balance),e.orderDirection||(e.orderDirection=Ya.Desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{poolShares:t}=await this.client.PoolShares(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.userAddress.id,poolId:e.poolId.id,balance:e.balance}}async findByUser(t,n,a){return this.findAllBy(e.PoolShareAttributes.UserAddress,t,n,a)}async findByPool(t,n,a){return this.findAllBy(e.PoolShareAttributes.PoolId,t,n,a)}}class Gr{constructor(e){this.tokens=e}async find(e){return this.tokens.find((t=>t.address.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.tokens.find((n=>n[e]===t))}}class Wr{constructor(e,t=1,n){var a;this.chainId=t,this.prices={},this.baseTokenAddresses=e.map(Ue),this.url=`${Ni(null==n?void 0:n.isDemoApiKey)}simple/token_price/${this.platform(t)}?vs_currencies=usd,eth`,this.urlNative=`${Ni(null==n?void 0:n.isDemoApiKey)}simple/price/?vs_currencies=eth,usd&ids=`,this.coingeckoApiKeyHeaderName=Di(null==n?void 0:n.isDemoApiKey),this.apiKey=null==n?void 0:n.coingeckoApiKey,this.debouncer=new We(this.fetch.bind(this),200,null!==(a=null==n?void 0:n.tokensPerPriceRequest)&&void 0!==a?a:10)}async fetch(e,{signal:t}={}){var n,a,o;try{const{data:a}=await S.default.get(`${this.url}&contract_addresses=${e.join(",")}`,{signal:t,headers:{[this.coingeckoApiKeyHeaderName]:null!==(n=this.apiKey)&&void 0!==n?n:""}});return a}catch(e){const t=["Error fetching token prices from coingecko"];return e.isAxiosError?void 0!==(null===(a=e.response)||void 0===a?void 0:a.status)&&t.push(`with status ${null===(o=e.response)||void 0===o?void 0:o.status}`):t.push(e),Promise.reject(t.join(" "))}}fetchNative({signal:e}={}){var t;let n;!function(e){e.ETH="ethereum",e.MATIC="matic-network",e.XDAI="xdai"}(n||(n={}));let a=n.ETH;return 137===this.chainId&&(a=n.MATIC),100===this.chainId&&(a=n.XDAI),S.default.get(`${this.urlNative}${a}`,{signal:e,headers:{[this.coingeckoApiKeyHeaderName]:null!==(t=this.apiKey)&&void 0!==t?t:""}}).then((({data:e})=>e[a])).catch((e=>{var t;const n=["Error fetching native token from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&n.push(`with status ${e.response.status}`):n.push(e),Promise.reject(n.join(" "))})).finally((()=>{}))}find(e){const t=Ue(e,this.chainId);if(!this.prices[t]){if(0===Object.keys(this.prices).length)for(const e of this.baseTokenAddresses)this.prices[e]=this.debouncer.fetch(e).then((t=>t[e]));if(t===_e(this.chainId).Addresses.nativeAsset.toLowerCase())return this.nativePrice||(this.prices[t]=this.fetchNative()),this.prices[t];this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))}return this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 100:return"xdai";case 137:return"polygon-pos";case 250:return"fantom";case 1101:return"polygon-zkevm";case 8453:return"base";case 42161:return"arbitrum-one";case 43114:return"avalanche"}return"2"}}class $r{constructor(e=1,t){this.chainId=e,this.prices={},this.urlBase=`${Ni(null==t?void 0:t.isDemoApiKey)}coins/${this.platform(e)}/contract/%TOKEN_ADDRESS%/market_chart/range?vs_currency=usd`,this.apiKey=null==t?void 0:t.coingeckoApiKey,this.coingeckoApiKeyHeaderName=Di(null==t?void 0:t.isDemoApiKey)}async fetch(e,t,{signal:n}={}){var a,o;const i=this.urlRange(e,t);try{const{data:e}=await S.default.get(i,{signal:n,headers:{[this.coingeckoApiKeyHeaderName]:null!==(a=this.apiKey)&&void 0!==a?a:""}});return e}catch(e){if(e.isAxiosError)throw new Error("Error fetching historical token prices from coingecko - "+e.message+" - "+(null===(o=e.response)||void 0===o?void 0:o.statusText));throw new Error("Unknown Error: "+e)}}async find(e){throw"Historic price requires point-in-time timestamp, please use findBy(address, timestamp)"}async findBy(e,t){const n=Ue(e,this.chainId);return{usd:`${(await this.fetch(n,t)).prices[0][1]}`}}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one";case 100:return"xdai"}return"2"}urlRange(e,t){const n=t-3600,a=t+3600;return`${this.urlBase.replace("%TOKEN_ADDRESS%",e)}&from=${n}&to=${a}`}}class Kr{constructor(e,t=1){this.subgraphUrl=e,this.chainId=t,this.prices={},this.debouncer=new We(this.fetch.bind(this),200)}async fetch(e,{signal:t}={}){return e.length,S.default.post(this.subgraphUrl,{variables:{addresses:e},query:"query($addresses: [String!]) {\n            tokens(\n              where: {\n                id_in: $addresses\n              }\n            ) {\n              address\n              latestUSDPrice\n            }\n          }"},{signal:t}).then((e=>e.data.data)).then((({tokens:e})=>Object.fromEntries(e.map((e=>[e.address,{usd:e.latestUSDPrice||void 0}]))))).finally((()=>{e.length}))}async find(e){const t=Ue(e,this.chainId);return this.prices[t]||(this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))),this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}}class Hr{constructor(e,t,n){this.coingeckoRepository=e,this.subgraphRepository=t,this.aaveRates=n}async find(e){let t;try{if(t=await this.coingeckoRepository.find(e),!(null==t?void 0:t.usd))throw new Error("Price not found")}catch(n){z.getInstance().warn(n),t=await this.subgraphRepository.find(e)}const n=await this.aaveRates.getRate(e)||1;return t&&t.usd?{...t,usd:(parseFloat(t.usd)*n).toString()}:t}async findBy(e,t){if("address"===e)return this.find(t);throw`Token price search by ${e} not implemented`}}class Jr{constructor(e,t){this.coingeckoRepository=e,this.aaveRates=t}async find(e){return this.findBy(e,Math.floor(Date.now()/1e3))}async findBy(e,t){const n=await this.coingeckoRepository.findBy(e,t),a=await this.aaveRates.getRate(e)||1;return n&&n.usd?{...n,usd:(parseFloat(n.usd)*a).toString()}:n}}const jr=["function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"],Xr=new t.Interface(["function getTokensDistributedInWeek(address token, uint timestamp) view returns (uint)","function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"]),Yr=new t.Interface(["function totalSupply() view returns (uint)"]);class zr{constructor(e,t,n,a,o,i){this.multicall=e,this.feeDistributorAddress=t,this.balAddress=n,this.veBalAddress=a,this.bbAUsdAddress=o,this.feeDistributor=((e,t)=>new m.Contract(e,jr,t))(t,i)}async fetch(e){const t=this.getPreviousWeek(e),n=[{target:this.feeDistributorAddress,callData:Xr.encodeFunctionData("getTokensDistributedInWeek",[o.getAddress(this.balAddress),t])},{target:this.feeDistributorAddress,callData:Xr.encodeFunctionData("getTokensDistributedInWeek",[o.getAddress(this.bbAUsdAddress),t])},{target:this.veBalAddress,callData:Yr.encodeFunctionData("totalSupply",[])}],[,a]=await this.multicall.callStatic.aggregate(n);return{balAmount:parseFloat(Me(a[0],18)),bbAUsdAmount:parseFloat(Me(a[1],18)),veBalSupply:parseFloat(Me(a[2],18)),bbAUsdPrice:parseFloat("1.0"),balAddress:this.balAddress}}async multicallData(e){return this.data||(this.data=await this.fetch(e)),this.data}getPreviousWeek(e){const t=new Date(e);t.setUTCHours(0),t.setUTCMinutes(0),t.setUTCSeconds(0),t.setUTCMilliseconds(0);let n=t.getUTCDay()-4;return n<0&&(n+=7),n+=7,Math.floor(t.getTime()/1e3)-86400*n}async getClaimableBalances(e,t){try{const n=await this.feeDistributor.callStatic.claimTokens(e,t);return this.extractTokenBalance(t,n)}catch(e){return{}}}claimBalances(e,t){return Xr.encodeFunctionData("claimTokens",[e,t])}extractTokenBalance(e,t){return e.reduce(((e,n,o)=>{var i;return e[n]=null!==(i=t[o])&&void 0!==i?i:a.BigNumber.from(0),e}),{})}}const Zr=new t.Interface(["function getProtocolFeesCollector() view returns (address)"]),Qr=new t.Interface(["function getSwapFeePercentage() view returns (uint)"]);let ep;class tp{constructor(e,t){this.provider=t,this.vault=new m.Contract(e,Zr,this.provider)}async fetch(){const e=await this.vault.getProtocolFeesCollector(),t=new m.Contract(e,Qr,this.provider),n=await t.getSwapFeePercentage();return parseFloat(Me(n,18))}async find(){return ep||(ep=this.fetch()),this.swapFeePercentage=await ep,this.swapFeePercentage}async findBy(){return this.find()}}const np=new t.Interface(["function getSwapFeePercentage() view returns (uint)"]);let ap;class op{constructor(e,t){this.multicall=e,this.protocolFeePercentagesProviderAddress=t}async fetch(){const e=[{target:this.protocolFeePercentagesProviderAddress,callData:np.encodeFunctionData("getFeeTypePercentage",[0])},{target:this.protocolFeePercentagesProviderAddress,callData:np.encodeFunctionData("getFeeTypePercentage",[2])}],[,t]=await this.multicall.callStatic.aggregate(e);return{swapFee:parseFloat(Me(t[0],18)),yieldFee:parseFloat(Me(t[2],18))}}async getFees(){return ap||(ap=this.fetch()),this.protocolFees=await ap,this.protocolFees}}class ip{constructor(e="https://yield-tokens.balancer.workers.dev/"){this.url=e}async fetch(){let e={};try{e=(await S.default.get(this.url)).data}catch(e){z.getInstance().warn(`Failed to fetch yield tokens: ${e}`)}return e}async find(e){const t=e.toLocaleLowerCase();return this.yields||(this.yields=this.fetch()),this.yields.then((e=>e[t]&&e[t]>0?e[t]:0))}async findBy(e,t){return"address"!=e?0:this.find(t)}}const sp=e=>`{\n  blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: ${e} }) {\n    number\n  }\n}`,rp=async(e,t)=>{const n={query:sp(t)},a=await S.default.post(e,n),{data:{blocks:o}}=a.data;return parseInt(o[0].number)};class pp{constructor(e){this.endpoint=e,this.blocks={}}async find(e){if("dayAgo"==e){const e=""+(Math.floor(Date.now()/1e3)-86400);return this.blocks[e]||(this.blocks={...this.blocks,[e]:rp(this.endpoint,e)}),this.blocks[e]}}async findBy(e="",t=""){}}var lp=[{chainId:1,address:"0x8888801af4d980682e47f1a9036e589479e835c5",symbol:"mph"},{chainId:1,address:"0x27054b13b1b798b345b591a4d22e6562d47ea75a",symbol:"ast"},{chainId:1,address:"0x3301ee63fb29f863f2333bd4466acb46cd8323e6",symbol:"akita"},{chainId:1,address:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",symbol:"aurabal"},{chainId:1,address:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",symbol:"aura"},{chainId:1,address:"0x3472a5a71965499acd81997a54bba8d852c6e53d",symbol:"badger"},{chainId:1,address:"0xba100000625a3754423978a60c9317c58a424e3d",symbol:"bal"},{chainId:1,address:"0x804cdb9116a10bb78768d3252355a1b18067bf8f",symbol:"bb-a-dai"},{chainId:1,address:"0x9210f1204b5a24742eba12f710636d76240df3d0",symbol:"bb-a-usdc"},{chainId:1,address:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c",symbol:"bb-a-usdt"},{chainId:1,address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",symbol:"bb-a-usd"},{chainId:1,address:"0x2d94aa3e47d9d5024503ca8491fce9a2fb4da198",symbol:"bank"},{chainId:1,address:"0x0d8775f648430679a709e98d2b0cb6250d2887ef",symbol:"bat"},{chainId:1,address:"0xf17e65822b568b3903685a7c9f496cf7656cc6c2",symbol:"bico"},{chainId:1,address:"0x799ebfabe77a6e34311eeee9825190b9ece32824",symbol:"btrst"},{chainId:1,address:"0x514910771af9ca656af840dff83e8264ecf986ca",symbol:"link"},{chainId:1,address:"0x3506424f91fd33084466f402d5d97f05f8e3b4af",symbol:"chz"},{chainId:1,address:"0x41e5560054824ea6b0732e656e3ad64e20e94e45",symbol:"cvc"},{chainId:1,address:"0xc00e94cb662c3520282e6f5717214004a7f26888",symbol:"comp"},{chainId:1,address:"0xdef1ca1fb7fbcdc777520aa7f396b4e015f497ab",symbol:"cow"},{chainId:1,address:"0xd533a949740bb3306d119cc777fa900ba034cd52",symbol:"crv"},{chainId:1,address:"0x6b175474e89094c44da98b954eedeac495271d0f",symbol:"dai"},{chainId:1,address:"0xf2051511b9b121394fa75b8f7d4e7424337af687",symbol:"haus"},{chainId:1,address:"0x888888435fde8e7d4c54cab67f206e4199454c60",symbol:"dfx"},{chainId:1,address:"0x798d1be841a82a273720ce31c822c61a67a601c3",symbol:"digg"},{chainId:1,address:"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",symbol:"enj"},{chainId:1,address:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",symbol:"ens"},{chainId:1,address:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",symbol:"ftm"},{chainId:1,address:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",symbol:"fei"},{chainId:1,address:"0xed1480d12be41d92f36f5f7bdd88212e381a3677",symbol:"fdt"},{chainId:1,address:"0x586aa273f262909eef8fa02d90ab65f5015e0516",symbol:"fiat"},{chainId:1,address:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",symbol:"gtc"},{chainId:1,address:"0x900db999074d9277c5da2a43f252d74366230da0",symbol:"giv"},{chainId:1,address:"0x6810e776880c02933d47db1b9fc05908e5386b96",symbol:"gno"},{chainId:1,address:"0xba485b556399123261a5f9c95d413b4f93107407",symbol:"graviaura"},{chainId:1,address:"0x3ec8798b81485a254928b70cda1cf0a2bb0b74d7",symbol:"gro"},{chainId:1,address:"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f",symbol:"snx"},{chainId:1,address:"0x5a98fcbea516cf06857215779fd812ca3bef1b32",symbol:"ldo"},{chainId:1,address:"0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d",symbol:"lqty"},{chainId:1,address:"0x5f98805a4e8be255a32880fdec7f6728c6568ba0",symbol:"lusd"},{chainId:1,address:"0x965d79f1a1016b574a62986e13ca8ab04dfdd15c",symbol:"m2"},{chainId:1,address:"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",symbol:"mkr"},{chainId:1,address:"0xd084944d3c05cd115c09d072b9f44ba3e0e45921",symbol:"fold"},{chainId:1,address:"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",symbol:"matic"},{chainId:1,address:"0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2",symbol:"mta"},{chainId:1,address:"0x4b13006980acb09645131b91d259eaa111eaf5ba",symbol:"myc"},{chainId:1,address:"0x333a4823466879eef910a04d473505da62142069",symbol:"nation"},{chainId:1,address:"0xcfeaead4947f0705a14ec42ac3d44129e1ef3ed5",symbol:"note"},{chainId:1,address:"0x967da4048cd07ab37855c090aaf366e4ce1b9f48",symbol:"ocean"},{chainId:1,address:"0x64aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d5",symbol:"ohm"},{chainId:1,address:"0xab846fb6c81370327e784ae7cbb6d6a6af6ff4bf",symbol:"pal"},{chainId:1,address:"0xcafe001067cdef266afb7eb5a286dcfd277f3de5",symbol:"psp"},{chainId:1,address:"0x68037790a0229e9ce6eaa8a99ea92964106c4703",symbol:"par"},{chainId:1,address:"0x45804880de22913dafe09f4980848ece6ecbaf78",symbol:"paxg"},{chainId:1,address:"0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed",symbol:"pnt"},{chainId:1,address:"0x9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",symbol:"poly"},{chainId:1,address:"0x43d4a3cd90ddd2f8f4f693170c9c8098163502ad",symbol:"d2d"},{chainId:1,address:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",symbol:"renbtc"},{chainId:1,address:"0x408e41876cccdc0f92210600ef50372656052a38",symbol:"ren"},{chainId:1,address:"0xfb5453340c03db5ade474b27e68b6a9c6b2823eb",symbol:"robot"},{chainId:1,address:"0xd33526068d116ce69f19a9ee46f0bd304f21a51f",symbol:"rpl"},{chainId:1,address:"0xae78736cd615f374d3085123a210448e74fc6393",symbol:"reth"},{chainId:1,address:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",symbol:"sbtc"},{chainId:1,address:"0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",symbol:"srm"},{chainId:1,address:"0x35e78b3982e87ecfd5b3f3265b601c046cdbe232",symbol:"xai"},{chainId:1,address:"0x3affcca64c2a6f4e3b6bd9c64cd2c969efd1ecbe",symbol:"dsla"},{chainId:1,address:"0xf24d8651578a55b0c119b9910759a351a3458895",symbol:"sdbal"},{chainId:1,address:"0x11c1a6b3ed6bb362954b29d3183cfa97a0c806aa",symbol:"str"},{chainId:1,address:"0x8f693ca8d21b157107184d29d398a8d082b38b76",symbol:"data"},{chainId:1,address:"0x470ebf5f030ed85fc1ed4c2d36b9dd02e77cf1b7",symbol:"temple"},{chainId:1,address:"0xa36fdbbae3c9d55a1d67ee5821d53b50b63a1ab9",symbol:"temp"},{chainId:1,address:"0xdac17f958d2ee523a2206206994597c13d831ec7",symbol:"usdt"},{chainId:1,address:"0x9c4a4204b79dd291d6b6571c5be8bbcd0622f050",symbol:"tcr"},{chainId:1,address:"0x226f7b842e0f0120b7e194d05432b3fd14773a9d",symbol:"unn"},{chainId:1,address:"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",symbol:"uni"},{chainId:1,address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",symbol:"usdc"},{chainId:1,address:"0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",symbol:"vita"},{chainId:1,address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",symbol:"weth"},{chainId:1,address:"0xedb171c18ce90b633db442f2a6f72874093b49ef",symbol:"wampl"},{chainId:1,address:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",symbol:"wbtc"},{chainId:1,address:"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817",symbol:"wncg"},{chainId:1,address:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",symbol:"wsteth"},{chainId:1,address:"0x79c71d3436f39ce382d0f58f1b011d88100b9d91",symbol:"xns"},{chainId:1,address:"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e",symbol:"yfi"},{chainId:1,address:"0xbcca60bb61934080951369a648fb03df4f96263c",symbol:"ausdc"},{chainId:1,address:"0x028171bca77440897b824ca71d1c56cac55b68a3",symbol:"adai"},{chainId:1,address:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",symbol:"ausdt"},{chainId:137,address:"0x9c2c5fd7b07e95ee044ddeba0e97a665f142394f",symbol:"1inch"},{chainId:137,address:"0xd6df932a45c0f255f85145f286ea0b292b21c90b",symbol:"aave"},{chainId:137,address:"0xc3fdbadc7c795ef1d6ba111e06ff8f16a20ea539",symbol:"addy"},{chainId:137,address:"0xf84bd51eab957c2e7b7d646a3427c5a50848281d",symbol:"agar"},{chainId:137,address:"0x033d942a6b495c4071083f4cde1f17e986fe856c",symbol:"aga"},{chainId:137,address:"0x0e9b89007eee9c958c0eda24ef70723c2c93dd58",symbol:"amaticc"},{chainId:137,address:"0x034b2090b579228482520c589dbd397c53fc51cc",symbol:"vision"},{chainId:137,address:"0x2c89bbc92bd86f8075d1decc58c7f4e0107f286b",symbol:"avax"},{chainId:137,address:"0x49690541e3f6e933a9aa3cffee6010a7bb5b72d7",symbol:"axiav3"},{chainId:137,address:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",symbol:"bal"},{chainId:137,address:"0xdb7cb471dd0b49b29cab4a1c14d070f27216a0ab",symbol:"bank"},{chainId:137,address:"0xfbdd194376de19a88118e84e279b977f165d01b8",symbol:"bifi"},{chainId:137,address:"0xd6ca869a4ec9ed2c7e618062cdc45306d8dbbc14",symbol:"btc2x-fli-p"},{chainId:137,address:"0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39",symbol:"link"},{chainId:137,address:"0x172370d5cd63279efa6d502dab29171933a610af",symbol:"crv"},{chainId:137,address:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",symbol:"dai"},{chainId:137,address:"0x1d607faa0a51518a7728580c238d912747e71f7a",symbol:"data"},{chainId:137,address:"0x85955046df4668e1dd369d2de9f3aeb98dd2a369",symbol:"dpi"},{chainId:137,address:"0xe7804d91dfcde7f776c90043e03eaa6df87e6395",symbol:"dfx"},{chainId:137,address:"0xf28164a485b0b2c90639e47b0f377b4a438a16b1",symbol:"dquick"},{chainId:137,address:"0x45c32fa6df82ead1e2ef74d17b76547eddfaff89",symbol:"frax"},{chainId:137,address:"0x50b728d8d964fd00c2d0aad81718b71311fef68a",symbol:"snx"},{chainId:137,address:"0x72928d5436ff65e57f72d5566dcd3baedc649a88",symbol:"hdao"},{chainId:137,address:"0x3ad707da309f3845cd602059901e39c4dcd66473",symbol:"eth2x-fli-p"},{chainId:137,address:"0x4f025829c4b13df652f38abd2ab901185ff1e609",symbol:"ieth-fli-p"},{chainId:137,address:"0x340f412860da7b7823df372a2b59ff78b7ae6abc",symbol:"imatic-fli-p"},{chainId:137,address:"0xf287d97b6345bad3d88856b26fb7c0ab3f2c7976",symbol:"matic2x-fli-p"},{chainId:137,address:"0x130ce4e4f76c2265f94a961d70618562de0bb8d2",symbol:"ibtc-fli-p"},{chainId:137,address:"0x596ebe76e2db4470966ea395b0d063ac6197a8c5",symbol:"jrt"},{chainId:137,address:"0x3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4",symbol:"stmatic"},{chainId:137,address:"0xf501dd45a1198c2e1b5aef5314a68b9006d842e0",symbol:"mta"},{chainId:137,address:"0xeaecc18198a475c921b24b8a6c1c1f0f5f3f7ea0",symbol:"seed"},{chainId:137,address:"0xfe712251173a2cd5f5be2b46bb528328ea3565e1",symbol:"mvi"},{chainId:137,address:"0xa3fa99a148fa48d14ed51d610c367c61876997f1",symbol:"mimatic"},{chainId:137,address:"0xa486c6bc102f409180ccb8a94ba045d39f8fc7cb",symbol:"nex"},{chainId:137,address:"0xe2aa7db6da1dae97c5f5c6914d285fbfcc32a128",symbol:"par"},{chainId:137,address:"0x580a84c73811e1839f75d86d75d88cca0c241ff4",symbol:"qi"},{chainId:137,address:"0x831753dd7087cac61ab5644b308642cc1c33dc13",symbol:"quick"},{chainId:137,address:"0xb5c064f955d8e7f38fe0460c556a72987494ee17",symbol:"quick"},{chainId:137,address:"0x00e5646f60ac6fb446f621d146b6e1886f002905",symbol:"rai"},{chainId:137,address:"0x431cd3c9ac9fc73644bf68bf5691f4b83f9e104f",symbol:"rbw"},{chainId:137,address:"0xdbf31df14b66535af65aac99c32e9ea844e14501",symbol:"renbtc"},{chainId:137,address:"0x501ace9c35e60f03a2af4d484f49f9b1efde9f40",symbol:"solace"},{chainId:137,address:"0xfa68fb4628dff1028cfec22b4162fccd0d45efb6",symbol:"maticx"},{chainId:137,address:"0x0b3f868e0be5597d5db7feb59e1cadbb0fdda50a",symbol:"sushi"},{chainId:137,address:"0xdf7837de1f2fa4631d716cf2502f8b230f1dcc32",symbol:"tel"},{chainId:137,address:"0xe6469ba6d2fd6130788e0ea9c0a0515900563b59",symbol:"ust"},{chainId:137,address:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",symbol:"usdt"},{chainId:137,address:"0x5fe2b58c013d7601147dcdd68c143a77499f5531",symbol:"grt"},{chainId:137,address:"0xbbba073c31bf03b8acf7c28ef0738decf3695683",symbol:"sand"},{chainId:137,address:"0x2934b36ca9a4b31e633c5be670c8c8b28b6aa015",symbol:"thx"},{chainId:137,address:"0x2f800db0fdb5223b3c3f354886d907a671414a7f",symbol:"bct"},{chainId:137,address:"0x2e1ad108ff1d8c782fcbbb89aad783ac49586756",symbol:"tusd"},{chainId:137,address:"0x3809dcdd5dde24b37abe64a5a339784c3323c44f",symbol:"swap"},{chainId:137,address:"0x7fbc10850cae055b27039af31bd258430e714c62",symbol:"ubt"},{chainId:137,address:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",symbol:"usdc"},{chainId:137,address:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",symbol:"weth"},{chainId:137,address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",symbol:"wmatic"},{chainId:137,address:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",symbol:"wbtc"},{chainId:137,address:"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57",symbol:"lunc"},{chainId:137,address:"0xf153eff70dc0bf3b085134928daeea248d9b30d0",symbol:"xmark"},{chainId:42161,address:"0x9f20de1fc9b161b34089cbeae888168b44b03461",symbol:"arbis"},{chainId:42161,address:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",symbol:"bal"},{chainId:42161,address:"0x031d35296154279dc1984dcd93e392b1f946737b",symbol:"cap"},{chainId:42161,address:"0xf97f4df75117a78c1a5a0dbb814af92458539fb4",symbol:"link"},{chainId:42161,address:"0x354a6da3fcde098f8389cad84b0182725c6c91de",symbol:"comp"},{chainId:42161,address:"0xf4d48ce3ee1ac3651998971541badbb9a14d7234",symbol:"cream"},{chainId:42161,address:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",symbol:"crv"},{chainId:42161,address:"0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",symbol:"dai"},{chainId:42161,address:"0x8038f3c971414fd1fc220ba727f2d4a0fc98cb65",symbol:"dht"},{chainId:42161,address:"0xf0b5ceefc89684889e5f7e0a7775bd100fcd3709",symbol:"dusd"},{chainId:42161,address:"0x6c2c06790b3e3e3c38e12ee22f8183b37a13ee55",symbol:"dpx"},{chainId:42161,address:"0x32eb7902d4134bf98a28b963d26de779af92a212",symbol:"rdpx"},{chainId:42161,address:"0xc3ae0333f0f34aa734d5493276223d95b8f9cb37",symbol:"dxd"},{chainId:42161,address:"0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",symbol:"gmx"},{chainId:42161,address:"0xa0b862f60edef4452f25b4160f177db44deb6cf1",symbol:"gno"},{chainId:42161,address:"0xb965029343d55189c25a7f3e0c9394dc0f5d41b1",symbol:"ndx"},{chainId:42161,address:"0x539bde0d7dbd336b79148aa742883198bbf60342",symbol:"magic"},{chainId:42161,address:"0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",symbol:"mcb"},{chainId:42161,address:"0x3f56e0c36d275367b8c502090edf38289b3dea0d",symbol:"mimatic"},{chainId:42161,address:"0x965772e0e9c84b6f359c8597c891108dcf1c5b1a",symbol:"pickle"},{chainId:42161,address:"0x6694340fc020c5e6b96567843da2df01b2ce1eb6",symbol:"stg"},{chainId:42161,address:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",symbol:"sushi"},{chainId:42161,address:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",symbol:"usdt"},{chainId:42161,address:"0x23a941036ae778ac51ab04cea08ed6e2fe103614",symbol:"grt"},{chainId:42161,address:"0xa72159fc390f0e3c6d415e658264c7c4051e9b87",symbol:"tcr"},{chainId:42161,address:"0x4d15a3a2286d883af0aa1b3f21367843fac63e07",symbol:"tusd"},{chainId:42161,address:"0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",symbol:"uni"},{chainId:42161,address:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",symbol:"usdc"},{chainId:42161,address:"0xa684cd057951541187f288294a1e1c2646aa2d24",symbol:"vsta"},{chainId:42161,address:"0x64343594ab9b56e99087bfa6f2335db24c2d1f17",symbol:"vst"},{chainId:42161,address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",symbol:"weth"},{chainId:42161,address:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",symbol:"wbtc"},{chainId:42161,address:"0x82e3a8f066a6989666b031d916c43672085b1582",symbol:"yfi"}];class dp{constructor(e,t,n,a,o){if(this.pools=new Nr({url:e.urls.subgraph,chainId:e.chainId,query:a}),this.poolsForSimulations=new Bi(_i(e.urls.subgraph),t,e,void 0,a),this.poolsOnChain=new Dr(this.pools,{provider:t,multicall:e.addresses.contracts.multicall,vault:e.addresses.contracts.vault},e.poolsToIgnore,e.multicallBatchSize),this.poolShares=new Vr(e.urls.subgraph,e.chainId),this.poolJoinExits=new qr(e.urls.subgraph,e.chainId),e.urls.gaugesSubgraph&&(this.poolGauges=new Lr(e.urls.gaugesSubgraph,e.chainId),this.gaugeShares=new xr(e.urls.gaugesSubgraph,e.chainId)),e.urls.blockNumberSubgraph){this.blockNumbers=new pp(e.urls.blockNumberSubgraph);const t=async()=>{if(this.blockNumbers)return await this.blockNumbers.find("dayAgo")};this.yesterdaysPools=new Nr({url:e.urls.subgraph,chainId:e.chainId,blockHeight:t,query:a})}else if(e.averageBlockTime){const n=async()=>await t.getBlockNumber()-Math.round(86400/(e.averageBlockTime||2));this.yesterdaysPools=new Nr({url:e.urls.subgraph,chainId:e.chainId,blockHeight:n,query:a})}const i=lp.filter((t=>t.chainId==e.chainId)).map((e=>e.address)),s=new Wr(i,e.chainId,o),r=new Kr(e.urls.subgraph,e.chainId),p=new Le(n.contracts.multicall,e.chainId);this.tokenPrices=new Hr(s,r,p);const l=new $r(e.chainId,o);this.tokenHistoricalPrices=new Jr(l,p),this.tokenMeta=new Gr([]),e.urls.gaugesSubgraph&&(this.liquidityGauges=new kr(e.urls.gaugesSubgraph,n.contracts.multicall,e.addresses.contracts.gaugeController||"",e.chainId,e.addresses.contracts.gaugeControllerCheckpointer)),e.addresses.contracts.feeDistributor&&e.addresses.tokens.bal&&e.addresses.tokens.veBal&&e.addresses.tokens.bbaUsd&&(this.feeDistributor=new zr(n.contracts.multicall,e.addresses.contracts.feeDistributor,e.addresses.tokens.bal,e.addresses.tokens.veBal,e.addresses.tokens.bbaUsd,t)),this.feeCollector=new tp(e.addresses.contracts.vault,t),e.addresses.contracts.protocolFeePercentagesProvider&&(this.protocolFees=new op(n.contracts.multicall,e.addresses.contracts.protocolFeePercentagesProvider)),this.tokenYields=new ip,e.addresses.contracts.gyroConfigProxy&&(this.gyroConfigRepository=new Tr(e.addresses.contracts.gyroConfigProxy,n.contracts.multicall,t))}}const up=(t,n)=>"Stable"===t?e.PoolKind.LEGACY_STABLE:"ComposableStable"===t&&1===n?e.PoolKind.COMPOSABLE_STABLE:"ComposableStable"===t?e.PoolKind.COMPOSABLE_STABLE_V2:e.PoolKind.WEIGHTED,cp=as.encodeSetRelayerApproval,yp=as.encodeGaugeWithdraw,mp=as.encodeGaugeDeposit,bp=as.encodePeekChainedReferenceValue,fp=Pt.createInterface(),Tp=(e,t)=>{var n;return(null===(n=e.poolType)||void 0===n?void 0:n.match(/.*Linear.*/))?hp(e,t):[]},hp=(e,t)=>{if(!(e.id&&t.id&&e.tokens&&t.tokens&&e.mainIndex&&t.mainIndex))throw"Missing tokens";const n=e.tokens[e.mainIndex];return[{poolId:e.id,assetIn:e.address,assetOut:n.address},{poolId:t.id,assetIn:n.address,assetOut:t.address}]},Ip=async(e,t)=>{const n=await t.find(e);if(!n)throw`Pool ${e} not found`;const a=async(e,n)=>{let o=[{address:e}];const i=await t.findBy("address",e);if(i&&e!=n){const t=i.tokens.sort(_p),n=await Promise.all(t.map((({address:e})=>a(e,i.address))));o=[{address:e,id:i.id,poolType:i.poolType,poolTypeVersion:i.poolTypeVersion,mainIndex:i.mainIndex,tokens:n.flat()}]}return o},o=n.tokens.sort(_p);return{id:e,address:n.address,tokens:(await Promise.all(o.map((({address:e})=>a(e,n.address))))).flat(),poolType:n.poolType,poolTypeVersion:n.poolTypeVersion,mainIndex:n.mainIndex}},_p=(e,t)=>e.address.toLowerCase()>t.address.toLowerCase()?1:-1,gp=(t,o,i,s,r,p,l=!1,d,u,c)=>{if(!(r.id&&p.id&&r.tokens&&p.tokens&&r.poolType&&p.poolType))throw"Pool data is missing";const y=r.tokens.flatMap((({address:e})=>e)),m=p.tokens.flatMap((({address:e})=>e)),b="ComposableStable"==r.poolType&&1==r.poolTypeVersion?0:-1;let f,T=[];b>-1?(f=[{index:b,key:as.toChainedReference(`10${b}`)}],T=[as.toChainedReference(`20${b}`)]):(f=y.map(((e,t)=>({index:t,key:as.toChainedReference(`10${t}`)}))),T=y.map(((e,t)=>as.toChainedReference(`20${t}`))));const h=as.toChainedReference("999"),I=[];let _=!1;"ComposableStable"===r.poolType&&(_=!0),c&&I.push(cp(o,!0,c)),d&&I.push(yp(d,t,o,i)),I.push(((e,t,n,a,o=-1,i,s,r,p,l=!0)=>{let d;const u="ComposableStable"===t&&1===n;d=o>-1?k.exitExactBPTInForOneTokenOut(s,o):(u?F.exitExactBPTInForAllTokensOut:k.exitExactBPTInForTokensOut)(s);const c=up(t,n);return as.encodeExitPool({poolId:e,poolKind:c,sender:r,recipient:p,outputReferences:i,exitPoolRequest:{assets:a,minAmountsOut:new Array(a.length).fill("0"),userData:d,toInternalBalance:l}})})(r.id,r.poolType,r.poolTypeVersion||1,y,b,f,i,d?o:t,o));const g=((e,t,n)=>{const a=({tokens:e,mainIndex:t})=>e&&t&&e[t].address||"",o=e.flatMap(a),i=t.flatMap(a),s=o.map(((e,t)=>e&&[t,i.indexOf(e)]||[-1,-1])).map((([n,a])=>{if(-1===n||-1===a)return[];const o=e[n],i=t[a];return Tp(o,i)}));return n>-1?[s[n]]:s})(r.tokens,p.tokens,b);if(g.flat().length>0){const t=g.map(((e,t)=>({path:e,inputAmount:String(f[t].key),outputReference:T[t]}))).filter((({path:e})=>e.length>0));I.push(((t,o,i,s,r=!0)=>{const p=[],l=[],d=[],u=[];i.forEach((e=>{const{path:t,inputAmount:a,outputReference:o}=e;for(let e=0;e<t.length;e++){const{poolId:o,assetIn:i,assetOut:s}=t[e];p.push(i),p.push(s),l.push(n.MaxInt256.toString()),l.push("0");const r={poolId:o,assetInIndex:2*e,assetOutIndex:2*e+1,amount:0===e?a:"0",userData:"0x"};u.push(r)}d.push({index:2*t.length-1,key:o})}));const c={sender:t,recipient:o,fromInternalBalance:!0,toInternalBalance:r};return as.encodeBatchSwap({swapType:e.SwapType.SwapExactIn,swaps:u,assets:p,funds:c,limits:l,deadline:s||a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:d})})(o,o,t))}const P=m.filter((e=>p.address!=e)).map((e=>{var t;const n=y.indexOf(e);return String(_&&T[n]||(null===(t=f[n])||void 0===t?void 0:t.key)||0)}));I.push(((e,t,a,o,i,s,r,p,l,d=!0)=>{const u=o.map((()=>n.MaxInt256)),c=k.joinExactTokensInForBPTOut(i,s),y=up(t,a);return as.encodeJoinPool({poolId:e,kind:y,sender:p,recipient:l,joinPoolRequest:{assets:o,maxAmountsIn:u,userData:c,fromInternalBalance:d},value:"0",outputReference:r})})(p.id,p.poolType,p.poolTypeVersion||1,m,P,s,String(h),o,u?o:t,!0)),!0===l&&I.push(bp(String(h))),u&&I.push(mp(u,o,t,String(h)));return fp.encodeFunctionData("multicall",[I])};class Pp{constructor({relayerAddress:e,poolsRepository:t,gaugesRepository:n,provider:a}){this.getExpectedBptOut=Pp.getExpectedBptOut,this.relayerAddress=e,this.poolsRepository=t,this.gaugesRepository=n,this.provider=a}async pool2pool({user:e,from:t,to:n,balance:a,minBptOut:o="0",authorisation:i}){const s=await Ip(t,this.poolsRepository),r=await Ip(n,this.poolsRepository),p=gp(e,this.relayerAddress,String(a),o,s,r,"0"==o,void 0,void 0,i);return{to:this.relayerAddress,data:p}}async pool2poolWithGauges({user:e,from:t,to:n,balance:a,minBptOut:o="0",authorisation:i}){const s=await this.gaugesRepository.findBy("poolId",t),r=await this.gaugesRepository.findBy("poolId",n);if(!(s&&s.poolId&&r&&r.poolId))throw new Error("Gauge not found");const p=await Ip(s.poolId,this.poolsRepository),l=await Ip(r.poolId,this.poolsRepository),d=gp(e,this.relayerAddress,String(a),o,p,l,"0"==o,s.id,r.id,i);return{to:this.relayerAddress,data:d}}async gauge2gauge({user:e,from:t,to:n,balance:a,authorisation:o}){const i=[yp(t,e,this.relayerAddress,a),mp(n,this.relayerAddress,e,a)];o&&i.unshift(cp(this.relayerAddress,!0,o));const s=fp.encodeFunctionData("multicall",[i]);return{to:this.relayerAddress,data:s}}}Pp.getExpectedBptOut=e=>{const t=fp.decodeFunctionResult("multicall",e)[0].slice(-2).filter((e=>"0x"!==e));return String(BigInt(t))};var wp,xp;!function(e){e[e.Direct=0]="Direct",e[e.TokenIn=1]="TokenIn",e[e.TokenOut=2]="TokenOut",e[e.Middle=3]="Middle"}(wp||(wp={})),function(e){e[e.BatchSwap=0]="BatchSwap",e[e.Join=1]="Join",e[e.Exit=2]="Exit"}(xp||(xp={}));class Ep{constructor(e,t,n,a,o,i,s,r,p,l){const d=this.getActionStep(e,t,n,a);this.amountIn=this.getActionAmount(o,xp.BatchSwap,d,s),this.hasTokenIn=this.actionHasTokenIn(d),this.hasTokenOut=this.actionHasTokenOut(d);const u=this.hasTokenOut?i:"0";this.minOut=this.getActionMinOut(u,r);const[c,y]=this.getActionOutputRef(d,a,s);this.nextOpRefKey=y,this.opRefStart=c,this.sender=this.getSender(this.hasTokenIn,p,l),this.receiver=this.getReceiver(this.hasTokenOut,p,l)}getActionAmount(e,t,n,a){let o=e;return(n===wp.TokenOut||n===wp.Middle&&t===xp.Join||n===wp.Middle&&t===xp.Exit)&&(o=as.toChainedReference(a-1).toString()),o}getActionOutputRef(e,t,n){let a={};return e!==wp.TokenIn&&e!==wp.Middle||(a=this.getOutputRef(n,t),n++),[a,n]}getActionMinOut(e,t){return je(a.BigNumber.from(e),a.BigNumber.from(t)).toString()}getActionStep(e,t,n,a){let o;return o=n===e&&a===t?wp.Direct:n===e?wp.TokenIn:a===t?wp.TokenOut:wp.Middle,o}getOutputRef(e,t){return{index:t,key:as.toChainedReference(e)}}getFromInternal(e,t){return!e&&!t}getToInternal(e,t){return!e&&!t}actionHasTokenIn(e){return e===wp.Direct||e===wp.TokenIn}actionHasTokenOut(e){return e===wp.Direct||e===wp.TokenOut}getSender(e,t,n){return e?t:n}getReceiver(e,t,n){return e?t:n}getPoolKind(e){let t=0;return["MetaStable","Stable","StablePhantom"].includes(e)?t=1:"ComposableStable"===e&&(t=3),t}}class Ap extends Ep{constructor(e,t,n,a,o,i,s,r){var p;super(t,n,e.assetInIndex,e.assetOutIndex,e.amount,null!==(p=e.returnAmount)&&void 0!==p?p:"0",a,i,s,r),this.opRefKey=a,this.type=xp.Exit,this.poolId=e.poolId,this.tokenOut=o[e.assetOutIndex],this.toInternalBalance=this.getToInternal(this.hasTokenOut),this.opRef=this.opRefStart}callData(e,t){const n=e.tokensList,a=new Q(t),[o]=a.sortTokens(n),i=this.tokenOut,s=o.findIndex((e=>e.toLowerCase()===i.toLowerCase())),r=Array(n.length).fill("0");r[s]=this.minOut;const p=this.amountIn,l={assets:o,minAmountsOut:r,userData:B.exitExactBPTInForOneTokenOut(p,s),toInternalBalance:this.toInternalBalance,poolId:this.poolId,poolKind:this.getPoolKind(e.poolType),sender:this.sender,recipient:this.receiver,outputReferences:this.opRef.key?[this.opRef]:[],exitPoolRequest:{}},d=as.formatExitPoolInput(l);return{params:l,encoded:as.encodeExitPool(d)}}getAmountIn(){return this.hasTokenIn?this.amountIn:"0"}getAmountOut(){return this.hasTokenOut?this.minOut:"0"}}class Sp extends Ep{constructor(e,t,n,a,o,i,s,r){var p;super(t,n,e.assetInIndex,e.assetOutIndex,e.amount,null!==(p=e.returnAmount)&&void 0!==p?p:"0",a,i,s,r),this.opRefKey=a,this.type=xp.Join,this.poolId=e.poolId,this.tokenIn=o[e.assetInIndex],this.fromInternal=this.getFromInternal(this.hasTokenIn),this.opRef=this.opRefStart}callData(e,t){const n=e.tokensList,a=new Q(t),[o]=a.sortTokens(n),i=this.tokenIn,s=o.findIndex((e=>e.toLowerCase()===i.toLowerCase())),r=Array(n.length).fill("0");r[s]=this.amountIn;const p=this.minOut,l=B.joinExactTokensInForBPTOut(r,p),d={poolId:this.poolId,sender:this.sender,recipient:this.receiver,kind:this.getPoolKind(e.poolType),joinPoolRequest:{assets:o,maxAmountsIn:r,userData:l,fromInternalBalance:this.fromInternal},value:"0",outputReference:this.opRef.key?this.opRef.key.toString():"0"};return{params:d,encoded:as.encodeJoinPool(d)}}getAmountIn(){return this.hasTokenIn?this.amountIn:"0"}getAmountOut(){return this.hasTokenOut?this.minOut:"0"}}class vp extends Ep{constructor(e,t,n,a,o,i,s,r,p){var l;super(t,n,e.assetInIndex,e.assetOutIndex,e.amount,null!==(l=e.returnAmount)&&void 0!==l?l:"0",a,i,r,p),this.mainTokenInIndex=t,this.mainTokenOutIndex=n,this.opRefKey=a,this.assets=o,this.slippage=i,this.pools=s,this.user=r,this.relayer=p,this.approveTokens=[],this.opRef=[],this.type=xp.BatchSwap,this.swaps=[{...e,amount:this.amountIn}];const d=this.isBpt(s,o[e.assetInIndex]);d&&this.approveTokens.push(o[e.assetInIndex]),this.fromInternal=this.getFromInternal(this.hasTokenIn,d);const u=this.isBpt(s,o[e.assetOutIndex]);this.toInternal=this.getToInternal(this.hasTokenOut,u),this.limits=this.getLimits(o,e.assetInIndex,e.assetOutIndex,e.amount,this.hasTokenIn,this.hasTokenOut,this.minOut),this.opRefStart.index&&this.opRef.push(this.opRefStart)}getLimits(e,t,o,i,s,r,p){const l=e.map((()=>a.BigNumber.from(0)));return l[t]=s?a.BigNumber.from(i):n.MaxInt256,r&&(l[o]=a.BigNumber.from(p).mul(-1)),l}updateLimits(e,t){t.hasTokenIn&&(e[t.swaps[0].assetInIndex]=e[t.swaps[0].assetInIndex].add(t.amountIn)),t.hasTokenOut&&(e[t.swaps[0].assetOutIndex]=e[t.swaps[0].assetOutIndex].sub(t.minOut))}isChainedSwap(e){return this.opRef[this.swaps.length-1]&&this.toInternal===e.fromInternal&&this.receiver===e.sender&&this.opRef[this.swaps.length-1].key.toString()===e.amountIn}canAddSwap(e){return!!this.isChainedSwap(e)||e.fromInternal===this.fromInternal&&e.toInternal===this.toInternal&&e.receiver===this.receiver&&e.sender===this.sender}callData(){const t=[];for(const e of this.approveTokens){const a=as.encodeApproveVault(e,n.MaxUint256.toString());t.push(a)}const o={sender:this.sender,recipient:this.receiver,fromInternalBalance:this.fromInternal,toInternalBalance:this.toInternal},i={swapType:e.SwapType.SwapExactIn,swaps:this.swaps,assets:this.assets,funds:o,limits:this.limits.map((e=>e.toString())),deadline:a.BigNumber.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:this.opRef},s=as.encodeBatchSwap(i);return t.push(s),{params:i,encoded:t}}getAmountIn(){return this.limits[this.mainTokenInIndex].toString()}getAmountOut(){return this.limits[this.mainTokenOutIndex].abs().toString()}copy(){return new vp(this.swaps[0],this.mainTokenInIndex,this.mainTokenOutIndex,this.opRefKey,this.assets,this.slippage,this.pools,this.user,this.relayer)}addSwap(e){const t=this.isChainedSwap(e);this.swaps.push(e.swaps[0]),this.approveTokens=[...new Set([...this.approveTokens,...e.approveTokens])],this.toInternal=e.toInternal,this.receiver=e.receiver,this.hasTokenOut=e.hasTokenOut,this.minOut=e.minOut,this.opRef=[...this.opRef,...e.opRef],t||(this.amountIn=a.BigNumber.from(this.amountIn).add(e.amountIn).toString()),this.updateLimits(this.limits,e)}isBpt(e,t){return e.some((e=>e.address.toLowerCase()===t.toLowerCase()))}}function kp(e){const t=function(e){const t=[],n=[],a=[];for(const o of e)o.type===xp.Exit||o.type===xp.Join?o.hasTokenIn?t.push(o):o.hasTokenOut?n.push(o):a.push(o):a.push(o);return[...t,...a,...n]}(e);return function(e){const t=[];let n;for(const a of e)a.type===xp.BatchSwap?n?n.canAddSwap(a)?n.addSwap(a):(t.push(n),n=a.copy()):n=a.copy():(n&&(t.push(n),n=void 0),t.push(a));return n&&t.push(n),t}(t)}const Bp=new t.Interface([{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}]);function Op(e){z.getInstance()}function Cp(e,t,n){if("Weighted"!==n)return!1;const a=t[e.assetOutIndex],o=L(e.poolId);return a.toLowerCase()===o.toLowerCase()}function Mp(e,t,n){if("Weighted"!==n)return!1;const a=t[e.assetInIndex],o=L(e.poolId);return a.toLowerCase()===o.toLowerCase()}Object.defineProperty(e,"PoolFilter",{enumerable:!0,get:function(){return l.PoolFilter}}),Object.defineProperty(e,"SOR",{enumerable:!0,get:function(){return l.SOR}}),Object.defineProperty(e,"SwapTypes",{enumerable:!0,get:function(){return l.SwapTypes}}),Object.defineProperty(e,"stableBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return l.stableBPTForTokensZeroPriceImpact}}),Object.defineProperty(e,"weightedBPTForTokensZeroPriceImpact",{enumerable:!0,get:function(){return l.weightedBPTForTokensZeroPriceImpact}}),e.AMP_PRECISION=3,e.APR_THRESHOLD=1e4,e.AaveLinearPoolFactory__factory=dt,e.AaveLinearPool__factory=pt,e.AaveRates=Le,e.AaveWrapping__factory=ct,e.AssetHelpers=Q,e.Authoriser__factory=mt,e.BALANCER_NETWORK_CONFIG=Cn,e.BalancerAPIArgsFormatter=ot,e.BalancerError=Rn,e.BalancerErrors=te,e.BalancerHelpers__factory=ft,e.BalancerMinterAuthorization=ie,e.BalancerMinter__factory=ht,e.BalancerPoolDataQueries__factory=_t,e.BalancerRelayer__factory=Pt,e.BalancerSDK=class{constructor(e,t=new Ui(e),n=new os(e)){this.config=e,this.sor=t,this.subgraph=n;z.getInstance().setLoggingEnabled(!!e.enableLogging),this.networkConfig=Ci(e),this.provider=t.provider,this.balancerContracts=new us(this.networkConfig.addresses.contracts,t.provider),this.data=new dp(this.networkConfig,t.provider,this.balancerContracts,e.subgraphQuery,e.coingecko),this.swaps=new es(this.config),this.relayer=new as,this.pricing=new is(e,this.swaps),this.pools=new ar(this.networkConfig,this.data,this.balancerContracts),this.data.liquidityGauges&&(this.claimService=new Na(this.data.liquidityGauges,this.data.feeDistributor,this.networkConfig.chainId,this.contracts.multicall,this.networkConfig.addresses.contracts.gaugeClaimHelper,this.networkConfig.addresses.contracts.balancerMinter),this.migrationService=new Pp({relayerAddress:this.networkConfig.addresses.contracts.balancerRelayer,poolsRepository:this.data.pools,gaugesRepository:this.data.liquidityGauges.subgraph,provider:this.provider})),this.vaultModel=new Ds(this.data.poolsForSimulations,this.networkConfig.addresses.tokens.wrappedNativeAsset)}get contracts(){return this.balancerContracts.contracts}},e.BasePoolEncoder=v,e.BatchRelayerLibrary__factory=xt,e.BlockNumberRepository=pp,e.CoingeckoHistoricalPriceRepository=$r,e.CoingeckoPriceRepository=Wr,e.ComposableStablePoolEncoder=F,e.ComposableStablePoolFactory__factory=vt,e.ComposableStablePool__factory=At,e.ConvergentCurvePool__factory=Bt,e.Data=dp,e.Debouncer=We,e.ERC20__factory=Ct,e.ERC4626LinearPoolFactory__factory=Nt,e.ERC4626LinearPool__factory=Ft,e.EulerLinearPoolFactory__factory=qt,e.EulerLinearPool__factory=Lt,e.FXPool__factory=Gt,e.FeeCollectorRepository=tp,e.FeeDistributorRepository=zr,e.GaugeClaimHelper__factory=$t,e.GaugeControllerMulticallRepository=_r,e.GaugeSharesRepository=xr,e.GearboxLinearPoolFactory__factory=jt,e.GearboxLinearPool__factory=Ht,e.GraphQLArgsBuilder=st,e.GyroConfig__factory=Yt,e.GyroEV2__factory=wn,e.HistoricalPriceProvider=Jr,e.LidoRelayer__factory=Zt,e.LinearPool__factory=en,e.Liquidity=va,e.LiquidityGaugeSubgraphRPCProvider=kr,e.LiquidityGaugeV5__factory=nn,e.LiquidityGaugesMulticallRepository=Sr,e.LiquidityGaugesSubgraphRepository=vr,e.ManagedPoolEncoder=O,e.Migrations=Pp,e.Multicall3__factory=rn,e.Multicall__factory=on,e.POOLS=function(e){return W[e]?W[e]:G},e.PoolGaugesRepository=Lr,e.PoolJoinExitRepository=qr,e.PoolSharesRepository=Vr,e.Pools=ar,e.PoolsBalancerAPIRepository=class{constructor(e){var t,n;this.pools=[],this.skip=0,this.hasFetched=!1,this.isFetching=!1,this.client=new Br(e.url,e.apiKey);this.query={args:Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||{chainId:1,orderBy:"totalLiquidity",orderDirection:"desc",where:{swapEnabled:{eq:!0},totalShares:{gt:.05}}}),attrs:Object.assign({},(null===(n=e.query)||void 0===n?void 0:n.attrs)||{id:!0,address:!0})},delete this.query.args.skip}fetchFromCache(e,t){return this.pools.slice(t,e+t)}async fetch(e){const t=(null==e?void 0:e.first)||10,n=(null==e?void 0:e.skip)||0;return this.hasFetched||this.fetchAll(e),await this.awaitEnoughPoolsFetched(t,n),this.fetchFromCache(t,n)}async fetchAll(e){this.isFetching=!0,this.hasFetched=!0,this.nextToken&&(this.query.args.nextToken=this.nextToken),this.query.args.first=1e3;const t=new st(this.query.args).format(new ot),n=this.query.attrs;n.nextToken=!0;const a={pools:{__args:t,...n}},o=(await this.client.get(a)).pools;if(this.nextToken=o.nextToken,this.pools=this.pools.concat(o.pools.map(this.format)),this.nextToken)return await this.fetchAll(e);this.isFetching=!1}async awaitEnoughPoolsFetched(e,t){for(let n=0;n<1e3;n++){if(this.pools.length>e+t)return;if(!this.isFetching)return;await Or(10)}}async find(e){return 0==this.pools.length&&await this.fetch(),this.findBy("id",e)}async findBy(e,t){0==this.pools.length&&await this.fetch();const n=this.pools.find((n=>n[e]==t));if(n)return this.format(n)}format(e){var t,n,a,o;if(null===(t=e.apr)||void 0===t?void 0:t.rewardAprs.breakdown){const t=JSON.parse(null===(n=e.apr)||void 0===n?void 0:n.rewardAprs.breakdown);e.apr.rewardAprs.breakdown=t}if(null===(a=e.apr)||void 0===a?void 0:a.tokenAprs.breakdown){const t=JSON.parse(null===(o=e.apr)||void 0===o?void 0:o.tokenAprs.breakdown);e.apr.tokenAprs.breakdown=t}return e}},e.PoolsFallbackRepository=class{constructor(e,t={}){this.providers=e,this.currentProviderIdx=0,this.timeout=t.timeout||1e4}async fetch(e){return this.fallbackQuery("fetch",[e])}get currentProvider(){if(this.providers.length&&!(this.currentProviderIdx>=this.providers.length))return this.providers[this.currentProviderIdx]}async find(e){return this.fallbackQuery("find",[e])}async findBy(e,t){return this.fallbackQuery("findBy",[e,t])}async fallbackQuery(e,t){if(this.currentProviderIdx>=this.providers.length)throw new Error("No working providers found");let n;try{const a=this.providers[this.currentProviderIdx];n=await Promise.race([a[e].apply(a,t),new Promise(((e,t)=>setTimeout((()=>t(new Error("timeout"))),this.timeout)))])}catch(a){const o=a.message;if("timeout"===o){z.getInstance().warn("Provider "+this.currentProviderIdx+" timed out, falling back to next provider")}else{const e=z.getInstance();e.warn(`Provider ${this.currentProviderIdx} failed with error, falling back to next provider.`),e.warn(o)}this.currentProviderIdx++,n=await this.fallbackQuery.call(this,e,t)}return n}},e.PoolsStaticRepository=class{constructor(e){this.pools=e}async find(e){return this.pools.find((t=>t.id.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.pools.find((n=>n[e]===t))}async all(){return this.pools}async where(e){return(await this.all()).filter(e)}},e.PoolsSubgraphOnChainRepository=Dr,e.PoolsSubgraphRepository=Nr,e.ProtocolFeesProvider=op,e.Relayer=as,e.RelayerAuthorization=oe,e.SHALLOW_COMPOSABLE_STABLE_BUFFER=1e6,e.Sor=Ui,e.StablePoolEncoder=k,e.StablePool__factory=ln,e.StaticATokenRateProvider__factory=un,e.StaticTokenPriceProvider=class{constructor(e){this.tokenPrices=Object.fromEntries(Object.entries(e).map((([e,t])=>[e.toLowerCase(),t])))}async find(e){const t=e.toLowerCase(),n=this.tokenPrices[t];if(n)return n}async findBy(e,t){if("address"==e)return this.find(t)}},e.StaticTokenProvider=Gr,e.Subgraph=os,e.SubgraphArgsFormatter=it,e.SubgraphPriceRepository=Kr,e.Swaps=es,e.TokenPriceProvider=Hr,e.TokenYieldsRepository=ip,e.Vault__factory=yn,e.VeBal__factory=En,e.VeDelegationProxy__factory=Sn,e.WeightedPoolEncoder=B,e.WeightedPoolFactory__factory=Tn,e.WeightedPool__factory=bn,e.YearnLinearPoolFactory__factory=gn,e.YearnLinearPool__factory=In,e.accountToAddress=ne,e.addSlippage=Xe,e.addressMapIn=qe,e.balEmissions=Is,e.bn=e=>a.parseFixed(`${e}`,18),e.buildRelayerCalls=function(t,n,o,i,s,r,p){const l=function(e,t,n,a,o,i,s,r){var p;const l=a.findIndex((t=>t.toLowerCase()===e.toLowerCase())),d=a.findIndex((e=>e.toLowerCase()===t.toLowerCase())),u=[];let c=0;for(const e of n){const t=null===(p=i.find((t=>t.id===e.poolId)))||void 0===p?void 0:p.poolType;if(Cp(e,a,t)){const t=new Sp(e,l,d,c,a,o,s,r);c=t.nextOpRefKey,u.push(t)}else{if(!Mp(e,a,t)){const t=new vp(e,l,d,c,a,o,i,s,r);c=t.nextOpRefKey,u.push(t);continue}{const t=new Ap(e,l,d,c,a,o,s,r);c=t.nextOpRefKey,u.push(t)}}}return u}(t.tokenIn,t.tokenOut,t.swaps,t.tokenAddresses,r,n,o,i),d=kp(l),u=[],c=[];p&&u.push(as.encodeSetRelayerApproval(i,!0,p));for(const t of d){if(t.type===xp.Exit||t.type===xp.Join){const a=n.find((e=>e.id===t.poolId));if(void 0===a)throw new Rn(e.BalancerErrorCode.NO_POOL_DATA);const{params:o,encoded:i}=t.callData(a,s);u.push(i),c.push(o)}if(t.type===xp.BatchSwap){const{params:e,encoded:n}=t.callData();u.push(...n),c.push(e)}}return function(t,n,o,i){const s=t.reduce(((e=a.BigNumber.from(0),t)=>e.add(t))),r=n.reduce(((e=a.BigNumber.from(0),t)=>e.add(t)));Op(s.toString()),Op(o.swapAmount.toString()),Op(r.toString()),Op(je(o.returnAmount,a.BigNumber.from(i)).toString()),Op(o.returnAmount.toString());const p=r.sub(je(o.returnAmount,a.BigNumber.from(i)));if(!s.eq(o.swapAmount)||!p.lt("3"))throw new Rn(e.BalancerErrorCode.RELAY_SWAP_AMOUNTS)}(d.map((e=>a.BigNumber.from(e.getAmountIn()))),d.map((e=>a.BigNumber.from(e.getAmountOut()))),t,r),{to:i,data:Bp.encodeFunctionData("multicall",[u]),rawCalls:u,inputs:c}},e.canUseJoinExit=function(e,t,a){return e!==l.SwapTypes.SwapExactOut&&t.toLowerCase()!==n.AddressZero.toLowerCase()&&a.toLowerCase()!==n.AddressZero.toLowerCase()},e.factories=kn,e.fetchOnChainPoolData=vi,e.findEventInReceiptLogs=nt,e.formatFixed=Ke,e.formatFromBigInt18=function(e){return a.formatFixed(a.BigNumber.from(e),18)},e.getEthValue=Ge,e.getLimitsForSlippage=Bn,e.getOnChainBalances=ki,e.getPoolAddress=L,e.getPoolNonce=q,e.getPoolSpecialization=U,e.getRandomBytes32=at,e.insert=ze,e.isLinearish=tt,e.isNormalizedWeights=e=>{const t=e.reduce(((e,t)=>e.add(t)),n.Zero);return t.eq(n.WeiPerEther)},e.isSameAddress=Ye,e.mulSlippage=Je,e.parseFixed=$e,e.parsePoolInfo=Te,e.parseToBigInt18=function(e){return $e(e,18).toBigInt()},e.removeItem=Qe,e.reorderArrays=et,e.replace=Ze,e.signPermit=async(e,t,o,s,r=n.MaxUint256,p)=>{const{chainId:l}=await e.provider.getNetwork(),d=await t.getAddress();p||(p=await e.nonces(d));const u={name:await e.name(),version:"1",chainId:l,verifyingContract:e.address},c={owner:d,spender:await ne(o),value:s,nonce:p,deadline:r},y=await t._signTypedData(u,{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},c);return{...i.splitSignature(y),deadline:a.BigNumber.from(r),nonce:a.BigNumber.from(p)}},e.someJoinExit=function(e,t,n){return t.some((t=>function(e,t,n){const a=e.find((e=>e.id===t.poolId));return"Weighted"===(null==a?void 0:a.poolType)&&[n[t.assetInIndex],n[t.assetOutIndex]].includes(a.address)}(e,t,n)))},e.splitPoolId=e=>({address:L(e),specialization:U(e),nonce:q(e)}),e.subSlippage=je,e.toNormalizedWeights=function(e){if(100==e.length)return Array(100).fill(n.WeiPerEther.div(100));const t=e.reduce(((e,t)=>e.add(t)),n.Zero);if(t.eq(n.WeiPerEther))return e;const a=[];let o=n.Zero;for(let i=0;i<e.length;i++)i<e.length-1?(a[i]=e[i].mul(n.WeiPerEther).div(t),o=o.add(a[i])):a[i]=n.WeiPerEther.sub(o);return a},e.tokenAddressForPricing=Ue,e.tokensToTokenPrices=function(e){const t={};return e.forEach((e=>{e.price&&(t[e.address]=e.price)})),t},e.truncateAddresses=function(e){return e.map((e=>`${e.slice(0,6)}...${e.slice(38,42)}`))},e.unwrapToken=Ve,e.wrappedTokensMap=Ne,e.yieldTokens=Re,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=index.umd.js.map
